/*
Deployment script for xog_db

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "xog_db"
:setvar DefaultFilePrefix "xog_db"
:setvar DefaultDataPath "C:\Users\sadas\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB\"
:setvar DefaultLogPath "C:\Users\sadas\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO

IF (SELECT OBJECT_ID('tempdb..#tmpErrors')) IS NOT NULL DROP TABLE #tmpErrors
GO
CREATE TABLE #tmpErrors (Error int)
GO
SET XACT_ABORT ON
GO
SET TRANSACTION ISOLATION LEVEL READ COMMITTED
GO
BEGIN TRANSACTION
GO
PRINT N'Dropping Default Constraint unnamed constraint on [dbo].[ReturnOrders]...';


GO
ALTER TABLE [dbo].[ReturnOrders] DROP CONSTRAINT [DF__ReturnOrd__IsRet__160F4887];


GO
IF @@ERROR <> 0
   AND @@TRANCOUNT > 0
    BEGIN
        ROLLBACK;
    END

IF OBJECT_ID(N'tempdb..#tmpErrors') IS NULL
    CREATE TABLE [#tmpErrors] (
        Error INT
    );

IF @@TRANCOUNT = 0
    BEGIN
        INSERT  INTO #tmpErrors (Error)
        VALUES                 (1);
        BEGIN TRANSACTION;
    END


GO
PRINT N'Creating Table [dbo].[ReturnOrderDetails]...';


GO
CREATE TABLE [dbo].[ReturnOrderDetails] (
    [Id]               BIGINT     IDENTITY (1, 1) NOT NULL,
    [ReturnOrderId]    BIGINT     NOT NULL,
    [ProductVariantId] BIGINT     NOT NULL,
    [Quantity]         INT        NOT NULL,
    [Price]            FLOAT (53) NOT NULL,
    [Discount]         FLOAT (53) NOT NULL,
    [Gst]              SMALLINT   NOT NULL,
    [Cost]             FLOAT (53) NOT NULL,
    CONSTRAINT [PK_ReturnOrderDetails] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
IF @@ERROR <> 0
   AND @@TRANCOUNT > 0
    BEGIN
        ROLLBACK;
    END

IF OBJECT_ID(N'tempdb..#tmpErrors') IS NULL
    CREATE TABLE [#tmpErrors] (
        Error INT
    );

IF @@TRANCOUNT = 0
    BEGIN
        INSERT  INTO #tmpErrors (Error)
        VALUES                 (1);
        BEGIN TRANSACTION;
    END


GO
PRINT N'Creating Default Constraint unnamed constraint on [dbo].[ReturnOrders]...';


GO
ALTER TABLE [dbo].[ReturnOrders]
    ADD DEFAULT (0) FOR [IsReturn];


GO
IF @@ERROR <> 0
   AND @@TRANCOUNT > 0
    BEGIN
        ROLLBACK;
    END

IF OBJECT_ID(N'tempdb..#tmpErrors') IS NULL
    CREATE TABLE [#tmpErrors] (
        Error INT
    );

IF @@TRANCOUNT = 0
    BEGIN
        INSERT  INTO #tmpErrors (Error)
        VALUES                 (1);
        BEGIN TRANSACTION;
    END


GO
PRINT N'Creating Foreign Key [dbo].[FK_ReturnOrderDetails_Orders]...';


GO
ALTER TABLE [dbo].[ReturnOrderDetails] WITH NOCHECK
    ADD CONSTRAINT [FK_ReturnOrderDetails_Orders] FOREIGN KEY ([ReturnOrderId]) REFERENCES [dbo].[ReturnOrders] ([Id]) ON DELETE CASCADE;


GO
IF @@ERROR <> 0
   AND @@TRANCOUNT > 0
    BEGIN
        ROLLBACK;
    END

IF OBJECT_ID(N'tempdb..#tmpErrors') IS NULL
    CREATE TABLE [#tmpErrors] (
        Error INT
    );

IF @@TRANCOUNT = 0
    BEGIN
        INSERT  INTO #tmpErrors (Error)
        VALUES                 (1);
        BEGIN TRANSACTION;
    END


GO
PRINT N'Creating Foreign Key [dbo].[FK_ReturnOrderDetails_ProductVariants]...';


GO
ALTER TABLE [dbo].[ReturnOrderDetails] WITH NOCHECK
    ADD CONSTRAINT [FK_ReturnOrderDetails_ProductVariants] FOREIGN KEY ([ProductVariantId]) REFERENCES [dbo].[ProductVariants] ([Id]) ON DELETE CASCADE;


GO
IF @@ERROR <> 0
   AND @@TRANCOUNT > 0
    BEGIN
        ROLLBACK;
    END

IF OBJECT_ID(N'tempdb..#tmpErrors') IS NULL
    CREATE TABLE [#tmpErrors] (
        Error INT
    );

IF @@TRANCOUNT = 0
    BEGIN
        INSERT  INTO #tmpErrors (Error)
        VALUES                 (1);
        BEGIN TRANSACTION;
    END


GO

IF EXISTS (SELECT * FROM #tmpErrors) ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT>0 BEGIN
PRINT N'The transacted portion of the database update succeeded.'
COMMIT TRANSACTION
END
ELSE PRINT N'The transacted portion of the database update failed.'
GO
IF (SELECT OBJECT_ID('tempdb..#tmpErrors')) IS NOT NULL DROP TABLE #tmpErrors
GO
GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[ReturnOrderDetails] WITH CHECK CHECK CONSTRAINT [FK_ReturnOrderDetails_Orders];

ALTER TABLE [dbo].[ReturnOrderDetails] WITH CHECK CHECK CONSTRAINT [FK_ReturnOrderDetails_ProductVariants];


GO
PRINT N'Update complete.';


GO
