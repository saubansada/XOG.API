{"version":3,"sources":["webpack:///src/app/desktop/components/server-down/server-down.component.ts","webpack:///src/app/desktop/components/server-down/server-down.component.html","webpack:///src/app/desktop/components/wb-add-new-address/wb-add-new-address.component.html","webpack:///src/app/desktop/components/wb-add-new-address/wb-add-new-address.component.ts","webpack:///src/app/desktop/components/wb-bank-accounts/wb-bank-accounts.component.html","webpack:///src/app/desktop/components/wb-bank-accounts/wb-bank-accounts.component.ts","webpack:///src/app/desktop/components/wb-footer-banner/wb-footer-banner.component.ts","webpack:///src/app/desktop/components/wb-footer-banner/wb-footer-banner.component.html","webpack:///src/app/desktop/components/wb-footer/wb-footer.component.ts","webpack:///src/app/desktop/components/wb-footer/wb-footer.component.html","webpack:///src/app/desktop/components/wb-home-brands/wb-home-brands.component.ts","webpack:///src/app/desktop/components/wb-home-brands/wb-home-brands.component.html","webpack:///src/app/desktop/components/wb-main-banner/wb-main-banner.component.ts","webpack:///src/app/desktop/components/wb-main-banner/wb-main-banner.component.html","webpack:///src/app/desktop/components/wb-my-address/wb-my-address.component.html","webpack:///src/app/desktop/components/wb-my-address/wb-my-address.component.ts","webpack:///src/app/desktop/components/wb-my-cart/wb-my-cart.component.html","webpack:///src/app/desktop/components/wb-my-cart/wb-my-cart.component.ts","webpack:///src/app/desktop/components/wb-my-notifs/wb-my-notifs.component.ts","webpack:///src/app/desktop/components/wb-my-notifs/wb-my-notifs.component.html","webpack:///src/app/desktop/components/wb-my-order-details/wb-my-order-details.component.html","webpack:///src/app/desktop/components/wb-my-order-details/wb-my-order-details.component.ts","webpack:///src/app/desktop/components/wb-my-wallet/wb-my-wallet.component.html","webpack:///src/app/desktop/components/wb-my-wallet/wb-my-wallet.component.ts","webpack:///src/app/desktop/components/wb-myorders/wb-myorders.component.html","webpack:///src/app/desktop/components/wb-myorders/wb-myorders.component.ts","webpack:///src/app/desktop/components/wb-navbar/wb-navbar.component.html","webpack:///src/app/desktop/components/wb-navbar/wb-navbar.component.ts","webpack:///src/app/desktop/components/wb-offers/wb-offers.component.html","webpack:///src/app/desktop/components/wb-offers/wb-offers.component.ts","webpack:///src/app/desktop/components/wb-order-details/wb-order-details.component.html","webpack:///src/app/desktop/components/wb-order-details/wb-order-details.component.ts","webpack:///src/app/desktop/components/wb-order-succssfull/wb-order-succssfull.component.ts","webpack:///src/app/desktop/components/wb-order-succssfull/wb-order-succssfull.component.html","webpack:///src/app/desktop/components/wb-orders/wb-orders.component.ts","webpack:///src/app/desktop/components/wb-orders/wb-orders.component.html","webpack:///src/app/desktop/components/wb-place-orders/wb-place-orders.component.html","webpack:///src/app/desktop/components/wb-place-orders/wb-place-orders.component.ts","webpack:///src/app/desktop/components/wb-product-item-card/wb-product-item-card.component.html","webpack:///src/app/desktop/components/wb-product-item-card/wb-product-item-card.component.ts","webpack:///src/app/desktop/components/wb-product-overview-modal/wb-product-overview-modal.component.html","webpack:///src/app/desktop/components/wb-product-overview-modal/wb-product-overview-modal.component.ts","webpack:///src/app/desktop/components/wb-product-variants-modal/wb-product-variants-modal.component.html","webpack:///src/app/desktop/components/wb-product-variants-modal/wb-product-variants-modal.component.ts","webpack:///src/app/desktop/components/wb-profile/wb-profile.component.ts","webpack:///src/app/desktop/components/wb-profile/wb-profile.component.html","webpack:///src/app/desktop/components/wb-search/wb-search.component.html","webpack:///src/app/desktop/components/wb-search/wb-search.component.ts","webpack:///src/app/desktop/components/wb-secondary-banner/wb-secondary-banner.component.html","webpack:///src/app/desktop/components/wb-secondary-banner/wb-secondary-banner.component.ts","webpack:///src/app/desktop/components/wb-shop-by-brands/wb-shop-by-brands.component.ts","webpack:///src/app/desktop/components/wb-shop-by-brands/wb-shop-by-brands.component.html","webpack:///src/app/desktop/components/wb-shop-by-category/wb-shop-by-category.component.html","webpack:///src/app/desktop/components/wb-shop-by-category/wb-shop-by-category.component.ts","webpack:///src/app/desktop/components/wb-suggested-products/wb-suggested-products.component.html","webpack:///src/app/desktop/components/wb-suggested-products/wb-suggested-products.component.ts","webpack:///src/app/desktop/components/wb-timing-selector/wb-timing-selector.component.html","webpack:///src/app/desktop/components/wb-timing-selector/wb-timing-selector.component.ts","webpack:///src/app/desktop/components/wb-two-banners/wb-two-banners.component.ts","webpack:///src/app/desktop/components/wb-two-banners/wb-two-banners.component.html","webpack:///src/app/desktop/components/wb-wallet-history/wb-wallet-history.component.ts","webpack:///src/app/desktop/components/wb-wallet-history/wb-wallet-history.component.html","webpack:///src/app/desktop/components/wb-wallet-redeem/wb-wallet-redeem.component.html","webpack:///src/app/desktop/components/wb-wallet-redeem/wb-wallet-redeem.component.ts","webpack:///src/app/desktop/desktop.module.ts","webpack:///src/app/desktop/views/desktop-home/desktop-home.component.ts","webpack:///src/app/desktop/views/desktop-home/desktop-home.component.html","webpack:///src/app/desktop/views/desktop-layout/desktop-layout.component.ts","webpack:///src/app/desktop/views/desktop-layout/desktop-layout.component.html","webpack:///src/app/desktop/views/product-catalogue/product-catalogue.component.html","webpack:///src/app/desktop/views/product-catalogue/product-catalogue.component.ts","webpack:///src/app/models/notification.ts","webpack:///src/app/services/notification.service.ts"],"names":["ServerDownComponent","WbAddNewAddressComponent","injector","addressService","_location","modalId","isLoading","submitted","path","_isGPS","formInstance","fb","group","Id","FullName","Validators","PhoneNumber","AreaCode","AddressLine1","AddressLine2","LandMark","Country","GPS","IsDefault","isEditMode","errorIntrcptr","httpError$","subscribe","res","messageShown","Result","router","navigateByUrl","_active","clearAddressValidators","setGPSValidators","setAddressValidators","clearGPSValidators","get","showModal","modalClose","pos","url","lastIndexOf","orderQuery","substring","length","isNaN","id","parseInt","getAddressInfo","patchValue","Data","outletUrls","indexOf","push","navigate","outlets","action","primary","addressLine1","setValidators","addressLine2","landMark","country","clearValidators","gps","valid","showFullSpinner","address","value","editAddressInfo","hideFullSpinner","close","addAddressInfo","reset","split","back","BaseComponent","navigateBack","WbBankAcccountsComponent","bankAccountService","deletionAccount","currentSwitcherIndex","AccountOfUserId","BankName","AccountNumber","IFSCCode","AccountName","_switcher","UIkit","switcher","animation","index","setTimeout","show","loadBankAccounts","returnUrl","getBankAccountList","bankAccounts","bankAccount","addBankAccountInfo","deleteAccount","confirmDelete","WbFooterBannerComponent","WbFooterComponent","assetsUrl","environment","WbHomeBrandsComponent","WbMainBannerComponent","assetUrl","WbMyAddressComponent","authService","addresses","ngOnInit","filter","i","selectedId","loadAddresses","AddressFilter","UserId","currentUserValue","userId","getAddressList","console","log","deleteAddress","addAddress","WbMyCartComponent","cartService","productService","cartId","productCartList","imgUrl","getCartList","reduce","sum","item","Quantity","ProductVariant","Price","offcanvas","hide","util","on","loadProducts","cartUpdated","cartItem","undefined","findIndex","ProductVariantId","splice","cartList","showSpinner","ProductFilter","Ids","map","join","getProductVariantList","variantList","forEach","vItem","cItem","hideSpinner","removeItem","addItem","decreaseItem","cartClosed","WbMyNotificationComponent","notifService","notifId","productNotifList","getNotificationList","notificationUpdated","notifItem","notifList","notifClosed","WbMyOrderDetailsComponent","orderService","uploadsUrl","orderStatuses","enumToKeyValueArray","OrderStatus","initOrderStatus","order","OrderState","loadOrder","getOrderInfo","Purchases","ProductImage","ImageUrl","replace","apiRequestService","showMessage","Message","data","orderStatus","found","excludeList","status","done","includes","skipLocationChange","hideModal","TotalQuantity","elementId","ele","document","getElementById","hasAttribute","removeAttribute","setAttribute","toggle","Object","assign","updateOrderStatus","orderCancelConfirm","toggleTracking","cancelOrder","WbMyWalletComponent","walletService","loadWalletInfo","getWalletList","walletList","currentBalance","Amount","WbMyordersComponent","camelCaseToSpacedText","transformCamelToSpaces","OrderFilter","getOrderList","orders","WbNavbarComponent","spinner","noAction","requireOTP","getCartCount","logout","WbOffersComponent","offerSeervice","offerBanners","OfferFilter","getOfferBannerList","BannerImageUrl","WbOrderDetailsComponent","WbOrderSuccssfullComponent","placeOrderService","placeOrderStatus","orderId","backHome","placedOrderValue","modal","replaceUrl","WbOrdersComponent","JSON","stringify","WbPlaceOrdersComponent","placeOrderId","Order","razorPayOptions","paymentMethod","PaymentType","razorPayModal","ondismiss","razorPayDismiss","bind","escape","backdropclose","RelDay","TimePeriod","IsDelivery","UseWallet","ind","orderTimeSlotStatus","selectedTimeSlot","timePeriod","setValue","TimePeriodId","setSelectedTimeSlot","cartItems","currentWalletBalance","relDay","OrderDate","Date","PaymentMode","useWallet","isDirectPlace","cartTotal","placeOrder","clearList","orderPlacedSuccessfully","amount","Discount","request","CartList","post","payment","RazorPayOrderId","callback","response","PaymentId","razorpay_payment_id","PaymentOrderId","razorpay_order_id","PaymentSignature","razorpay_signature","ref","order_id","handler","razorPayHandler","prefill","name","email","contact","razorPay","Razorpay","open","modalType","ModalType","utilities","openModalDialog","submit","openTimeSelectionModal","WbProductItemCardComponent","selectedIndex","product","ProductVariants","count","getProductCartCount","openProductOverView","openProductVariants","WbProductOverviewModalComponent","selectedProduct","WbProductVariantsModalComponent","closeModalDialog","variant","WbProfileComponent","userrService","userService","UserName","FirstName","LastName","Email","isAddOrEdit","force","getCurrentUserDetails","userInfo","editModal","saveUserDetails","IsSuccess","loadCurrentUseerDetails","submitForm","WbSearchComponent","Search","productList","errorMsg","productFilter","PageSize","searchCtrl","valueChanges","pipe","debounceTime","tap","switchMap","getProductList","finalize","processProductList","list","_res","images","ProductImages","img","q","drop","searchPerformed","WbSecondaryBannerComponent","Placement","OfferBannerPlacement","WbShopByBrandsComponent","WbShopByCategoryComponent","categoryService","categoryList","categoryClicked","EventEmitter","emit","getCategoryList","CategoryImage","WbSuggestedProductsComponent","WbTimingSelectorComponent","services","dayList","selectedSlot","selectedSlotItem","DeliveryTimingFilter","getDeliveryTimingsList","timingList","date","getDay","selected","find","WeekDayId","DayName","Title","TimeSlots","addDays","itemIndex","IsTimingActive","timeSelected","shouldClose","WbTwoBannersComponent","WbWalletHistoryComponent","WbWalletRedeemComponent","redeemRequestService","redeemRequestList","redeemRequestDetails","bankAccountForm","BankAccountId","loadRedeemHistory","getRedeemRequestList","RequestedByUserId","BankAccountNumber","RequestState","RequestDateTime","RequestCompletionDateTime","createRedeemRequest","navigateBankAccounts","categoryRoutes","outletAction","canActivate","RoleGuardService","roles","Role","component","outlet","TwoFactorComponent","LoginComponent","desktopRoutes","DesktopLayoutComponent","children","DesktopHomeComponent","ProductCatalogueComponent","DesktopModule","connection","SharedModule","CommonModule","RouterModule","displayCart","featuredProducts","suggestedProducts","currentRoute","PageNumber","event","RouteKey","onCategoryClicked","notifierService","title","currentNotification","setUpNotifier","dialogRequest","onMessage$","trim","checkCounterForSimilarMessage","notify","callBack","existingIndex","subCategoryService","productGroupService","header","categories","subCategories","productGroups","categoryFilter","CategoryFilter","subCategoryFilter","SubCategoryFilter","productGroupFilter","ProductGroupFilter","isNoMore","childSubs","subCategorySub","isProductLoading","asyncCount","j","productGroupId","categoryKey","subCategoryKey","route","firstChild","params","selectedOffer","categoryId","checkOfferId","loadProductFromStart","queryParamMap","searchKey","subCategoryId","productGroupKey","groupKey","loadCategories","loadSubCategories","loadAfterAsync","loadOffers","OfferUrl","DisplayName","getSubCategoryList","subCategory","SubCategoryName","SubCategoryId","getProductGroupList","category","stopPropagation","nav","navigateCategoryLink","CategoryId","loadProductGroups","CategoryKey","SubCategoryKey","ProductGroupKey","ProductGroupId","OfferId","ProductQueryType","products","target","offsetHeight","scrollTop","scrollHeight","onScroll","navigateHome","Notification","NotificationView","NotificationService","_updateNotification","Subject","asObservable","storage_key","notificationList","loadNotificationList","productId","notificationItem","saveNotificationList","next","parse","localStorage","getItem","setItem"],"mappings":"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","file":"src_app_desktop_desktop_module_ts-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-server-down',\n  templateUrl: './server-down.component.html',\n  styleUrls: ['./server-down.component.scss']\n})\nexport class ServerDownComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div style=\"height: 100vh; text-align: center;\">\n    <app-wb-navbar [noAction]=\"true\"></app-wb-navbar>\n    <app-wb-main-banner></app-wb-main-banner>\n\n    Can't reach server!\n</div>","<div id=\"modal-container\">\r\n\r\n    <div [id]=\"modalId\" uk-scrollspy=\"target: > div; cls: uk-animation-slide-right-medium;\" uk-modal bg-close=\"false\"\r\n        container=\"#pmodal-container\" esc-close=\"false\">\r\n        <div class=\"uk-modal-dialog uk-modal-body uk-height-1-1@s add-address-modal\">\r\n\r\n            <p class=\"modal-heading uk-margin-small-bottom\">\r\n                <a (click)=\"navigateBack()\"><span class=\"material-icons-outlined back-btn\">\r\n                        arrow_back\r\n                    </span></a> {{ isEditMode ? \"Edit \" : \"Add \"}} address\r\n            </p>\r\n            <button class=\"uk-modal-close-default\" type=\"button\" uk-close></button>\r\n\r\n\r\n            <div class=\"uk-child-width-1-1@s uk-child-width-1-1@m uk-text-center\" uk-grid>\r\n                <div>\r\n                    <ngx-spinner [name]=\"loadSpinner\">\r\n                    </ngx-spinner>\r\n        \r\n                    <div class=\"uk-card  uk-padding-remove uk-card-body\"  *ngIf=\"!isLoading\">\r\n\r\n                        <div class=\"uk-text-center\" uk-grid>\r\n                            <div class=\"uk-width-expand@m\">\r\n                                <div class=\"uk-card uk-card-body address-grid uk-padding-remove uk-margin-small-top\">\r\n\r\n                                    <form [formGroup]=\"formInstance\" (ngSubmit)=\"submitted = true; onSubmit()\"\r\n                                        class=\"uk-grid-small uk-margin uk-text-left\" uk-grid>\r\n                                        <div class=\"uk-width-1-2@s\">\r\n                                            <label for=\"FullName\" class=\"primary-label\">Contact Person Name</label>\r\n                                            <input [formControlName]=\"'FullName'\" class=\"uk-input address-input\"\r\n                                                type=\"text\" placeholder=\"Name *\"\r\n                                                [class.uk-form-danger]=\"submitted && fullName?.invalid\">\r\n                                        </div>\r\n                                        <div class=\"uk-width-1-2@s\">\r\n                                            <label for=\"PhoneNumber\" class=\"primary-label\">Contact Person Phone</label>\r\n                                            <input [formControlName]=\"'PhoneNumber'\" class=\"uk-input address-input\"\r\n                                                type=\"text\" placeholder=\"Mobile *\"\r\n                                                [class.uk-form-danger]=\"submitted && phoneNumber?.invalid\">\r\n                                        </div>\r\n                                        <div class=\"uk-width-1-1@s\">\r\n                                            <label for=\"AddressLine1\" class=\"primary-label\">Street Name</label>\r\n                                            <input [formControlName]=\"'AddressLine1'\" class=\"uk-input address-input\"\r\n                                                type=\"text\" placeholder=\"Address *\"\r\n                                                [class.uk-form-danger]=\"submitted && addressLine1?.invalid\">\r\n                                        </div>\r\n                                        <div class=\"uk-width-1-2@s\">\r\n                                            <label for=\"AddressLine2\" class=\"primary-label\">Flat, Floor, Building Name</label>\r\n                                            <input [formControlName]=\"'AddressLine2'\" class=\"uk-input address-input\"\r\n                                                type=\"text\" placeholder=\"Office/House No *\"\r\n                                                [class.uk-form-danger]=\"submitted && addressLine2?.invalid\">\r\n                                        </div>\r\n                                        <div class=\"uk-width-1-2@s\">\r\n                                            <label for=\"LandMark\" class=\"primary-label\">Nearest Landmark</label>\r\n                                            <input [formControlName]=\"'LandMark'\" class=\"uk-input address-input\"\r\n                                                type=\"text\" placeholder=\"Landmark *\"\r\n                                                [class.uk-form-danger]=\"submitted && landMark?.invalid\">\r\n                                        </div>\r\n                                        <div class=\"uk-width-1-1@s\">\r\n                                            <div class=\"uk-padding-small uk-text-center\">\r\n\r\n                                                <label for=\"IsDefault\" class=\"address-default-checkbox\"> <input\r\n                                                        id=\"IsDefault\" [formControlName]=\"'IsDefault'\"\r\n                                                        class=\"uk-checkbox\" type=\"checkbox\">\r\n                                                    &nbsp;Make this as default\r\n                                                </label>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div class=\"uk-width-1-1\">\r\n                                            <button type=\"submit\" class=\"uk-button address-save-btn uk-width-1-1\">Save\r\n                                                Address</button>\r\n                                        </div>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n</div>","import { Component, Injector, Input, OnInit } from '@angular/core';\r\nimport { FormGroup, Validators } from '@angular/forms';\r\nimport { ParamMap, Params, RoutesRecognized } from '@angular/router';\r\nimport { map, switchMap } from 'rxjs/operators';\r\nimport { Address } from 'src/app/models/address';\r\nimport { ResponseObject, Result } from 'src/app/models/common';\r\nimport { AddressesService } from 'src/app/services/api-services/address.service';\r\nimport { BaseComponent } from 'src/app/shared/base.component';\r\nimport { Location } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-wb-add-new-address',\r\n  templateUrl: './wb-add-new-address.component.html',\r\n  styleUrls: ['./wb-add-new-address.component.scss']\r\n})\r\nexport class WbAddNewAddressComponent extends BaseComponent implements OnInit {\r\n\r\n  @Input() modalId: string = 'add-address-modal';\r\n\r\n  isLoading: boolean = false;\r\n\r\n  submitted: boolean = false;\r\n\r\n  path: string = 'edit-address'\r\n \r\n  routerSubscription: any; \r\n\r\n  @Input() set active(_active: boolean) {\r\n  }\r\n \r\n  private _isGPS: boolean = false;\r\n\r\n  set isGPS(_isGPS: boolean) {\r\n    this._isGPS = _isGPS;\r\n    if (_isGPS) {\r\n      this.clearAddressValidators();\r\n      this.setGPSValidators();\r\n    }\r\n    else {\r\n      this.setAddressValidators();\r\n      this.clearGPSValidators();\r\n    }\r\n  };\r\n\r\n  get isGPS(): boolean {\r\n    return this._isGPS;\r\n  }\r\n\r\n  formInstance: FormGroup = this.fb.group({\r\n    Id: [''],\r\n    FullName: ['', [Validators.required]],\r\n    PhoneNumber: ['', [Validators.required]],\r\n    AreaCode: [''],\r\n    AddressLine1: [''],\r\n    AddressLine2: [''],\r\n    LandMark: [''],\r\n    Country: ['India'],\r\n    GPS: [''],\r\n    IsDefault: [false]\r\n  })\r\n\r\n  get fullName() { return this.formInstance.get(\"FullName\") }\r\n  get phoneNumber() { return this.formInstance.get(\"PhoneNumber\") }\r\n  get areaCode() { return this.formInstance.get(\"AreaCode\") }\r\n  get addressLine1() { return this.formInstance.get(\"AddressLine1\") }\r\n  get addressLine2() { return this.formInstance.get(\"AddressLine2\") }\r\n  get landMark() { return this.formInstance.get(\"LandMark\") }\r\n  get country() { return this.formInstance.get(\"Country\") }\r\n  get gps() { return this.formInstance.get(\"GPS\") }\r\n\r\n  isEditMode: boolean = false;\r\n\r\n  constructor(protected injector: Injector, private addressService: AddressesService,\r\n    private _location: Location) {\r\n    super(injector);\r\n    this.errorIntrcptr.httpError$.subscribe(res => {\r\n      this.messageShown = false;\r\n      if (res.Result == Result.NotFound) {\r\n        this.router.navigateByUrl('/address');\r\n      }\r\n    })\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.showModal(this.modalId, () => {\r\n      this.modalClose()\r\n    });\r\n \r\n    let pos = this.router.url.lastIndexOf('/') + 1;\r\n    let orderQuery = this.router.url.substring(pos, this.router.url.length);\r\n    if (!isNaN(<any>orderQuery)) {\r\n      this.isLoading = true;\r\n      let id = parseInt(orderQuery);\r\n      this.isEditMode = true;\r\n      this.addressService.getAddressInfo(id).subscribe((res: ResponseObject<any>) => {\r\n        this.isLoading = false;\r\n        this.formInstance.patchValue(res.Data);\r\n      })\r\n    }\r\n\r\n    this.setAddressValidators();\r\n  }\r\n \r\n  modalClose() {\r\n    if (this.router != null) {\r\n      let outletUrls: string[] = [];\r\n      if (this.router.url.indexOf('edit-address') >= 0) {\r\n        outletUrls.push('edit-address');\r\n        //outletUrls.push(this.selectedId);\r\n      }\r\n      this.router.navigate([{ outlets: { action: outletUrls, primary: [] } }])\r\n    }\r\n  }\r\n\r\n  setAddressValidators() {\r\n    this.addressLine1?.setValidators([Validators.required]);\r\n    this.addressLine2?.setValidators([Validators.required]);\r\n    this.landMark?.setValidators([Validators.required]);\r\n    this.country?.setValidators([Validators.required]);\r\n  }\r\n\r\n  clearAddressValidators() {\r\n    this.addressLine1?.clearValidators();\r\n    this.addressLine2?.clearValidators();\r\n    this.landMark?.clearValidators();\r\n    this.country?.clearValidators();\r\n  }\r\n\r\n  setGPSValidators() {\r\n    this.gps?.setValidators([Validators.required]);\r\n  }\r\n\r\n  clearGPSValidators() {\r\n    this.gps?.clearValidators();\r\n\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.formInstance.valid) {\r\n      this.showFullSpinner();\r\n      if (this.isEditMode) {\r\n        let address: Address = this.formInstance.value\r\n        this.addressService.editAddressInfo(address).subscribe(() => {\r\n          this.hideFullSpinner();\r\n          this.close();\r\n        });\r\n      } else {\r\n        let address: Address = this.formInstance.value\r\n        this.addressService.addAddressInfo(address).subscribe(() => {\r\n          this.hideFullSpinner();\r\n          this.close();\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  close() {\r\n    this.formInstance.reset();\r\n    let url = this.router.url.split(\"/\")[0];\r\n    this.router.navigateByUrl(url);\r\n  }\r\n\r\n  navigateBack() {\r\n    this._location.back();\r\n  }\r\n}\r\n","<div [id]=\"modalId\" uk-scrollspy=\"target: > div; cls: uk-animation-slide-right-medium;\" uk-modal bg-close=\"false\"\r\n    esc-close=\"false\">\r\n\r\n    <div class=\"uk-modal-dialog uk-modal-body uk-height-1-1@s add-address-modal\">\r\n\r\n        <ngx-spinner [name]=\"loadSpinner\"></ngx-spinner>\r\n\r\n        <button class=\"uk-modal-close-default\" uk-close type=\"button\" (click)=\"close()\"></button>\r\n\r\n        <p class=\"modal-heading uk-margin-small-bottom\">\r\n            <a (click)=\"navigateBack()\"><span class=\"material-icons-outlined back-btn\">\r\n                    arrow_back\r\n                </span></a> Bbank Accounts\r\n        </p>\r\n        <br />\r\n        <button class=\"uk-modal-close-default\" type=\"button\" uk-close></button>\r\n\r\n\r\n        <div id=\"data-switcher\" class=\"uk-switcher\" uk-switcher>\r\n            <div class=\"uk-animation-slide-bottom-small\">\r\n                <div>\r\n\r\n                    <div class=\"uk-text-right uk-padding-remove-top uk-padding-small uk-padding-remove-right\">\r\n                        <a (click)=\"switch(2)\" class=\"uk-button redeem-btn uk-padding-small\">Add Account</a>\r\n                    </div>\r\n                    <div class=\"uk-card wallet-info-grid uk-padding-small uk-card-body\">\r\n\r\n                        <table class=\"uk-table uk-table-small od-products-table uk-table-divider\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Acc. Name</th>\r\n                                    <th>Bank Name</th>\r\n                                    <th>Acc. Number</th>\r\n                                    <th>IFSC Code</th>\r\n                                    <th class=\"auto\" style=\"max-width: 10px\"></th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr *ngFor=\"let item of bankAccounts\">\r\n                                    <td>{{ item.AccountName }}</td>\r\n                                    <td>{{ item.BankName }}</td>\r\n                                    <td>{{ item.AccountNumber }}</td>\r\n                                    <td>{{ item.IFSCCode }}</td>\r\n                                    <td class=\"auto\" style=\"max-width: 10px\">\r\n                                        <a class=\"uk-toggle-buttons\" (click)=\"switch(1); deletionAccount = item\" style=\"width: 10px\">\r\n                                            <span class=\"material-icons-round req-icon\">\r\n                                                delete\r\n                                            </span>\r\n                                        </a>\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"uk-animation-slide-bottom-small\">\r\n                <div>\r\n                    <div class=\"uk-card-body uk-padding-top-small\">\r\n                        <h4>Are your sure to delete this bank account info? </h4>\r\n                        Name: <b>{{ deletionAccount?.AccountName }}</b> <br />\r\n                        Account Number: <b>{{ deletionAccount?.AccountNumber }}</b> <br />\r\n                        Bank Name: <b>{{ deletionAccount?.BankName }}</b> <br />\r\n                        IFSC Code: <b>{{ deletionAccount?.IFSCCode }}</b> <br /> <br />\r\n                        <div class=\"uk-text-right\">\r\n                            <button class=\"uk-button uk-button-primary\" (click)=\"confirmDelete(); \">Confirm</button>\r\n                            &nbsp;\r\n                            <button class=\"uk-button uk-button-primary uk-toggle-buttons\"\r\n                                (click)=\"deletionAccount = null; switch(0)\">Cancel</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"uk-animation-slide-bottom-small\">\r\n                <div>\r\n                    <div class=\"uk-card wallet-info-grid uk-padding-small uk-card-body\"\r\n                        *ngIf=\"currentSwitcherIndex == 2\">\r\n                        <form [formGroup]=\"formInstance\" class=\"uk-grid-small uk-margin-small-top\" uk-grid>\r\n                            <div class=\"uk-width-1-2@s\">\r\n                                <label for=\"AccountName\" class=\"primary-label\">Full Name</label>\r\n                                <input formControlName=\"AccountName\" class=\"uk-input redeem-input\" type=\"text\"\r\n                                    placeholder=\"Full Name\">\r\n                            </div>\r\n                            <div class=\"uk-width-1-2@s\">\r\n                                <label for=\"IFSCCode\" class=\"primary-label\">IFSC</label>\r\n                                <input formControlName=\"IFSCCode\" class=\"uk-input redeem-input\" type=\"text\"\r\n                                    placeholder=\"IFSC\">\r\n                            </div>\r\n                            <div class=\"uk-width-1-2@s\">\r\n                                <label for=\"BankName\" class=\"primary-label\">Bank Name</label>\r\n                                <input formControlName=\"BankName\" class=\"uk-input redeem-input\" type=\"text\"\r\n                                    placeholder=\"Bank Name\">\r\n                            </div>\r\n                            <div class=\"uk-width-1-2@s\">\r\n                                <label for=\"AccountNumber\" class=\"primary-label\">Account Number</label>\r\n                                <input formControlName=\"AccountNumber\" class=\"uk-input redeem-input\" type=\"text\"\r\n                                    placeholder=\"Account No\">\r\n                            </div>\r\n                            <div class=\"uk-width-1-1@s\">\r\n                                <input type=\"submit\" (click)=\"submitted = true; addBankAccount()\"\r\n                                    class=\"uk-button redeem-btn uk-button-logout uk-width-1-1\"\r\n                                    value=\"Add Bank Account\" />\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, Injector, Input, OnInit } from '@angular/core';\r\nimport { Wallet } from 'src/app/models/wallet';\r\nimport { Location } from '@angular/common';\r\nimport { WalletService } from 'src/app/services/api-services/wallet.service';\r\nimport { BaseComponent } from 'src/app/shared/base.component';\r\nimport { FormBuilder } from '@angular/forms';\r\nimport { BankAccountService } from 'src/app/services/api-services/bank-accounts.service';\r\nimport { BankAccount } from 'src/app/models/bank-account';\r\n\r\ndeclare var UIkit: any;\r\n\r\n@Component({\r\n  selector: 'app-wb-bank-accounts',\r\n  templateUrl: './wb-bank-accounts.component.html',\r\n  styleUrls: ['./wb-bank-accounts.component.scss']\r\n})\r\nexport class WbBankAcccountsComponent extends BaseComponent implements OnInit {\r\n\r\n  @Input() modalId: string = 'bank-accounts-modal';\r\n\r\n  deletionAccount: BankAccount | null = null;\r\n\r\n  submitted: boolean = false;\r\n\r\n  _switcher: any;\r\n\r\n  currentSwitcherIndex: number = 0;\r\n\r\n  formInstance = this.fb.group({\r\n    Id: [],\r\n    AccountOfUserId: [],\r\n    BankName: [],\r\n    AccountNumber: [],\r\n    IFSCCode: [],\r\n    AccountName: []\r\n  })\r\n\r\n\r\n  get switcher(): any {\r\n    if (this._switcher == null) {\r\n      this._switcher = UIkit.switcher('#data-switcher', { animation: false })\r\n    }\r\n    return this._switcher;\r\n  }\r\n\r\n  bankAccounts: BankAccount[];\r\n  currentBalance: number;\r\n\r\n  constructor(protected injector: Injector, private bankAccountService: BankAccountService,\r\n    private _location: Location) {\r\n    super(injector);\r\n  }\r\n\r\n  switch(index: number) {\r\n    this.currentSwitcherIndex = index;\r\n    setTimeout(() => {\r\n      this.switcher.show(index);\r\n    });\r\n  }\r\n\r\n  modalClose() {\r\n    if (this.router != null) {\r\n      let outletUrls: string[] = [];\r\n      if (this.router.url.indexOf('wallet-redeem') >= 0) {\r\n        //outletUrls.push('edit-address');\r\n        //outletUrls.push(this.selectedId);\r\n      }\r\n      this.router.navigate([{ outlets: { action: outletUrls, primary: [] } }])\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.showModal(this.modalId, () => {\r\n      this.modalClose()\r\n    });\r\n\r\n    this.loadBankAccounts();\r\n\r\n    this.currentSwitcherIndex = 0;\r\n \r\n  }\r\n\r\n  close() {\r\n    this.router.navigate(this.returnUrl.return)\r\n  }\r\n\r\n  loadBankAccounts() {\r\n    this.bankAccountService.getBankAccountList().subscribe((res: { Data: BankAccount[]; }) => {\r\n      this.bankAccounts = res.Data;\r\n    })\r\n  }\r\n\r\n  addBankAccount() {\r\n    var bankAccount: BankAccount = <BankAccount><unknown>this.formInstance.value;\r\n    this.bankAccountService.addBankAccountInfo(bankAccount).subscribe(res => {\r\n      this.switch(0);\r\n      this.formInstance.reset();\r\n      this.loadBankAccounts();\r\n    })\r\n  }\r\n\r\n  navigateBack() {\r\n    if (this.currentSwitcherIndex != 0) {\r\n      this.switch(0);\r\n    } else {\r\n      this._location.back();\r\n    }\r\n  }\r\n\r\n  confirmDelete() {\r\n    if (this.deletionAccount != null) {\r\n      this.bankAccountService.deleteAccount(this.deletionAccount.Id).subscribe(res => {\r\n        this.deletionAccount = null;\r\n        this.switch(0);\r\n        this.loadBankAccounts();\r\n      });\r\n    }\r\n  }\r\n}","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-wb-footer-banner',\r\n  templateUrl: './wb-footer-banner.component.html',\r\n  styleUrls: ['./wb-footer-banner.component.scss']\r\n})\r\nexport class WbFooterBannerComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>wb-footer-banner works!</p>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-wb-footer',\r\n  templateUrl: './wb-footer.component.html',\r\n  styleUrls: ['./wb-footer.component.scss']\r\n})\r\nexport class WbFooterComponent implements OnInit {\r\n\r\n  assetsUrl: string = environment.assetsUrl;\r\n  \r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"footer-container uk-container uk-container-xlarge  uk-margin-remove\">\r\n  <div class=\"uk-child-width-1-2@s uk-child-width-1-4@m uk-text-center uk-grid-collapse\" uk-grid>\r\n      <div>\r\n          <div class=\"uk-card uk-card-body uk-text-left\">\r\n              <img [attr.src]=\"assetsUrl + '/logo-web.jpeg'\" style=\"width: 120px;\" alt=\"\">\r\n              <p class=\"footer-text\">Copyright &copy; 2021 Xevello.</p>\r\n              <div class=\"footer-social\">\r\n                  <a href=\"\" uk-icon=\"icon: instagram; ratio: 0.8\"></a>\r\n                  <a href=\"\" uk-icon=\"icon: linkedin; ratio: 0.8\"></a>\r\n                  <a href=\"\" uk-icon=\"icon: whatsapp; ratio: 0.8\"></a>\r\n                  <a href=\"\" uk-icon=\"icon: twitter; ratio: 0.8\"></a>\r\n              </div>\r\n          </div>\r\n      </div>\r\n      <div>\r\n          <div class=\"uk-card uk-card-body uk-text-left\">\r\n              <p class=\"footer-heading\">Download App</p>\r\n              <p class=\"footer-links\"><a href=\"about-us.html\"><img [attr.src]=\"assetsUrl + '/app-store.png'\" alt=\"\"></a>\r\n                  <a href=\"about-us.html\"><img [attr.src]=\"assetsUrl + '/play-store.png'\" alt=\"\"></a>\r\n              </p>\r\n          </div>\r\n      </div>\r\n      <div>\r\n          <div class=\"uk-card uk-card-body uk-text-left\">\r\n              <p class=\"footer-heading\">Legal</p>\r\n              <p class=\"footer-links\"><a href=\"https://www.xcs.xevello.com/web-development.html\">Terms &\r\n                      Conditions</a></p>\r\n              <p class=\"footer-links\"><a href=\"https://www.xcs.xevello.com/web-development.html\">Privacy\r\n                      Policy</a></p>\r\n          </div>\r\n      </div>\r\n      <div>\r\n          <div class=\"uk-card uk-card-body uk-text-left\">\r\n              <p class=\"footer-heading\">Keep In Touch</p>\r\n              <p class=\"footer-links\"><a href=\"pos-retails.html\"><span class=\"__cf_email__\" data-cfemail=\"483b3d3838273a3c0825272c2d3a2625293a3c662b27662126\">[email&#160;protected]</span></a></p>\r\n              <p class=\"footer-links\"><a href=\"pos-restaurants.html\">+91-9900141870</a></p>\r\n              <p class=\"footer-links\"><a href=\"pos-restaurants.html\">Contact Us</a></p>\r\n          </div>\r\n      </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-wb-home-brands',\r\n  templateUrl: './wb-home-brands.component.html',\r\n  styleUrls: ['./wb-home-brands.component.scss']\r\n})\r\nexport class WbHomeBrandsComponent implements OnInit {\r\n\r\n  assetsUrl: string = environment.assetsUrl;\r\n  \r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"uk-container uk-container-large uk-padding-large uk-padding-remove-top\">\r\n    <p class=\"home-section-heading\">Offers</p>\r\n    <p class=\"home-section-title uk-margin-medium-bottom\">Top Brands</p>\r\n    <section>\r\n        <div class=\"row\">\r\n            <div class=\"category-grid column\" routerLink=\"/categories\">\r\n                <img class=\"uk-align-center uk-margin-remove-bottom\" [attr.src]=\"assetsUrl + '/amul.jpeg'\" alt=\"\">\r\n            </div>\r\n            <!-- END COLUMN -->\r\n        </div>\r\n    </section>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-wb-main-banner',\r\n  templateUrl: './wb-main-banner.component.html',\r\n  styleUrls: ['./wb-main-banner.component.scss']\r\n})\r\nexport class WbMainBannerComponent implements OnInit {\r\n\r\n  assetUrl: string = environment.localAssetsUrl;\r\n  \r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"uk-container uk-container-xlarge uk-padding-remove-top uk-padding-large main-homebanner-grid\">\r\n    <div class=\"uk-height-medium uk-flex uk-flex-center uk-margin-small-top main-homebanner uk-flex-middle uk-background-cover uk-light uk-animation-slide-bottom-small\" [attr.data-src]=\"assetUrl + '/6.jpg'\" uk-img>\r\n    </div>\r\n</div>","<div id=\"modal-container\">\r\n\r\n    <div [id]=\"modalId\" uk-scrollspy=\"target: > div; cls: uk-animation-slide-right-medium;\" uk-modal bg-close=\"false\"\r\n        container=\"#pmodal-container\" esc-close=\"false\">\r\n\r\n        <div class=\"uk-modal-dialog uk-modal-body uk-height-1-1@s address-modal\">\r\n            <button class=\"uk-modal-close-default\" uk-close type=\"button\" (click)=\"close()\"></button>\r\n            <p class=\"web-modal-title uk-margin-remove uk-text-left\"> Addresses\r\n                <a (click)=\"addAddress()\" class=\"uk-float-right add-address-btn\">Add New\r\n                    Address</a>\r\n            </p>\r\n            <p class=\"modal-subtitle \">Save upto 5 address</p>\r\n            <div class=\" uk-padding-remove\">\r\n\r\n                <ngx-spinner [name]=\"loadSpinner\">\r\n                </ngx-spinner>\r\n\r\n                <div class=\" uk-child-width-1-2 uk-grid-small uk-padding-small uk-padding-remove-horizontal\" uk-grid>\r\n\r\n                    <div *ngFor=\"let address of addresses\">\r\n                        <div class=\"uk-card address-grid uk-padding-small uk-card-body\">\r\n                            <table class=\"uk-table uk-table-small uk-table-divider\">\r\n\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td class=\"address-details uk-text-left\">\r\n                                            <p class=\"add-type\">{{ address?.FullName }}</p>\r\n                                            <p class=\"add-street\">{{ address?.AddressLine1 }}</p>\r\n                                            <p class=\"add-city\">{{ address?.AddressLine2 }}</p>\r\n                                            <p class=\"person-details\">Mobile : <span>\r\n                                                    {{ address?.PhoneNumber}}</span></p>\r\n                                        </td>\r\n                                        <td class=\"uk-padding-remove uk-text-right add-links\">\r\n                                            <a (click)=\"editAddress(address?.Id ?? -1)\"><span\r\n                                                    class=\"material-icons-outlined\">\r\n                                                    edit\r\n                                                </span></a>\r\n                                            <a (click)=\"deleteAddress(address?.Id)\"><span\r\n                                                    class=\"material-icons-outlined\">\r\n                                                    delete\r\n                                                </span></a>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n</div>","import { Component, Injector, Input, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthenticationService } from 'src/app/auth/_services/authentication.service';\r\nimport { Address, AddressFilter } from 'src/app/models/address';\r\nimport { ResponseObject } from 'src/app/models/common';\r\nimport { AddressesService } from 'src/app/services/api-services/address.service';\r\nimport { BaseComponent } from 'src/app/shared/base.component';\r\n\r\n@Component({\r\n  selector: 'app-wb-my-address',\r\n  templateUrl: './wb-my-address.component.html',\r\n  styleUrls: ['./wb-my-address.component.scss']\r\n})\r\nexport class WbMyAddressComponent extends BaseComponent implements OnInit {\r\n\r\n  @Input() modalId: string = 'address-modal';\r\n\r\n  selectedId: string;\r\n  \r\n  @Input() set active(_active: boolean) {\r\n    if (_active) {\r\n      this.ngOnInit();\r\n    }\r\n  }\r\n\r\n  addresses: Address[] = [];\r\n\r\n  get defaultAddress(): Address | null {\r\n    if (this.addresses.length > 0) {\r\n      let addresses = this.addresses.filter(i => i.IsDefault);\r\n      if (addresses == null || addresses.length > 0) {\r\n        return addresses[0];\r\n      }\r\n      else {\r\n        return this.addresses[0];\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  \r\n  modalClose() {\r\n    if (this.router != null) {\r\n      let outletUrls: string[] = [];\r\n      if (this.router.url.indexOf('edit-address') >= 0) {\r\n        outletUrls.push('edit-address');\r\n        outletUrls.push(this.selectedId);\r\n      }\r\n      this.router.navigate([{ outlets: { action: outletUrls, primary: [] } }])\r\n    }\r\n  }\r\n\r\n  isEditMode: boolean = false;\r\n  id: any = 0;\r\n\r\n  constructor(protected injector: Injector, private authService: AuthenticationService, private addressService: AddressesService) {\r\n    super(injector);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.showModal(this.modalId, () => {\r\n      this.modalClose()\r\n    });\r\n\r\n    this.loadAddresses();\r\n  }\r\n\r\n  loadAddresses() {\r\n\r\n    let filter = new AddressFilter();\r\n    filter.UserId = this.authService.currentUserValue.userId;\r\n    this.addressService.getAddressList(filter).subscribe((res: ResponseObject<any>) => {\r\n      console.log(\"Addresses: \")\r\n      this.addresses = res.Data;\r\n      this.hideFullSpinner();\r\n    });\r\n  }\r\n\r\n  addAddress(){ \r\n    \r\n    this.router.navigate([{ outlets: { action: ['address'], primary: [] } }]);\r\n  }\r\n\r\n  deleteAddress(id: any) {\r\n    this.showFullSpinner();\r\n    this.addressService.deleteAddress(id).subscribe(() => {\r\n      this.loadAddresses();\r\n    })\r\n  }\r\n\r\n  editAddress(id: number) {\r\n    this.selectedId = id + \"\";\r\n    this.router.navigate([{ outlets: { action: ['edit-address', id], primary: [] } }]);\r\n  }\r\n\r\n  close() {\r\n    this.router.navigate(this.returnUrl.return)\r\n  }\r\n}\r\n","<div>\r\n    <div [attr.id]=\"cartId\" uk-offcanvas=\"flip: true; overlay: true\">\r\n        <div class=\"uk-offcanvas-bar uk-width-1-4@m uk-width-1-1 card-container uk-padding-small uk-padding-remove-vertical\">\r\n            <ngx-spinner [name]=\"loadSpinner\">\r\n            </ngx-spinner>\r\n\r\n\r\n\r\n            <div class=\"title-grid \">\r\n                <button class=\"uk-offcanvas-close close-btn\" type=\"button\" uk-close (click)=\"cartClosed()\"></button>\r\n                <p class=\"cart-title uk-margin-remove-bottom uk-padding-small\">My Cart</p>\r\n                <p class=\"location-title uk-margin-remove-top\">Shopping in bhatkal, karnataka - 581320</p>\r\n            </div>\r\n            <div class=\"details-grid\">\r\n\r\n                <ng-container *ngFor=\"let cartItem of productCartList\">\r\n\r\n                    <table class=\"uk-table uk-table-small product-table\">\r\n                        <tbody>\r\n                            <tr>\r\n                                <td class=\"product-img\">\r\n                                    <img [attr.src]=\"assetsUrl + '/products/dairy-milk.jpeg'\">\r\n                                </td>\r\n                                <td class=\"product-info\">\r\n                                    <span class=\"product-name\">{{ cartItem.ProductVariant.Product?.ProductName }}\r\n                                    </span> <br>\r\n                                    <span class=\"product-qty\">{{ cartItem.ProductVariant.Volume }} {{\r\n                                        cartItem.ProductVariant.MeasureName }}</span>\r\n                                    <div class=\"qty-add\">\r\n\r\n                                        <span class=\"material-icons-outlined minus-btn\"\r\n                                            (click)=\"decreaseFromCart(cartItem.ProductVariantId)\">\r\n                                            remove_circle\r\n                                        </span>\r\n                                        <input class=\"uk-input qty-input\" maxlength=\"2\" [value]=\"cartItem.Quantity\"\r\n                                            type=\"text\">\r\n                                        <span class=\"material-icons-outlined plus-btn\"\r\n                                            (click)=\"addToCart(cartItem.ProductVariantId)\">\r\n                                            add_circle\r\n                                        </span>\r\n                                        <span class=\"x-symbol\">x</span>\r\n                                        <span class=\"product-price\"> ₹{{ cartItem.ProductVariant.Price }}</span>\r\n                                    </div>\r\n                                </td>\r\n                                <td class=\"product-total\">\r\n                                    ₹{{ cartItem.ProductVariant.Price * cartItem.Quantity | number: '1.1-2'}}/-\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n\r\n                </ng-container>\r\n\r\n                <div class=\"uk-center uk-padding uk-text-center\" *ngIf=\"productCartList == null || productCartList.length == 0\">\r\n                    <br/> <br/> <br/> <br/> <br/>\r\n                    <button class=\"uk-button uk-button-success\" (click)=\"cartClosed()\">Continue Shopping</button>\r\n                </div>\r\n            </div>\r\n            <div class=\"submit-btn \" *ngIf=\"productCartList != null && productCartList.length > 0\">\r\n                <button (click)=\"placeOrderClicked()\" class=\"uk-button uk-width-1-1 save-btn\">place order <span\r\n                        class=\"uk-float-right total-btn\">Total : ₹{{ cartTotal | number: '1.1-2' }}/-\r\n                    </span> </button>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n</div>","import { Component, Injector, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { AuthenticationService } from 'src/app/auth/_services/authentication.service';\r\nimport { Cart, CartProductView } from 'src/app/models/cart';\r\nimport { ProductQueryType, ResponseObject } from 'src/app/models/common';\r\nimport { ProductFilter, ProductVariant } from 'src/app/models/product';\r\nimport { ProductsService } from 'src/app/services/api-services/products.service';\r\nimport { CartService } from 'src/app/services/cart.service';\r\nimport { UtilitiesService } from 'src/app/services/utilities.service';\r\nimport { BaseComponent } from 'src/app/shared/base.component';\r\nimport { environment } from 'src/environments/environment';\r\n\r\ndeclare var UIkit: any;\r\n\r\n@Component({\r\n  selector: 'app-wb-my-cart',\r\n  templateUrl: './wb-my-cart.component.html',\r\n  styleUrls: ['./wb-my-cart.component.scss']\r\n})\r\nexport class WbMyCartComponent extends BaseComponent implements OnInit, OnDestroy {\r\n\r\n  cartId: string = 'my-cart';\r\n\r\n  get cartList(): Cart[] {\r\n    return this.cartService.getCartList()\r\n  }\r\n\r\n  get cartTotal(): number {\r\n    return this.productCartList.reduce((sum, item) => sum + (item.Quantity * item.ProductVariant.Price), 0);\r\n  }\r\n\r\n  productCartList: CartProductView[] = [];\r\n\r\n  constructor(public injector: Injector, private cartService: CartService,\r\n    private authService: AuthenticationService,\r\n    private productService: ProductsService) {\r\n    super(injector);\r\n  }\r\n\r\n  assetsUrl: string = environment.assetsUrl;\r\n\r\n  imgUrl: string = environment.assetsUrl;\r\n\r\n  ngOnDestroy(): void {\r\n    UIkit.offcanvas(`#${this.cartId}`).hide();;\r\n  }\r\n\r\n  cartClosed() {\r\n\r\n    UIkit.offcanvas(`#${this.cartId}`).hide();\r\n    setTimeout(() => {\r\n      this.router.navigate([{ outlets: { action: [] } }]);\r\n    }, 500)\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    setTimeout(() => {\r\n      UIkit.offcanvas(`#${this.cartId}`).show();\r\n      UIkit.util.on(`#${this.cartId}`, \"hidden\", () => {\r\n        if (this.router.url.indexOf('place-order') < 0) {\r\n          this.router.navigate([{ outlets: { action: [] } }]);\r\n        }\r\n      });\r\n    })\r\n\r\n    this.loadProducts();\r\n\r\n    this.cartService.cartUpdated.subscribe((cartItem: Cart) => {\r\n      if (cartItem == null || cartItem == undefined) {\r\n        this.loadProducts();\r\n      } else {\r\n        let index = this.productCartList.findIndex(i => i.ProductVariantId == cartItem.ProductVariantId);\r\n        if (index > -1) {\r\n          if (cartItem.Quantity == 0) {\r\n            this.productCartList.splice(index, 1);\r\n          }\r\n          else {\r\n            this.productCartList[index].Quantity = cartItem.Quantity;\r\n          }\r\n        } else {\r\n          this.loadProducts();\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  loadProducts() {\r\n\r\n    if (this.cartList.length == 0) {\r\n      this.productCartList = [];\r\n      return;\r\n    }\r\n\r\n    this.showSpinner();\r\n\r\n    let filter: ProductFilter = new ProductFilter();\r\n    filter.Ids = this.cartList.map(i => i.ProductVariantId).join(',');\r\n    this.productService.getProductVariantList(filter).subscribe((res: ResponseObject<ProductVariant[]>) => {\r\n      let productCartList: CartProductView[] = [];\r\n      let variantList = res.Data ?? [];\r\n      variantList.forEach(vItem => {\r\n        this.cartList.forEach(cItem => {\r\n          if (vItem.Id == cItem.ProductVariantId) {\r\n            productCartList.push({\r\n              Quantity: cItem.Quantity,\r\n              ProductVariantId: cItem.ProductVariantId,\r\n              ProductVariant: vItem\r\n            })\r\n          }\r\n        });\r\n      })\r\n      this.productCartList = productCartList;\r\n      this.hideSpinner();\r\n    });\r\n  }\r\n\r\n  removeProduct(id: number) {\r\n    this.cartService.removeItem(id);\r\n  }\r\n\r\n  addToCart(id: number) {\r\n    this.cartService.addItem(id);\r\n  }\r\n\r\n  decreaseFromCart(id: number) {\r\n    this.cartService.decreaseItem(id);\r\n  }\r\n\r\n  placeOrderClicked() {\r\n    this.router.navigate([{ outlets: { action: ['place-order'] } }]);\r\n  }\r\n}\r\n","import { Component, Injector, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { AuthenticationService } from 'src/app/auth/_services/authentication.service';\r\nimport { Notification, NotificationView } from 'src/app/models/notification';\r\nimport { ProductQueryType, ResponseObject } from 'src/app/models/common';\r\nimport { ProductFilter, ProductVariant } from 'src/app/models/product';\r\nimport { ProductsService } from 'src/app/services/api-services/products.service';\r\nimport { NotificationService } from 'src/app/services/notification.service';\r\nimport { UtilitiesService } from 'src/app/services/utilities.service';\r\nimport { BaseComponent } from 'src/app/shared/base.component';\r\nimport { environment } from 'src/environments/environment';\r\n\r\ndeclare var UIkit: any;\r\n\r\n@Component({\r\n  selector: 'app-wb-my-notifs',\r\n  templateUrl: './wb-my-notifs.component.html',\r\n  styleUrls: ['./wb-my-notifs.component.scss']\r\n})\r\nexport class WbMyNotificationComponent extends BaseComponent implements OnInit, OnDestroy {\r\n\r\n  notifId: string = 'my-notif';\r\n\r\n  get notifList(): Notification[] {\r\n    return this.notifService.getNotificationList()\r\n  }\r\n\r\n  get notifTotal(): number {\r\n    return this.productNotifList.reduce((sum, item) => sum + (item.Quantity * item.ProductVariant.Price), 0);\r\n  }\r\n\r\n  productNotifList: NotificationView[] = [];\r\n\r\n  constructor(public injector: Injector, private notifService: NotificationService,\r\n    private authService: AuthenticationService,\r\n    private productService: ProductsService) {\r\n    super(injector);\r\n  }\r\n\r\n  assetsUrl: string = environment.assetsUrl;\r\n\r\n  imgUrl: string = environment.assetsUrl;\r\n\r\n  ngOnDestroy(): void {\r\n    UIkit.offcanvas(`#${this.notifId}`).hide();;\r\n  }\r\n\r\n  notifClosed() {\r\n\r\n    UIkit.offcanvas(`#${this.notifId}`).hide();\r\n    setTimeout(() => {\r\n      this.router.navigate([{ outlets: { action: [] } }]);\r\n    }, 500)\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    setTimeout(() => {\r\n      UIkit.offcanvas(`#${this.notifId}`).show();\r\n      UIkit.util.on(`#${this.notifId}`, \"hidden\", () => {\r\n        if (this.router.url.indexOf('place-order') < 0) {\r\n          this.router.navigate([{ outlets: { action: [] } }]);\r\n        }\r\n      });\r\n    })\r\n\r\n    this.loadProducts();\r\n\r\n    this.notifService.notificationUpdated.subscribe((notifItem: Notification) => {\r\n      if (notifItem == null || notifItem == undefined) {\r\n        this.loadProducts();\r\n      } else {\r\n        let index = this.productNotifList.findIndex(i => i.ProductVariantId == notifItem.ProductVariantId);\r\n        if (index > -1) {\r\n          if (notifItem.Quantity == 0) {\r\n            this.productNotifList.splice(index, 1);\r\n          }\r\n          else {\r\n            this.productNotifList[index].Quantity = notifItem.Quantity;\r\n          }\r\n        } else {\r\n          this.loadProducts();\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  loadProducts() {\r\n\r\n    if (this.notifList.length == 0) {\r\n      this.productNotifList = [];\r\n      return;\r\n    }\r\n\r\n    this.showSpinner();\r\n\r\n    let filter: ProductFilter = new ProductFilter();\r\n    filter.Ids = this.notifList.map(i => i.ProductVariantId).join(',');\r\n    this.productService.getProductVariantList(filter).subscribe((res: ResponseObject<ProductVariant[]>) => {\r\n      let productNotifList: NotificationView[] = [];\r\n      let variantList = res.Data ?? [];\r\n      variantList.forEach(vItem => {\r\n        this.notifList.forEach(cItem => {\r\n          if (vItem.Id == cItem.ProductVariantId) {\r\n            productNotifList.push({\r\n              Quantity: cItem.Quantity,\r\n              ProductVariantId: cItem.ProductVariantId,\r\n              ProductVariant: vItem\r\n            })\r\n          }\r\n        });\r\n      })\r\n      this.productNotifList = productNotifList;\r\n      this.hideSpinner();\r\n    });\r\n  }\r\n\r\n  removeProduct(id: number) {\r\n    this.notifService.removeItem(id);\r\n  }\r\n\r\n  addToNotif(id: number) {\r\n    this.notifService.addItem(id);\r\n  }\r\n\r\n  decreaseFromNotif(id: number) {\r\n    this.notifService.decreaseItem(id);\r\n  }\r\n\r\n  placeOrderClicked() {\r\n    this.router.navigate([{ outlets: { action: ['place-order'] } }]);\r\n  }\r\n}\r\n","<div>\r\n    <div [attr.id]=\"notifId\" uk-offcanvas=\"flip: true; overlay: true\">\r\n        <div class=\"uk-offcanvas-bar uk-width-1-4@m uk-width-1-1 card-container uk-padding-remove\">\r\n            <ngx-spinner [name]=\"loadSpinner\">\r\n            </ngx-spinner>\r\n\r\n            <div class=\"title-grid \">\r\n                <button class=\"uk-offcanvas-close close-btn\" type=\"button\" uk-close (click)=\"notifClosed()\"></button>\r\n                <p class=\"cart-title uk-margin-remove-bottom uk-padding-small\">Notifications</p>\r\n            </div>\r\n\r\n            <div class=\"notification-list\">\r\n                <div class=\"uk-card uk-card-body uk-padding-small\">\r\n                    <div class=\"notification-icon\">\r\n                        <span uk-icon=\"icon: bolt\"></span>\r\n                    </div>\r\n                    <div class=\"notification-details\">\r\n                        <div class=\"notification-text\">\r\n                            <p>\r\n                                hello this is lorem ipsume dolor isuk nomus belor idi kino luru wido wanm kilo sazi\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"uk-card uk-card-body uk-padding-small\">\r\n                    <div class=\"notification-icon\">\r\n                        <span uk-icon=\"icon: bolt\"></span>\r\n                    </div>\r\n                    <div class=\"notification-details\">\r\n                        <div class=\"notification-text\">\r\n                            <p>\r\n                                hello this is lorem ipsume dolor isuk nomus belor idi kino luru wido wanm kilo sazi\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"uk-card uk-card-body uk-padding-small\">\r\n                    <div class=\"notification-icon\">\r\n                        <span uk-icon=\"icon: bolt\"></span>\r\n                    </div>\r\n                    <div class=\"notification-details\">\r\n                        <div class=\"notification-text\">\r\n                            <p>\r\n                                hello this is lorem ipsume dolor isuk nomus belor idi kino luru wido wanm kilo sazi,\r\n                                hello this is lorem ipsume dolor isuk nomus belor idi kino luru wido wanm kilo sazi\r\n                            </p>\r\n                        </div>\r\n                        <div class=\"notificaiton-image\">\r\n                            <img src=\"assets/1.jpg\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"uk-card uk-card-body uk-padding-small\">\r\n                    <div class=\"notification-icon\">\r\n                        <span uk-icon=\"icon: bolt\"></span>\r\n                    </div>\r\n                    <div class=\"notification-details\">\r\n                        <div class=\"notification-text\">\r\n                            <p>\r\n                                hello this is lorem ipsume dolor isuk nomus belor idi kino luru wido wanm kilo sazi\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","<div id=\"modal-container\">\r\n\r\n    <div [id]=\"modalId\" uk-scrollspy=\"target: > div; cls: uk-animation-slide-right-medium;\" uk-modal bg-close=\"false\"\r\n        esc-close=\"false\">\r\n\r\n        <div class=\"uk-modal-dialog uk-modal-body uk-width-1-2@s order-details\">\r\n            <button class=\"uk-modal-close-default\" type=\"button\" uk-close></button>\r\n\r\n            <p class=\"web-modal-title\">Order Details</p>\r\n\r\n            <div class=\"uk-container uk-container-medium orders-grid uk-margin-small-top\">\r\n                <p class=\"setting-title\">Order Details <span class=\"order-id uk-float-right\">Order ID # {{ order?.Id\r\n                        }}</span></p>\r\n                <div class=\"order-status uk-padding-small\">\r\n                    <p class=\"ordered-date uk-margin-remove\">Order placed on {{ order?.OrderDate | date: 'MMM-d, yyyy hh:mm a'}}</p>\r\n\r\n                    <p class=\"store-name uk-text-left uk-margin-remove\"><small>Order</small> | <span>Delivery</span></p>\r\n                    <p class=\"delivery-time uk-margin-remove\">Delivery Time <br> <span>{{ order?.TimePeriodText }}\r\n                        </span></p>\r\n\r\n                    <div class=\"uk-child-width-1-2@s uk-child-width-1-1@m uk-text-center uk-grid-match uk-grid-small\"\r\n                        uk-grid>\r\n                        <div>\r\n                            <div class=\"current-status\" [class]=\"orderNotCancelledOrRejected ? 'success-stage' : 'cancelled-stage'\">\r\n                                <table class=\"uk-table uk-table-small uk-text-left uk-table-divider uk-margin-remove\">\r\n\r\n                                    <tbody>\r\n                                        <tr>\r\n                                            <td class=\"icon\"><span class=\"dsc-icon\">\r\n                                                </span></td>\r\n                                            <td class=\"delivery-status\">Order {{ orderStatuses[order?.OrderState ??\r\n                                                0].name }} <br>\r\n                                                <span>Your order has been {{ orderStatuses[order?.OrderState ?? 0].name\r\n                                                    }}</span>\r\n                                            </td>\r\n                                            <td class=\"track-delivery uk-text-center\" (click)=\"toggleTracking()\">\r\n                                                <span class=\"material-icons-round\">\r\n                                                    location_on\r\n                                                </span> <br> Track\r\n                                            </td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n\r\n                                <div id=\"order-track\" hidden>\r\n                                    <div class=\"tracking-modal uk-text-center\">\r\n                                        <!-- <p class=\"setting-title\">Order Details <span class=\"order-id uk-float-right\">Order ID # 1191153\r\n                                                    35162836709701</span></p>\r\n                                            <div class=\"driver-grid\">\r\n                                                <table class=\"uk-table driver-table uk-margin-remove-bottom\">\r\n                                                    <tbody>\r\n                                                        <tr>\r\n                                                            <td class=\"driver-image\">\r\n                                                                <img class=\"driver-img\" src=\"assets/icons/face.jpeg\">\r\n                                                            </td>\r\n                                                            <td class=\"driver-details\">\r\n                                                                <p class=\"driver-name\">Abdul Kumshey</p>\r\n                                                                <p class=\"driver-stars\">\r\n                                                                    <span class=\"material-icons-round\">\r\n                                                                        grade\r\n                                                                    </span>\r\n                                                                    <span class=\"material-icons-round\">\r\n                                                                        grade\r\n                                                                    </span>\r\n                                                                    <span class=\"material-icons-round\">\r\n                                                                        grade\r\n                                                                    </span>\r\n                                                                </p>\r\n                                                            </td>\r\n                                                            <td class=\"driver-call uk-text-right\">\r\n                                                                <button class=\"uk-button uk-button-small call-btn\"><span class=\"material-icons-round\">\r\n                                                                        call\r\n                                                                    </span> Call</button>\r\n                                                                <button class=\"uk-button uk-button-small call-btn\"><span class=\"material-icons-round\">\r\n                                                                        grade\r\n                                                                    </span> Rate</button>\r\n                                                            </td>\r\n                                                        </tr>\r\n                                                    </tbody>\r\n                                                </table>\r\n                                            </div> -->\r\n                                        <section class=\"root uk-text-left\">\r\n                                            <div class=\"order-track\">\r\n                                                <ng-container *ngFor=\"let status of orderStatuses\">\r\n                                                    <div class=\"order-track-step\" *ngIf=\"status.show\">\r\n                                                        <div class=\"order-track-status\">\r\n                                                            <span class=\"order-track-status-line status-undone\"\r\n                                                                [class]=\"status.done ? 'status-done' : 'status-todo'\"></span>\r\n                                                            <span class=\"order-track-status-dot \"\r\n                                                                [class]=\"status.done ? 'status-done' : 'status-todo'\"></span>\r\n                                                        </div>\r\n                                                        <div class=\"order-track-text\">\r\n                                                            <p class=\"order-track-text-stat\"> {{ status.name }}</p>\r\n                                                            <!-- <span class=\"order-track-text-sub\">1st November, 2019</span> -->\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </ng-container>\r\n                                                <br />\r\n                                                <!-- <div class=\"order-track-step\">\r\n                                                    <div class=\"order-track-status\">\r\n                                                        <span class=\"order-track-status-dot\"></span>\r\n                                                        <span class=\"order-track-status-line\"></span>\r\n                                                    </div>\r\n                                                    <div class=\"order-track-text\">\r\n                                                        <p class=\"order-track-text-stat\"> Shipped - 123 Start St.\r\n                                                            Seattle, WA </p>\r\n                                                        <span class=\"order-track-text-sub\">1st November, 2019</span>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div class=\"order-track-step\">\r\n                                                    <div class=\"order-track-status\">\r\n                                                        <span class=\"order-track-status-dot\"></span>\r\n                                                        <span class=\"order-track-status-line\"></span>\r\n                                                    </div>\r\n                                                    <div class=\"order-track-text\">\r\n                                                        <p class=\"order-track-text-stat\"> Estimated - 456 End St. New\r\n                                                            York City, NY</p>\r\n                                                        <span class=\"order-track-text-sub\">3rd November, 2019</span>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div class=\"order-track-step\">\r\n                                                    <div class=\"order-track-status\">\r\n                                                        <span class=\"order-track-status-dot\"></span>\r\n                                                        <span class=\"order-track-status-line\"></span>\r\n                                                    </div>\r\n                                                    <div class=\"order-track-text\">\r\n                                                        <p class=\"order-track-text-stat\"> Estimated - 456 End St. New\r\n                                                            York City, NY</p>\r\n                                                        <span class=\"order-track-text-sub\">3rd November, 2019</span>\r\n                                                    </div>\r\n                                                </div> -->\r\n                                            </div>\r\n                                        </section>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <p *ngIf=\"orderNotCancelledOrRejected\" class=\"cancel-button\">\r\n                    <a id=\"order-cancel-button\" (click)=\"orderCancelConfirm()\" class=\"uk-button cancel-button\">Cancelled\r\n                        this order</a> \r\n                </p>     \r\n                <br *ngIf=\"!orderNotCancelledOrRejected\" />\r\n                <div id=\"order-cancel-confirm-message\" class=\"uk-text-center\" hidden> \r\n                    <br /> \r\n                    <br /> \r\n                    <br />\r\n                    Are you sure to cancel this order?<br />\r\n                    <br />\r\n                    <button class=\"uk-botton uk-button-small uk-button-primary\" (click)=\"orderCancelConfirm()\">Back</button> \r\n                        &nbsp;\r\n                    <button class=\"uk-botton uk-button-small uk-button-primary\" (click)=\"cancelOrder()\">Confirm</button>\r\n\r\n                </div>\r\n\r\n                <div id=\"order-details-info\" class=\"ordered-products uk-margin-remove-top\">\r\n                    <table\r\n                        class=\"uk-table products-table uk-text-left uk-table-small uk-table-divider uk-margin-remove\">\r\n                        <tbody>\r\n\r\n                            <ng-container *ngFor=\"let purchase of order?.Purchases\">\r\n                                <tr>\r\n                                    <td class=\"product-image\">\r\n                                        <img [attr.src]=\"uploadsUrl + purchase.ProductImage.ImageUrl\"\r\n                                            [attr.alt]=\"purchase?.ProductName\">\r\n                                    </td>\r\n                                    <td class=\"product-name\"> {{ purchase?.ProductName }} <br> <span\r\n                                            class=\"products-qty\">{{ purchase?.Volume }} {{ purchase?.UnitType?.Acronym\r\n                                            }} x {{ purchase?.TotalQuantity }}</span> <br>\r\n                                        <span class=\"mrp-price\"><span class=\"r-symbol\">₹</span>{{ purchase?.Price |\r\n                                            number: '1.1-1' }}</span>\r\n                                        <span class=\"price\"><span class=\"r-symbol\">₹</span>{{ purchase?.DiscPrice |\r\n                                            number: '1.1-1' }}</span> <span class=\"item-qty\"> x {{\r\n                                            purchase?.TotalQuantity }}</span>\r\n                                    </td>\r\n\r\n                                    <td class=\"uk-text-right\">\r\n                                        <span class=\"mrp-price\" *ngIf=\"purchase?.Discount > 0\">\r\n                                            <span class=\"r-symbol\">₹</span>{{ purchase?.Price * purchase?.TotalQuantity\r\n                                            | number:'1.1-1' }}\r\n                                        </span>\r\n                                        <span class=\"total-price\">\r\n                                            <span class=\"r-symbol\">₹</span>{{ purchase?.Total | number: '1.1-1' }}\r\n                                        </span>\r\n\r\n                                    </td>\r\n                                </tr>\r\n                            </ng-container>\r\n\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                <div id=\"delivery-details-info\"\r\n                    class=\"uk-child-width-1-2@s uk-child-width-1-2@m uk-text-center uk-grid-match uk-margin\" uk-grid>\r\n                    <div>\r\n                        <div class=\"uk-card invoice-grid uk-padding-small uk-card-body\">\r\n\r\n\r\n                            <p class=\"invoice-header\">delivery details</p>\r\n\r\n                            <table class=\"uk-table uk-table-small uk-margin-remove invoice-table uk-table-divider\">\r\n\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td>Fullname</td>\r\n                                        <td>{{ order?.Address?.FullName }}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Address</td>\r\n                                        <td>\r\n                                            {{ order?.Address?.AddressLine1 + \", \" + order?.Address?.AddressLine2 }},\r\n                                            India\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Pincode</td>\r\n                                        <td>\r\n                                            {{ order?.Address?.AreaCode }}\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Phone</td>\r\n                                        <td>\r\n                                            +91-{{ order?.Address?.PhoneNumber }}\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                            <button\r\n                                class=\"uk-button uk-float-right uk-margin-small-top print-button uk-button-small\"><span\r\n                                    class=\"material-icons-outlined\">\r\n                                    print\r\n                                </span> View Invoice</button>\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <div class=\"uk-card invoice-grid uk-padding-small uk-card-body\">\r\n                            <p class=\"invoice-header\">Payment Summary</p>\r\n                            <table class=\"uk-table uk-table-small uk-margin-remove invoice-table uk-table-divider\">\r\n\r\n                                <tbody>\r\n                                    <tr class=\"fullname\">\r\n                                        <td>Cart Total</td>\r\n                                        <td><span class=\"r-symbol\">₹</span> {{ actualTotalPrice(order?.Purchases) |\r\n                                            number: '1.1-1' }}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Discount</td>\r\n                                        <td class=\"discount-price\"><span class=\"r-symbol\">₹</span>{{ order?.TotalBill |\r\n                                            number: '1.1-1' }}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Delivery</td>\r\n                                        <td>Free</td>\r\n                                    </tr>\r\n                                    <tr class=\"total-amount\">\r\n                                        <td>Payable Amount</td>\r\n                                        <td><span class=\"r-symbol\">₹</span>{{ order?.TotalBill | number: '1.1-1' }}</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <br />\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n</div>\r\n<!-- This is the modal -->\r\n<!--<div id=\"cancelled-reason\" uk-modal>\r\n    <div class=\"uk-modal-dialog uk-modal-body reason-modal uk-text-center\">\r\n        <span class=\"material-icons-round reason-icon\">\r\n            contact_support\r\n        </span>\r\n         <div class=\"uk-margin uk-text-left\">\r\n            <label class=\"uk-form-label primary-label \" for=\"form-stacked-select\">Select Reason</label>\r\n            <div class=\"uk-form-controls\">\r\n                <select class=\"uk-select primary-select\" id=\"form-stacked-select\">\r\n                    <option>I won't be able</option>\r\n                    <option>Option 02</option>\r\n                </select>\r\n            </div>\r\n        </div>\r\n        <h6>Are you sure to cancel this order?</h6>\r\n        <br/>\r\n        <div class=\"uk-margin uk-text-left\">\r\n            <button class=\"uk-button cancelled-btn uk-width-1-1\" (click)=\"cancelOrder()\">Confirm & Cancel</button>\r\n        </div>\r\n\r\n    </div>\r\n</div> -->","import { Component, Injector, Input, OnInit, Type } from '@angular/core';\r\nimport { enumToKeyValueArray, ResponseObject } from 'src/app/models/common';\r\nimport { Order, OrderDetail, OrderStatus } from 'src/app/models/order';\r\nimport { OrderService } from 'src/app/services/api-services/order.service';\r\nimport { BaseComponent } from 'src/app/shared/base.component';\r\nimport { environment } from 'src/environments/environment';\r\n\r\ndeclare var UIkit: any;\r\n\r\n@Component({\r\n  selector: 'app-wb-my-order-details',\r\n  templateUrl: './wb-my-order-details.component.html',\r\n  styleUrls: ['./wb-my-order-details.component.scss']\r\n})\r\nexport class WbMyOrderDetailsComponent extends BaseComponent implements OnInit {\r\n\r\n  path: string = 'edit-address'\r\n\r\n  order?: Order;\r\n\r\n  @Input() modalId: string = 'order-detail';\r\n\r\n  uploadsUrl: string = environment.uploadsUrl;\r\n\r\n  public orderStatuses: any = enumToKeyValueArray(OrderStatus);\r\n\r\n  constructor(protected injector: Injector,\r\n    private orderService: OrderService) {\r\n    super(injector);\r\n    this.initOrderStatus(OrderStatus.All);\r\n  }\r\n\r\n  get orderNotCancelledOrRejected(): boolean {\r\n    return !(this.order?.OrderState == 6 || this.order?.OrderState == 7)\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.showModal(this.modalId, () => {\r\n      this.modalClose()\r\n    });\r\n\r\n    this.loadOrder();\r\n  }\r\n\r\n  loadOrder() {\r\n\r\n    let pos = this.router.url.lastIndexOf('/') + 1;\r\n    let orderQuery = this.router.url.substring(pos, this.router.url.length);\r\n    if (!isNaN(<any>orderQuery)) {\r\n      let id = parseInt(orderQuery);\r\n      this.orderService.getOrderInfo(id).subscribe((res: ResponseObject<Order>) => {\r\n        console.log(res.Data);\r\n        let order = res.Data;\r\n        order?.Purchases.forEach((item: OrderDetail) => {\r\n          item.ProductImage.ImageUrl = item.ProductImage.ImageUrl.replace('~', '');\r\n        })\r\n        this.order = order;\r\n        console.log(this.order);\r\n        this.initOrderStatus(this.order?.OrderState ?? 0);\r\n      })\r\n    } else {\r\n      this.apiRequestService.showMessage(<ResponseObject<any>>{\r\n        Message: \"Invalid Order Id\"\r\n      });\r\n      this.router.navigate([{ outlets: { action: ['my-orders'], primary: [] } }]);\r\n    }\r\n  }\r\n\r\n  @Input() public set routeData(data: string) {\r\n    let id = parseInt(data);\r\n    if (!isNaN(id)) {\r\n    }\r\n  }\r\n\r\n  initOrderStatus(orderStatus: OrderStatus) {\r\n    let found: boolean = false;\r\n    let excludeList = [OrderStatus.All, OrderStatus.Placed, OrderStatus.Cancelled, OrderStatus.Rejected];\r\n    for (let status of this.orderStatuses) {\r\n      status.done = false;\r\n      status.done = !found;\r\n      status.show = !excludeList.includes(status.id);\r\n      if (status.id == orderStatus)\r\n        found = true;\r\n    }\r\n  }\r\n\r\n  modalClose() {\r\n    if (this.router != null) {\r\n      this.router.navigate([{ outlets: { action: [] } }], { skipLocationChange: false });\r\n      if (this.router.url.indexOf('/order-details') > -1) {\r\n        this.router.navigateByUrl(this.router.url.split(\"/order-details\")[0])\r\n        this.hideModal(this.modalId);\r\n      }\r\n    }\r\n  }\r\n\r\n  actualTotalPrice(order: any[] | undefined) {\r\n    let sum = 0;\r\n    order?.forEach(i => sum += i.Price * i.TotalQuantity);\r\n    return sum;\r\n  }\r\n\r\n  toggle(elementId: string): any {\r\n    let ele = document.getElementById(elementId);\r\n\r\n    if (ele != null && ele.hasAttribute('hidden')) {\r\n      ele.removeAttribute('hidden')\r\n    } else if (ele != null) {\r\n      ele?.setAttribute('hidden', 'true');\r\n    }\r\n  };\r\n\r\n  toggleTracking() {\r\n    this.toggle(\"order-track\");\r\n  }\r\n\r\n  orderCancelConfirm() {\r\n    this.toggle(\"order-cancel-confirm-message\");\r\n    this.toggle(\"order-cancel-button\");\r\n    this.toggle(\"order-details-info\");\r\n    this.toggle(\"delivery-details-info\");\r\n  }\r\n\r\n  cancelOrder() {\r\n\r\n    let order = Object.assign({}, this.order);\r\n    order.OrderState = OrderStatus.Cancelled;\r\n    this.showSpinner();\r\n    this.orderService.updateOrderStatus(order).subscribe((res: ResponseObject<any>) => {\r\n      this.hideSpinner();\r\n      this.orderCancelConfirm();\r\n      this.router.navigate([\"/my-orders\"]);\r\n    });\r\n  }\r\n}\r\n","<!-- <div id=\"wallet-modal\" uk-scrollspy=\"target: > div; cls: uk-animation-slide-right-medium;\" uk-modal>\r\n    <div class=\"uk-modal-dialog uk-modal-body uk-height-1-1@s wallet-modal\">\r\n        <button class=\"uk-modal-close-default\" type=\"button\" uk-close></button>\r\n        <p class=\"wallet-title\">Modern Wallet</p>\r\n        <div class=\"uk-child-width-1-1@s uk-child-width-1-1@m uk-text-center\" uk-grid>\r\n            <div>\r\n                <div class=\"uk-card wallet-info-grid uk-padding-small uk-card-body\">\r\n                    <p class=\"wallet-heading uk-margin-remove\">Total Wallet Balance</p>\r\n                    <p class=\"wallet-balance uk-margin-remove\">₹233</p>\r\n                    <hr>\r\n                    <div class=\"uk-width-1-1@s uk-width-1-1@m uk-text-left\">\r\n                        <ul class=\"uk-nav uk-nav-default wallet-menu\">\r\n                            <li><a href=\"#wallet-history\" uk-toggle>History <span uk-icon=\"icon:chevron-right;\"\r\n                                      class=\"uk-float-right\"></span></a></li>\r\n                            <li><a href=\"#redeem-modal\" uk-toggle>Redeem <span uk-icon=\"icon:chevron-right;\"\r\n                                      class=\"uk-float-right\"></span></a></li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div> -->\r\n\r\n<div id=\"modal-container\">\r\n\r\n    <div [id]=\"modalId\" uk-scrollspy=\"target: > div; cls: uk-animation-slide-right-medium;\" uk-modal bg-close=\"false\"\r\n        container=\"#modal-container\" esc-close=\"false\">\r\n        <div class=\"uk-modal-dialog uk-modal-body uk-height-1-1@s address-modal\">\r\n\r\n            <p class=\"setting-title\">My Wallet</p>\r\n            <button class=\"uk-modal-close-default\" uk-close type=\"button\" (click)=\"close()\"></button>\r\n \r\n            <div class=\"balance-grid uk-text-center\">\r\n\r\n\r\n                <p class=\"balance-title uk-margin-remove\">Current Balance</p>\r\n                <p class=\"balance-amount uk-margin-remove\"><span class=\"r-symbol\">\r\n                        ₹</span>{{ currentBalance }}</p>\r\n            </div>\r\n            <p class=\"activity-heading\">Wallet History</p>\r\n            <div class=\"history-grid uk-margin-small-top\" *ngIf=\"walletList != null && walletList.length > 0\">\r\n\r\n                <table class=\"uk-table history-table uk-margin-remove-bottom uk-text-center\">\r\n                    <tbody>\r\n                        <tr *ngFor=\"let walletInfo of walletList\">\r\n                            <td class=\"badge-type uk-text-left\">\r\n\r\n                                <span class=\"uk-badge purchase-badge\" [class.red]=\"walletInfo.TransactionType == 1\">\r\n                                    {{ walletInfo.TransactionType == 0 ? 'Credited' : 'Debited' }}</span>\r\n                            </td>\r\n                            <td>\r\n                                <p class=\"wallet-type\"> {{ walletInfo.OrderAction }} </p>\r\n                            </td>\r\n                            <td>\r\n                                <p class=\"trans-id\">#TRN{{ walletInfo.TransactionId | number:'5.0' | removeComma }}</p>\r\n                            </td>\r\n                            <td>\r\n                                 <p class=\"trans-date uk-text-center\"> {{ walletInfo.TimeStamp | date:'MMM-dd, yyyy hh:mm' }} <br>\r\n                                   <span>21:01:22</span>\r\n                                </p>\r\n                            </td>\r\n                            <td>\r\n                                <p class=\"invoice-id \">#INV{{ walletInfo.ActionId ?? walletInfo.Id | number:'5.0' | removeComma }}</p>\r\n                            </td>\r\n                            <td>\r\n                                <p class=\"trans-amt\"> <span class=\"r-symbol\"> ₹{{ walletInfo.Amount }}</span>\r\n                                </p>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, Injector, Input, OnInit } from '@angular/core';\r\nimport { AuthenticationService } from 'src/app/auth/_services/authentication.service';\r\nimport { Wallet } from 'src/app/models/wallet';\r\nimport { AddressesService } from 'src/app/services/api-services/address.service';\r\nimport { WalletService } from 'src/app/services/api-services/wallet.service';\r\nimport { BaseComponent } from 'src/app/shared/base.component';\r\n\r\n@Component({\r\n  selector: 'app-wb-my-wallet',\r\n  templateUrl: './wb-my-wallet.component.html',\r\n  styleUrls: ['./wb-my-wallet.component.scss']\r\n})\r\nexport class WbMyWalletComponent extends BaseComponent implements OnInit {\r\n\r\n  @Input() modalId: string = 'wallets-modal';\r\n\r\n  walletList: Wallet[];\r\n  currentBalance: number;\r\n\r\n  constructor(protected injector: Injector, private authService: AuthenticationService, private walletService: WalletService) {\r\n    super(injector);\r\n  }\r\n\r\n  modalClose() {\r\n    if (this.router != null) {\r\n      let outletUrls: string[] = [];\r\n      if (this.router.url.indexOf('wallet-redeem') >= 0) {\r\n        //outletUrls.push('edit-address');\r\n        //outletUrls.push(this.selectedId);\r\n      }\r\n      this.router.navigate([{ outlets: { action: outletUrls, primary: [] } }])\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.showModal(this.modalId, () => {\r\n      this.modalClose()\r\n    });\r\n\r\n    this.loadWalletInfo();\r\n  }\r\n\r\n  close() {\r\n    this.router.navigate(this.returnUrl.return)\r\n  }\r\n\r\n  loadWalletInfo() {\r\n    this.walletService.getWalletList().subscribe((res: { Data: Wallet[]; }) => {\r\n      this.walletList = res.Data;\r\n      this.currentBalance = 0;\r\n      this.walletList.forEach(item => this.currentBalance += item.Amount);\r\n    })\r\n  }\r\n}\r\n","<div id=\"modal-container\">\r\n    <div [id]=\"modalId\" uk-modal uk-scrollspy=\"target: > div; cls: uk-animation-slide-right;\"\r\n        container=\"#pmodal-container\" bg-close=\"false\" esc-close=\"false\">\r\n        <div class=\"uk-modal-dialog uk-modal-body orders-modal\">\r\n            <p class=\"setting-title\">My Orders</p>\r\n\r\n            <div class=\"uk-child-width-1-2@s uk-child-width-1-1@m uk-text-center uk-margin-small-top uk-grid-small\"\r\n                uk-grid style=\"overflow: auto;\">\r\n\r\n\r\n                <ngx-spinner [name]=\"loadSpinner\">\r\n                </ngx-spinner>\r\n\r\n                <div>\r\n                    <button class=\"uk-modal-close-default\" type=\"button\" uk-close></button>\r\n                    <ng-container *ngFor=\"let order of orders\">\r\n                        <div class=\"uk-card orders-grid uk-card-body uk-padding-remove\">\r\n                            <table class=\"uk-table uk-text-left uk-table-small orders-table uk-table-divider\">\r\n\r\n                                <tbody\r\n                                    [class]=\"!(order?.OrderState == 6 || order?.OrderState == 7) ? 'current-status success-stage' : 'current-status cancelled-stage'\">\r\n                                    <tr>\r\n                                        <td>\r\n                                            <p class=\"invoice-id\">\r\n                                                <small>Order Id</small> <br />#{{ order.Id }}\r\n                                            </p>\r\n                                        </td>\r\n                                        <td class=\"order-info\"><span class=\"total-items\">{{ order.Purchases?.length }}\r\n                                                Items</span><br>\r\n                                            <span class=\"total-price\"><span class=\"r-symbol\">₹</span> {{ order.TotalBill\r\n                                                }}</span>\r\n                                        </td>\r\n                                        <td class=\"order-timing\"><span class=\"placed-time\">Placed on {{ order.OrderDate\r\n                                                |\r\n                                                date: 'MMM-d, y hh:mm aa' }}\r\n                                            </span> <br> <span class=\"delivery-time\">Scheduled for today, 1 pm - 1:30 pm\r\n                                            </span> </td>\r\n                                        <td class=\"order-status\">\r\n\r\n                                            <span class=\"dsc-icon\"> </span>\r\n                                            <span class=\"delivery-status\"> {{\r\n                                                camelCaseToSpacedText(orderStatus[order.OrderState]) }}</span>\r\n\r\n                                        </td>\r\n                                        <td class=\"view-orders uk-text-center\">\r\n                                            <a class=\"uk-button uk-button-text details-btn\"\r\n                                                (click)=\"orderDetails(order.Id)\">Details</a>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </ng-container>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { AfterViewInit, Component, Injector, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { OrderStatus, ResponseObject, transformCamelToSpaces } from 'src/app/models/common';\r\nimport { Order, OrderFilter } from 'src/app/models/order';\r\nimport { OrderService } from 'src/app/services/api-services/order.service';\r\nimport { BaseComponent } from 'src/app/shared/base.component';\r\n\r\n@Component({\r\n  selector: 'app-wb-myorders',\r\n  templateUrl: './wb-myorders.component.html',\r\n  styleUrls: ['./wb-myorders.component.scss']\r\n})\r\nexport class WbMyordersComponent extends BaseComponent implements OnInit, OnDestroy {\r\n\r\n  @Input()\r\n  modalId: string = \"my-orders-modal\";\r\n\r\n  orderStatus: typeof OrderStatus = OrderStatus;\r\n  camelCaseToSpacedText: typeof transformCamelToSpaces = transformCamelToSpaces;\r\n\r\n  orders: Order[];\r\n  selectedId: number;\r\n\r\n  constructor(private orderService: OrderService, protected injector: Injector) {\r\n    super(injector);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.showModal(this.modalId, () => {\r\n      this.modalClose()\r\n    });\r\n\r\n    this.showSpinner();\r\n    let filter: OrderFilter = new OrderFilter();\r\n    this.orderService.getOrderList(filter).subscribe((res: ResponseObject<Order[]>) => {\r\n      this.orders = res.Data ?? [];\r\n      this.hideSpinner();\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.orders = [];\r\n  }\r\n\r\n\r\n  modalClose() {\r\n    if (this.router != null) {\r\n      let outletUrls = [];\r\n      if (this.router.url.indexOf('order-details') >= 0) {\r\n        outletUrls.push('order-details');\r\n        outletUrls.push(this.selectedId);\r\n      }\r\n      this.router.navigate([{ outlets: { action: outletUrls, primary: [] } }])\r\n    }\r\n  }\r\n\r\n  orderDetails(id: number) {\r\n    this.selectedId = id;\r\n    this.router.navigate([{  outlets: { action: [\"order-details\", id], primary: [] } }]);\r\n  }\r\n}\r\n","<nav class=\"uk-navbar-container  navbar\" uk-sticky uk-navbar=\"mode: click\">\r\n    <div class=\"uk-navbar-left\">\r\n        <a class=\"uk-navbar-item uk-logo logo-lg\" [class.uk-text-center]=\"noAction\" routerLink=\"/\">\r\n            <img [attr.src]=\"assetsUrl + '/logo-web.jpeg'\" alt=\"modern-mart\">\r\n        </a>\r\n\r\n        <ul class=\"uk-navbar-nav\" *ngIf=\"!noAction\">\r\n            <li class=\"navbar-location\">\r\n                <a> <span uk-icon=\"icon: location; ratio: 0.7;\"></span> vijayawada\r\n                </a>\r\n            </li>\r\n        </ul>\r\n\r\n        <app-wb-search *ngIf=\"!noAction\"></app-wb-search>\r\n    </div>\r\n    <div class=\"uk-navbar-right\" *ngIf=\"!noAction\">\r\n        <ul class=\"uk-navbar-nav web-menu\">\r\n            <li><a [routerLink]=\"[{ outlets: { action: ['offers'] } }]\"><span style=\"margin-right: 5px;\"\r\n                        uk-icon=\"icon:tag;ratio:0.9;\"></span>Offers</a></li>\r\n            <li>\r\n                <a>My Account <span style=\"margin-left: 10px;\" uk-icon=\"icon: chevron-down; ratio: 0.8;\"></span></a>\r\n                <div #dropdown class=\"uk-navbar-dropdown uk-margin-remove-top uk-padding-small web-profile\">\r\n                    <a (click)=\"dropdown.classList.remove('uk-open'); loginClicked();\"\r\n                        class=\"uk-button uk-button-primary uk-width-1-1\" *ngIf=\"!isUserLogged\">Login\r\n                        or Sign\r\n                        up</a>\r\n                    <ul class=\"uk-nav uk-navbar-dropdown-nav\" *ngIf=\"isUserLogged\">\r\n                        <li *ngIf=\"isUserLogged\">\r\n                            <a (click)=\"dropdown.classList.remove('uk-open'); myProfile();\">\r\n                                <span class=\"material-icons-outlined\">\r\n                                    person\r\n                                </span> My Details\r\n                            </a>\r\n                        </li>\r\n                        <li>\r\n                            <a (click)=\"dropdown.classList.remove('uk-open'); myOrdersClick();\">\r\n                                <span class=\"material-icons-outlined\">\r\n                                    shopping_cart\r\n                                </span> My Orders\r\n                            </a>\r\n                        </li>\r\n                        <li *ngIf=\"isUserLogged\">\r\n                            <a routerLink=\"wallets\"> <span class=\"material-icons-outlined\">\r\n                                    credit_card\r\n                                </span> Wallets\r\n                            </a>\r\n                        </li>\r\n                        <li *ngIf=\"isUserLogged\">\r\n                            <a (click)=\"dropdown.classList.remove('uk-open'); redeemRequestClicked();\"\r\n                                class=\"uk-dropdown-close\">\r\n                                <span class=\"material-icons-outlined\">\r\n                                    redeem\r\n                                </span> Redeem Request</a>\r\n                        </li>\r\n                        <li *ngIf=\"isUserLogged\">\r\n                            <a class=\"uk-dropdown-close\"\r\n                                (click)=\"dropdown.classList.remove('uk-open'); addressesClicked();\">\r\n                                <span class=\"material-icons-round\">\r\n                                    place\r\n                                </span> My Addresses</a>\r\n                        </li>\r\n                        <li *ngIf=\"isUserLogged\">\r\n                            <a (click)=\"logOutClick()\"> <span class=\"material-icons-round\">\r\n                                    logout\r\n                                </span>Log Out\r\n                            </a>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </li>\r\n            <li>\r\n                <a class=\"web-cart\" (click)=\"navigateToCart()\">\r\n                    <span uk-icon=\"icon:cart; ratio: 0.9;\"></span>\r\n                    <span class=\"uk-badge\">{{ cartCount }}</span>\r\n                </a>\r\n            </li>\r\n            <li>\r\n                <a class=\"web-notif\" (click)=\"navigateToNotif()\">\r\n                    <span uk-icon=\"icon:bell; ratio: 0.9;\"></span>\r\n                    <span class=\"uk-badge\">{{ notifCount }}</span>\r\n                </a>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n</nav>","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { AuthenticationService } from 'src/app/auth/_services/authentication.service';\r\nimport { CartService } from 'src/app/services/cart.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-wb-navbar',\r\n  templateUrl: './wb-navbar.component.html',\r\n  styleUrls: ['./wb-navbar.component.scss']\r\n})\r\nexport class WbNavbarComponent implements OnInit {\r\n \r\n  assetsUrl: string = environment.localAssetsUrl;\r\n\r\n  get isUserLogged(): boolean {\r\n    return this.authService.currentUserValue != null && this.authService.currentUserValue.requireOTP === \"False\";\r\n  }\r\n\r\n  get cartCount(): number {\r\n    return this.cartService.getCartCount();\r\n  }\r\n\r\n  get notifCount(): number {\r\n    return 0; //this.cartService.getCartCount();\r\n  }\r\n\r\n  constructor(private cartService: CartService, private router: Router,\r\n    private spinner: NgxSpinnerService,\r\n    private authService: AuthenticationService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  @Input() \r\n  noAction: boolean = false;\r\n\r\n  logOutClick() {\r\n    this.spinner.show();\r\n    this.authService.logout().subscribe(res => {\r\n      this.spinner.hide()\r\n    });;\r\n  }\r\n\r\n  loginClicked() {\r\n    this.router.navigate([{ outlets: { action: [\"login\"] } }]);\r\n  }\r\n\r\n  addressesClicked() {\r\n    this.router.navigate([{ outlets: { action: [\"my-addresses\"] } }]);\r\n  }\r\n\r\n  redeemRequestClicked() {\r\n    this.router.navigate([{ outlets: { action: [\"wallet-redeem\"] } }]);\r\n  }\r\n\r\n  myProfile() {\r\n    this.router.navigate([{ outlets: { action: [\"profile\"] } }]);\r\n  }\r\n  myOrdersClick() {\r\n    this.router.navigate([{ outlets: { action: [\"my-orders\"] } }]);\r\n  }\r\n\r\n  navigateToCart() {\r\n    this.router.navigate([{ outlets: { action: [\"cart\"] } }]);\r\n  }\r\n\r\n  navigateToNotif() {\r\n    this.router.navigate([{ outlets: { action: [\"notification\"] } }]);\r\n  }\r\n}\r\n","<div id=\"modal-container\">\r\n    <div [id]=\"modalId\" uk-modal uk-scrollspy=\"target: > div; cls: uk-animation-slide-right-medium;\"\r\n        container=\"#pmodal-container\" bg-close=\"true\" esc-close=\"true\">\r\n\r\n\r\n        <div class=\"uk-modal-dialog uk-container uk-container-medium uk-padding-small\">\r\n            <button class=\"uk-modal-close-default\" type=\"button\" uk-close></button>\r\n            <div class=\"uk-child-width-1-3@m uk-grid-match uk-grid-small uk-margin-auto-vertical\"\r\n                uk-scrollspy=\"target: > div; cls: uk-animation-slide-right-small; delay: 200\"\r\n                uk-grid>\r\n                <div class=\"uk-padding-medium\" *ngFor=\"let item of offerBanners\">\r\n                    <div class=\"uk-card offer-grid\">\r\n                        <div class=\"uk-card-media-top\">\r\n                            <a [routerLink]=\"'/collections/' + item.OfferUrl\">\r\n                                <img class=\"offer-img\" [attr.src]=\"uploadsUrl + '/' + item.BannerImageUrl\" alt=\"\">\r\n\r\n                            </a>\r\n                        </div>\r\n                        <div class=\"uk-card-body uk-padding-small\">\r\n\r\n                            <p class=\"offer-title uk-margin-remove\">{{ item.DisplayName }} </p>\r\n                            <p class=\"offer-details uk-margin-remove-top\"> {{ item.Description }}\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div *ngIf=\"offerBanners?.length == 0\" class=\"non-message uk-text-center\">\r\n                <p>\r\n                    Sorry! No offers to available at this moment.\r\n                </p>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>","import { Component, Injector, Input, OnInit } from '@angular/core';\r\nimport { ResponseObject } from 'src/app/models/common';\r\nimport { OfferBanner, OfferBannerPlacement, OfferFilter } from 'src/app/models/offer';\r\nimport { OfferService } from 'src/app/services/api-services/offers.service';\r\nimport { BaseComponent } from 'src/app/shared/base.component';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-wb-offers',\r\n  templateUrl: './wb-offers.component.html',\r\n  styleUrls: ['./wb-offers.component.scss']\r\n})\r\nexport class WbOffersComponent extends BaseComponent implements OnInit {\r\n\r\n  @Input()\r\n  modalId: string = \"offers-modal\";\r\n\r\n  uploadsUrl: string = environment.uploadsUrl;\r\n\r\n  offerBanners: OfferBanner[] = [];\r\n\r\n  constructor(protected injector: Injector, protected offerSeervice: OfferService) {\r\n    super(injector);\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.showModal(this.modalId, () => {\r\n      this.modalClose()\r\n    });\r\n\r\n    let filter = new OfferFilter();\r\n    this.offerSeervice.getOfferBannerList(filter).subscribe((res: ResponseObject<OfferBanner[]>) => { \r\n      res.Data?.forEach((item : OfferBanner) => {\r\n        item.BannerImageUrl = item.BannerImageUrl.replace(\"~/\", '');\r\n      })\r\n      this.offerBanners = (res.Data ?? []);//.filter(i => i.Placement == OfferBannerPlacement.DesktopOffers);\r\n    })\r\n  }\r\n \r\n  modalClose() {\r\n    if (this.router != null) { \r\n      this.router.navigateByUrl('/')\r\n    }\r\n  }\r\n}\r\n","<!-- This is Obselete -->\r\n\r\n<div id=\"modal-container\">\r\n    <div [id]=\"modalId\" uk-scrollspy=\"target: > div; cls: uk-animation-slide-right-medium;\" uk-modal bg-close=\"false\"\r\n        esc-close=\"false\">\r\n        <div class=\"uk-modal-dialog uk-modal-body uk-width-1-2@s uk-height-1-1 order-details\">\r\n            <p class=\"web-modal-title\">Order Details</p>\r\n\r\n\r\n            <ngx-spinner [name]=\"loadSpinner\">\r\n            </ngx-spinner>\r\n\r\n            <div class=\"orders-grid\">\r\n                <button class=\"uk-modal-close-default\" type=\"button\" uk-close></button>\r\n                <ng-container *ngIf=\"order != null\">\r\n                    <div class=\"uk-child-width-1-1@s uk-child-width-1-1@m uk-text-center\" uk-grid>\r\n                        <div>\r\n                            <div class=\"uk-card wallet-info-grid uk-padding-small uk-card-body\">\r\n                                <p class=\"my-order-id\"> <span class=\"order-title\">Order Id: </span> {{ order?.Id }}</p>\r\n                                <ol class=\"progtrckr uk-padding-remove uk-width-1-1@s\" data-progtrckr-steps=\"5\">\r\n                                    <ng-container *ngFor=\"let status of orderStatuses\">\r\n                                        <li *ngIf=\"status.show\"\r\n                                            [class]=\"status.done ? 'progtrckr-done' : 'progtrckr-todo'\">\r\n                                            {{ status.name }}</li>\r\n                                    </ng-container>\r\n                                </ol>\r\n                            </div>\r\n                            <table class=\"uk-table my-orders-table uk-table-small uk-table-divider\">\r\n                                <tbody>\r\n                                    <ng-container *ngFor=\"let purchase of order?.Purchases\">\r\n                                        <ng-container *ngIf=\"purchase.TotalQuantity > 0\">\r\n                                            <tr>\r\n                                                <td class=\"uk-text-left\">\r\n                                                    <img [attr.src]=\"uploadsUrl + purchase.ProductImage.ImageUrl\"\r\n                                                        alt=\"\">\r\n                                                </td>\r\n                                                <td class=\"uk-text-left\">\r\n                                                    <span class=\"my-product-name\">\r\n                                                        {{ purchase?.ProductName }}\r\n                                                    </span>\r\n                                                    <br> <span class=\"my-unit\">{{ purchase?.Volume }} {{\r\n                                                        purchase?.UnitType?.Acronym }} </span>\r\n                                                    <span class=\"my-quantity\"> x {{ purchase?.TotalQuantity }}</span>\r\n                                                    <span class=\"my-price\">₹{{ purchase.DiscPrice }} </span>\r\n                                                </td>\r\n                                                <td>\r\n                                                    <span class=\"my-total-price\">\r\n                                                        ₹{{ purchase?.Total | number: '1.1-1' }} ({{ purchase?.Discount\r\n                                                        |\r\n                                                        number:\r\n                                                        '1.1-1' }}%)\r\n                                                    </span> <br>\r\n                                                    <span class=\"my-cancel-order\">Cancel/Return</span>\r\n                                                </td>\r\n                                            </tr>\r\n                                            <br />\r\n                                        </ng-container>\r\n                                    </ng-container>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"uk-child-width-1-2@s uk-child-width-1-2@m uk-text-center uk-grid-match\" uk-grid>\r\n                        <div>\r\n                            <div class=\"uk-card my-amount-grid uk-card-body uk-text-left uk-padding-small\">\r\n                                <p class=\"uk-margin-remove my-amount-title\">\r\n                                    Payable Amount:\r\n                                    <span class=\"my-amount-price uk-float-right\">\r\n                                        ₹{{ order?.TotalBill | number: '1.1-1' }}\r\n                                    </span>\r\n                                </p>\r\n                                <hr class=\"uk-margin-small\">\r\n                                <p class=\"my-amount-subtitle uk-margin-remove\">\r\n                                    Bag total\r\n                                    <span class=\"uk-float-right\">\r\n                                        ₹{{ order?.TotalBill | number: '1.1-1' }}\r\n                                    </span>\r\n                                </p>\r\n                                <p class=\"my-amount-subtitle uk-margin-remove\">\r\n                                    Delivery\r\n                                    <span class=\"uk-float-right\">FREE</span>\r\n                                </p>\r\n                                <p class=\"my-amount-subtitle uk-margin-remove\">\r\n                                    Modern Wallet\r\n                                    <span class=\"uk-float-right\">₹{{ 0 | number: '1.1-1' }}</span>\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n                            <div class=\"uk-card my-amount-grid uk-card-body uk-padding-small\">\r\n                                <p class=\"my-address-title uk-margin-remove\">Deliver to</p>\r\n                                <p class=\"my-address uk-margin-remove uk-margin-medium-top\" *ngIf=\"order != null\">\r\n                                    {{ order?.Address?.FullName }}, {{ order?.Address?.AddressLine1 + \", \" +\r\n                                    order?.Address?.AddressLine2 }}\r\n                                    <ng-container *ngIf=\"order?.Address?.LandMark != ''\">\r\n                                        ({{ order?.Address?.LandMark }})\r\n                                    </ng-container>\r\n                                </p>\r\n                                <p class=\"my-address uk-margin-remove\" *ngIf=\"order != null\">\r\n                                    India\r\n                                    <ng-container *ngIf=\"order?.Address?.AreaCode != null \">- {{\r\n                                        order?.Address?.AreaCode }}</ng-container>\r\n                                </p>\r\n                                <p class=\"my-phone uk-margin-remove\"> <span>Phone :</span>\r\n                                    <ng-container *ngIf=\"order != null\">+91-{{ order?.Address?.PhoneNumber }}\r\n                                    </ng-container>\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </ng-container>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","//This is Obselete \r\n\r\nimport { Component, Injector, Input, OnInit, Type } from '@angular/core';\r\nimport { enumToKeyValueArray, ResponseObject } from 'src/app/models/common';\r\nimport { Order, OrderDetail, OrderStatus } from 'src/app/models/order';\r\nimport { OrderService } from 'src/app/services/api-services/order.service';\r\nimport { BaseComponent } from 'src/app/shared/base.component';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-wb-order-details',\r\n  templateUrl: './wb-order-details.component.html',\r\n  styleUrls: ['./wb-order-details.component.scss']\r\n})\r\nexport class WbOrderDetailsComponent extends BaseComponent implements OnInit {\r\n\r\n  path: string = 'edit-address'\r\n\r\n  order?: Order;\r\n\r\n  @Input() modalId: string = 'order-detail';\r\n\r\n  uploadsUrl: string = environment.uploadsUrl;\r\n\r\n  public orderStatuses: any = enumToKeyValueArray(OrderStatus);\r\n\r\n  constructor(protected injector: Injector,\r\n    private orderService: OrderService) {\r\n    super(injector);\r\n    this.initOrderStatus(OrderStatus.All);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.showModal(this.modalId, () => {\r\n      this.modalClose()\r\n    });\r\n\r\n    let pos = this.router.url.lastIndexOf('/') + 1;\r\n    let orderQuery = this.router.url.substring(pos, this.router.url.length);\r\n    if (!isNaN(<any>orderQuery)) {\r\n      let id = parseInt(orderQuery);\r\n      this.orderService.getOrderInfo(id).subscribe((res: ResponseObject<Order>) => {\r\n        console.log(res.Data);\r\n        let order = res.Data;\r\n        order?.Purchases.forEach((item: OrderDetail) => {\r\n          item.ProductImage.ImageUrl = item.ProductImage.ImageUrl.replace('~', '');\r\n        })\r\n        this.order = order;\r\n        this.initOrderStatus(this.order?.OrderState ?? 0);\r\n      })\r\n    } else {\r\n      this.apiRequestService.showMessage(<ResponseObject<any>>{\r\n        Message: \"Invalid Order Id\"\r\n      });\r\n      this.router.navigate([{ outlets: { action: ['my-orders'], primary: [] } }]);\r\n    }\r\n  }\r\n\r\n  @Input() public set routeData(data: string) {\r\n    let id = parseInt(data);\r\n    if (!isNaN(id)) {\r\n    }\r\n  }\r\n\r\n  initOrderStatus(orderStatus: OrderStatus) {\r\n    let found: boolean = false;\r\n    let excludeList = [OrderStatus.All, OrderStatus.Placed, OrderStatus.Cancelled, OrderStatus.Rejected];\r\n    for (let status of this.orderStatuses) {\r\n      status.done = false;\r\n      status.done = !found;\r\n      status.show = !excludeList.includes(status.id);\r\n      if (status.id == orderStatus)\r\n        found = true;\r\n    }\r\n  }\r\n\r\n  modalClose() {\r\n    if (this.router != null) {\r\n      this.router.navigate([{ outlets: { action: [] } }], { skipLocationChange: false });\r\n      if (this.router.url.indexOf('/order-details') > -1) {\r\n        this.router.navigateByUrl(this.router.url.split(\"/order-details\")[0])\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { PlaceOrderService } from 'src/app/services/api-services/place-order.service';\nimport { CartService } from 'src/app/services/cart.service';\nimport { BaseComponent } from 'src/app/shared/base.component';\n\ndeclare var UIkit: any;\n\n@Component({\n  selector: 'app-wb-order-succssfull',\n  templateUrl: './wb-order-succssfull.component.html',\n  styleUrls: ['./wb-order-succssfull.component.scss']\n})\nexport class WbOrderSuccssfullComponent implements OnInit {\n\n  @Input() modalId: string = 'order-successful-modal';\n  @Input() set active(_active: boolean) {\n    if (_active) {\n      if (this.placeOrderStatus == null || this.placeOrderStatus.orderId == null) {\n        setTimeout(() => {\n          this.backHome();\n        })\n      }\n    } else {\n      // this.placeOrderService.setOrderResponseStatus(null).subscribe(() => {\n      // });\n    }\n  }\n\n  get placeOrderStatus(): any {\n    return this.placeOrderService.placedOrderValue;\n  }\n\n  constructor(private router: Router,\n    private placeOrderService: PlaceOrderService) { }\n\n  ngOnInit(): void {\n    setTimeout(() => {\n      UIkit.modal(\"#\" + this.modalId).show();\n      UIkit.util.on(\"#\" + this.modalId, 'hidden', () => {\n        this.modalClose();\n      });\n    });\n  }\n\n  backHome() {\n    this.router.navigateByUrl('/', { replaceUrl: true });\n  }\n\n  orderStatus() {\n    this.router.navigate([{ outlets: { action: ['my-orders'], primary: [] } }]) \n  }\n\n  modalClose() {\n    if (this.router != null) {\n      let outletUrls: string[] = [];\n      if (this.router.url.indexOf('my-orders') >= 0) {\n        outletUrls.push('my-orders');\n        //outletUrls.push(this.selectedId);\n      }\n      this.router.navigate([{ outlets: { action: outletUrls, primary: [] } }])\n    }\n  }\n\n}","<div id=\"modal-container\">\n\n    <div [id]=\"modalId\" uk-scrollspy=\"target: > div; cls: uk-animation-slide-right-medium;\" uk-modal bg-close=\"false\"\n        container=\"#pmodal-container\" esc-close=\"false\">\n        <div class=\"uk-modal-dialog uk-modal-body uk-height-1-1@s add-address-modal\">\n\n            <button class=\"uk-modal-close-default\" type=\"button\" uk-close></button>\n            <div class=\"details-grid \">\n                <div class=\"details\">\n\n                    <div class=\"icon-container\">\n                        <div class=\"check-container\">\n                            <div class=\"check-background\">\n                                <svg viewBox=\"0 0 65 51\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                                    <path d=\"M7 25L27.3077 44L58.5 7\" stroke=\"white\" stroke-width=\"13\"\n                                        stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n                                </svg>\n                            </div>\n                            <div class=\"check-shadow\"></div>\n                        </div>\n                    </div>\n\n                    <p class=\"success-title\">Your Order has been placed</p>\n                    <p class=\"success-subtitle \">Your order has been placed and is on it's way to being processed</p>\n                    <a (click)=\"orderStatus()\" class=\"uk-button track-btn\"><span class=\"material-icons-outlined\">\n                            local_shipping\n                        </span> Track Order</a>\n                    <a (click)=\"backHome()\" class=\"continue\">Continue Shopping</a>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, Input, OnInit } from '@angular/core';\r\nimport { ResponseObject } from 'src/app/models/common';\r\nimport { Order, OrderFilter } from 'src/app/models/order';\r\nimport { OrderService } from 'src/app/services/api-services/order.service';\r\n\r\n@Component({\r\n  selector: 'app-wb-orders',\r\n  templateUrl: './wb-orders.component.html',\r\n  styleUrls: ['./wb-orders.component.scss']\r\n})\r\nexport class WbOrdersComponent implements OnInit {\r\n\r\n \r\n  @Input() \r\n  modalId: string;\r\n\r\n  orders: Order[];\r\n\r\n  @Input() \r\n  set active(_active: boolean) {\r\n    if(_active){\r\n      let filter: OrderFilter = new OrderFilter();\r\n      this.orderService.getOrderList(filter).subscribe((res: ResponseObject<Order[]>) => {\r\n        this.orders = res.Data ?? [];\r\n        console.log(JSON.stringify(res.Data));\r\n      });\r\n    }\r\n  }\r\n\r\n  constructor(private orderService: OrderService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div [id]=\"modalId\" uk-scrollspy=\"target: > div; cls: uk-animation-slide-right;\" uk-modal=\"show:true;\">\r\n    <div class=\"uk-modal-dialog uk-modal-body uk-height-1-1@s orders-modal\">\r\n        <p class=\"setting-title\">My Orders</p>\r\n\r\n    </div>\r\n</div>","<div [attr.id]=\"placeOrderId\" uk-offcanvas=\"flip: true; overlay: true\">\r\n    <div class=\"uk-offcanvas-bar  cart-grid uk-padding-remove\">\r\n\r\n        <form [formGroup]=\"formInstance\" (ngSubmit)=\"submit()\">\r\n            <div class=\"od-grid\">\r\n\r\n\r\n                <p class=\"web-modal-title uk-margin-small-top\">Place your orders</p>\r\n\r\n                <ul id=\"place-order-switcher\" class=\"uk-subnav uk-subnav-pill place-order-type uk-flex-center\">\r\n                    <li [class.uk-active]=\"index == 0\"><a (click)=\"index = 0;\">Delivery</a></li>\r\n                    <li [class.uk-active]=\"index == 1\"><a (click)=\"index = 1;\">Self Pickup</a></li>\r\n                </ul>\r\n\r\n                <ul id=\"switcher-panel\" class=\"uk-switcher uk-margin \">\r\n\r\n                    <li class=\"uk-animation-slide-left-medium\" *ngIf=\"index == 0\">\r\n                        <p class=\"uk-heading-bullet place-section-title\">Select Delivery Address</p>\r\n\r\n                        <div class=\"uk-child-width-1-1@s uk-child-width-1-1@m uk-text-center\" uk-grid>\r\n                            <div>\r\n                                <div class=\"uk-card wallet-info-grid uk-padding-small uk-card-body\">\r\n                                    <div class=\"uk-text-center\" uk-grid>\r\n                                        <div class=\"uk-width-expand@m\">\r\n                                            <div class=\"uk-card uk-card-body address-grid uk-padding-small\">\r\n\r\n\r\n                                                <ng-container *ngIf=\"addresses.length\">\r\n                                                    <table\r\n                                                        class=\"uk-table address-table uk-table-small uk-table-divider uk-text-left uk-margin-remove\">\r\n\r\n                                                        <tbody>\r\n                                                            <tr>\r\n                                                                <td class=\"name-info\">\r\n                                                                    <span class=\"add-name\">{{ defaultAddress?.FullName\r\n                                                                        }}</span>\r\n                                                                    <span class=\"add-phone\">{{\r\n                                                                        defaultAddress?.PhoneNumber}}</span> <br>\r\n\r\n                                                                    <span class=\"add-address\">{{\r\n                                                                        defaultAddress?.AddressLine1 }}</span>\r\n                                                                </td>\r\n\r\n                                                            </tr>\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                    <div class=\"uk-width-1-1@s \">\r\n                                                        <button type=\"button\" [routerLink]=\"['/my-addresses']\"\r\n                                                            [queryParams]=\"returnUrl\"\r\n                                                            class=\"uk-button uk-flex-right address-btn uk-width-1-1\">change</button>\r\n                                                    </div>\r\n                                                </ng-container>\r\n                                                <ng-container *ngIf=\"!addresses.length\">\r\n                                                    <button type=\"button\" [routerLink]=\"['/address']\"\r\n                                                        [queryParams]=\"returnUrl\"\r\n                                                        class=\"uk-button uk-flex-right address-btn uk-width-1-1\">Add\r\n                                                        Address</button>\r\n                                                </ng-container>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </li>\r\n\r\n                    <li *ngIf=\"index == 1\">\r\n                        <p class=\"uk-heading-bullet place-section-title\">Select Delivery Address</p>\r\n                        <div class=\"uk-child-width-1-1@s uk-child-width-1-1@m uk-text-center\" uk-grid>\r\n                            <div>\r\n                                <div class=\"uk-card wallet-info-grid uk-padding-small uk-card-body\">\r\n                                    <div class=\"uk-text-center\" uk-grid>\r\n                                        <div class=\"uk-width-expand@m\">\r\n                                            <div\r\n                                                class=\"uk-card uk-card-body address-grid uk-padding-small uk-margin-small-top\">\r\n                                                <div\r\n                                                    class=\"uk-margin uk-grid-small uk-child-width-auto uk-grid pickup-address uk-text-left\">\r\n                                                    <label><input class=\"uk-radio\" type=\"radio\" name=\"radio1\"\r\n                                                            checked><span> Magdoom colony azads\r\n                                                            street bhatkal, karnataka.</span></label>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </li>\r\n\r\n                </ul>\r\n                <p class=\"uk-heading-bullet place-section-title uk-margin-remove-bottom\">Delivery Time</p>\r\n\r\n                <div\r\n                    class=\"uk-padding-small uk-grid-small uk-child-width-auto uk-padding-remove-bottom uk-grid place-date\">\r\n                    <div class=\"uk-inline uk-width-1-1\">\r\n                        <button class=\"uk-button time-btn \" type=\"button\" (click)=\"openTimeSelectionModal()\">\r\n                            <span class=\"material-icons-outlined\"> schedule </span>\r\n                            <ng-container *ngIf=\"selectedTimeSlot != null\">\r\n                                {{ getDay(selectedTimeSlot?.WeekDayId) | date: 'dd-MMM EEEE' }} - {{\r\n                                tConvert(selectedTimeSlot?.FromHours,\r\n                                selectedTimeSlot?.FromMinutes) }} to {{ tConvert(selectedTimeSlot?.ToHours,\r\n                                selectedTimeSlot?.ToMinutes) }}\r\n                            </ng-container>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <p class=\"uk-heading-bullet place-section-title uk-margin-remove-bottom\">Payment Method</p>\r\n                    <div class=\" uk-padding-small uk-child-width-auto uk-grid place-date\">\r\n                        <label><input class=\"uk-radio color-black\" type=\"radio\" name=\"paymentMethod\"\r\n                                [(ngModel)]=\"paymentMethod\" [value]=\"2\" [ngModelOptions]=\"{standalone: true}\"> Pay Online</label>\r\n                        <label><input class=\"uk-radio\" type=\"radio\" name=\"paymentMethod\" [(ngModel)]=\"paymentMethod\"\r\n                                [value]=\"1\" [ngModelOptions]=\"{standalone: true}\">\r\n                            Cash On-Delivery</label>\r\n                    </div>\r\n\r\n                </div>\r\n                <label *ngIf=\"currentWalletBalance > 0\">\r\n                    <div class=\"wallet-grid\">\r\n                        <table class=\"uk-table uk-table-small uk-table-divider\">\r\n\r\n                            <tbody>\r\n                                <tr class=\"wallet-tr\">\r\n                                    <td><input [formControlName]=\"'UseWallet'\" class=\"uk-checkbox uk-align-center\"\r\n                                            type=\"checkbox\">\r\n                                    </td>\r\n                                    <td class=\"wallet-details\">Pay with MWallet <br> <span>Available Balance <span\r\n                                                class=\"r-symbol\">₹{{ currentWalletBalance }}</span> </span></td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </label>\r\n                <div class=\"invoice-grid uk-padding-small uk-padding-remove-bottom\">\r\n                    <p class=\"price-heading\">Price Detail</p>\r\n                    <table class=\"uk-table uk-table-small invoice-table uk-table-divider uk-margin-remove\">\r\n\r\n                        <tbody>\r\n                            <tr>\r\n                                <td class=\"invoice-info\">Price ({{ cartCount }} Items)</td>\r\n\r\n                                <td class=\"invoice-details\"><span class=\"r-symbol\">\r\n                                    ₹<span>{{cartTotal}}</span>\r\n                                    </span></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td class=\"invoice-info\">Delivery Charges</td>\r\n                                <td class=\"invoice-details\"><span class=\"free-del\">\r\n                                        FREE</span></td>\r\n                            </tr>\r\n                            <tr *ngIf=\"useWallet && currentWalletBalance > 0\">\r\n                                <td class=\"invoice-info\">Wallet Amount</td>\r\n\r\n                                <td class=\"invoice-details\"><span class=\"r-symbol\">\r\n                                        ₹</span>{{ cartTotal <= currentWalletBalance ? cartTotal : currentWalletBalance\r\n                                        | number: '1.1-2' }}</td>\r\n                            </tr>\r\n                            <tr class=\"total\">\r\n                                <td class=\"invoice-info\">Total Payable</td>\r\n                                <td class=\"invoice-details\"><span class=\"r-symbol\">\r\n                                        ₹</span>{{ !useWallet ? cartTotal : (cartTotal <= currentWalletBalance ? 0 :\r\n                                        cartTotal - currentWalletBalance) | number: '1.1-2' }}/-</td>\r\n\r\n                        </tbody>\r\n                    </table>\r\n                    <!-- <p class=\"saving-title uk-margin-small-top\">Total savings on this orders <span\r\n                            class=\"uk-float-right  \"><span class=\"r-symbol\">\r\n                                ₹</span>{{ cartTotal }}</span>\r\n                    </p> -->\r\n                </div>\r\n            </div>\r\n\r\n            <button type=\"submit\" [attr.disabled]=\"index == 0 && (defaultAddress == null || selectedTimeSlot == null) ? 'disabled' : null\"\r\n                class=\"uk-button uk-width-1-1 proceed-payment-btn uk-position-bottom uk-text-center\">Check Out</button>\r\n\r\n        </form>\r\n\r\n    </div>\r\n</div>","import { Component, Injector, Input, OnInit } from '@angular/core';\r\nimport { AbstractControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { AuthenticationService } from 'src/app/auth/_services/authentication.service';\r\nimport { Address, AddressFilter } from 'src/app/models/address';\r\nimport { Cart, CartProductView } from 'src/app/models/cart';\r\nimport { ModalRequest, ModalType, PaymentType, ResponseObject, Result } from 'src/app/models/common';\r\nimport { Order } from 'src/app/models/order';\r\nimport { ProductFilter, ProductVariant } from 'src/app/models/product';\r\nimport { Wallet } from 'src/app/models/wallet';\r\nimport { AddressesService } from 'src/app/services/api-services/address.service';\r\nimport { PlaceOrderService } from 'src/app/services/api-services/place-order.service';\r\nimport { ProductsService } from 'src/app/services/api-services/products.service';\r\nimport { WalletService } from 'src/app/services/api-services/wallet.service';\r\nimport { CartService } from 'src/app/services/cart.service';\r\nimport { BaseComponent } from 'src/app/shared/base.component';\r\nimport { environment } from 'src/environments/environment';\r\n\r\ndeclare var Razorpay: any;\r\ndeclare var UIkit: any;\r\n\r\n@Component({\r\n  selector: 'app-wb-place-orders',\r\n  templateUrl: './wb-place-orders.component.html',\r\n  styleUrls: ['./wb-place-orders.component.scss']\r\n})\r\nexport class WbPlaceOrdersComponent extends BaseComponent implements OnInit {\r\n\r\n  @Input() placeOrderId: string = 'place-order';\r\n\r\n  razorPay: any;\r\n\r\n  currentWalletBalance: number; \r\n\r\n  order: Order = new Order();\r\n\r\n  selectedTimeSlot: any;\r\n\r\n  productCartList: CartProductView[] = [];\r\n\r\n  razorPayOptions: any = environment.razorPayOptions;\r\n\r\n  addresses: Address[] = [];\r\n\r\n  paymentMethod: number = PaymentType.OnlinePayment;\r\n\r\n  razorPayModal = {\r\n    ondismiss: this.razorPayDismiss.bind(this),\r\n    escape: true,\r\n    backdropclose: false\r\n  };\r\n\r\n  formInstance: FormGroup = this.fb.group({\r\n    RelDay: [0, [Validators.required, Validators.max(1)]],\r\n    TimePeriod: [1, [Validators.required]],\r\n    IsDelivery: [true], \r\n    UseWallet: [false], \r\n  });\r\n  \r\n  get cartCount(): number {\r\n    return this.cartService.getCartCount();\r\n  }\r\n\r\n  get relDay(): AbstractControl | null {\r\n    return this.formInstance.get(\"RelDay\");\r\n  }\r\n\r\n  get useWallet(): boolean {\r\n    return this.formInstance.get(\"UseWallet\")?.value;\r\n  };\r\n\r\n  get timePeriod(): AbstractControl | null {\r\n    return this.formInstance.get(\"TimePeriod\");\r\n  }\r\n\r\n  @Input() set active(_active: boolean) {\r\n    if (_active) {\r\n      this.ngOnInit();\r\n    }\r\n  }\r\n\r\n  get cartTotal(): number {\r\n    return this.productCartList.reduce((sum, item) => sum + (item.Quantity * item.ProductVariant.Price), 0);\r\n  }\r\n\r\n  get cartItems(): Cart[] {\r\n    return this.cartService.getCartList();\r\n  }\r\n\r\n  get defaultAddress(): Address | null {\r\n    if (this.addresses.length > 0) {\r\n      let addresses = this.addresses.filter(i => i.IsDefault);\r\n      if (addresses == null || addresses.length > 0) {\r\n        return addresses[0];\r\n      }\r\n      else {\r\n        return this.addresses[0];\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  @Input()\r\n  set index(ind: number) {\r\n    this.formInstance.patchValue({ IsDelivery: ind == 0 });\r\n    if (this.switcher) {\r\n      setTimeout(() => {\r\n        this.switcher.show(ind);\r\n      }, 300);\r\n    }\r\n  }\r\n\r\n  get index(): number {\r\n    return this.formInstance.get(\"IsDelivery\")?.value === true ? 0 : 1;\r\n  }\r\n\r\n  get switcher(): any {\r\n    return UIkit.switcher('#switcher-panel');\r\n  };\r\n\r\n  constructor(injector: Injector,\r\n    private authService: AuthenticationService,\r\n    private addressService: AddressesService,\r\n    private cartService: CartService,\r\n    private productService: ProductsService,\r\n    private walletService: WalletService,\r\n    private placeOrderService: PlaceOrderService) {\r\n    super(injector);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    UIkit.offcanvas(`#${this.placeOrderId}`).hide();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    setTimeout(() => {\r\n      UIkit.offcanvas(`#${this.placeOrderId}`).show();\r\n      UIkit.util.on(`#${this.placeOrderId}`, \"hidden\", () => {\r\n        let outletUrls: string[] = [];\r\n        if (this.router.url.indexOf('order-success') >= 0) {\r\n          outletUrls.push('order-success');\r\n          //outletUrls.push(this.selectedId);\r\n        }\r\n        this.router.navigate([{ outlets: { action: outletUrls } }]);\r\n      });\r\n    })\r\n\r\n    if (this.switcher) {\r\n      setTimeout(() => {\r\n        this.switcher.show(this.index);\r\n      }, 200);\r\n    }\r\n\r\n    let filter = new AddressFilter();\r\n    filter.UserId = this.authService.currentUserValue.userId;\r\n    this.addressService.getAddressList(filter).subscribe((res: ResponseObject<any>) => {\r\n      console.log(\"Addresses: \")\r\n      this.addresses = res.Data;\r\n    });\r\n\r\n    this.placeOrderService.orderTimeSlotStatus.subscribe((res: any) => {\r\n      console.log(\"Status of selection: \" + JSON.stringify(res));\r\n      if (res != null) {\r\n        this.selectedTimeSlot = res;\r\n        this.timePeriod?.setValue(this.selectedTimeSlot.TimePeriodId);\r\n        this.placeOrderService.setSelectedTimeSlot(null);\r\n      }\r\n    });\r\n\r\n    this.loadProducts();\r\n  }\r\n\r\n  loadProducts() {\r\n\r\n    if (this.cartItems.length == 0) {\r\n      this.productCartList = [];\r\n      return;\r\n    }\r\n\r\n    this.showSpinner();\r\n\r\n    let filter: ProductFilter = new ProductFilter();\r\n    filter.Ids = this.cartItems.map(i => i.ProductVariantId).join(',');\r\n    this.productService.getProductVariantList(filter).subscribe((res: ResponseObject<ProductVariant[]>) => {\r\n      let productCartList: CartProductView[] = [];\r\n      let variantList = res.Data ?? [];\r\n      variantList.forEach(vItem => {\r\n        this.cartItems.forEach(cItem => {\r\n          if (vItem.Id == cItem.ProductVariantId) {\r\n            productCartList.push({\r\n              Quantity: cItem.Quantity,\r\n              ProductVariantId: cItem.ProductVariantId,\r\n              ProductVariant: vItem\r\n            })\r\n          }\r\n        });\r\n      })\r\n      this.productCartList = productCartList;\r\n      this.hideSpinner();\r\n    });\r\n    this.walletService.getWalletList().subscribe(res => {\r\n      let walletList: Wallet[] = res.Data;\r\n      let currentBalance = 0;\r\n      walletList.forEach(item => currentBalance += item.Amount);\r\n      this.currentWalletBalance = currentBalance;\r\n      if(this.currentWalletBalance > 0) this.formInstance.patchValue({\"UseWallet\": true})\r\n    });\r\n  }\r\n\r\n  submit() {\r\n\r\n    this.showFullSpinner();\r\n\r\n    let url = environment.apiUrl + \"/order/initiate-order\";\r\n\r\n    this.order.RelDay = this.relDay?.value;\r\n    this.order.TimePeriod = this.timePeriod?.value;\r\n    this.order.IsDelivery = this.index == 0;\r\n    this.order.OrderDate = new Date();\r\n    this.order.PaymentMode = this.paymentMethod;\r\n    this.order.Purchases = [];\r\n    this.order.UseWallet = this.useWallet;\r\n\r\n    let isDirectPlace = this.order.UseWallet && this.cartTotal <= this.currentWalletBalance;\r\n\r\n    if (this.order.PaymentMode == PaymentType.CashOnDelivery || isDirectPlace) {\r\n\r\n      this.order.Purchases = this.cartItems;\r\n      this.placeOrder(this.order, () => {\r\n        this.hideFullSpinner()\r\n        this.cartService.clearList();\r\n        this.orderPlacedSuccessfully();\r\n      });\r\n\r\n    } else {\r\n      let sum = 0;\r\n      this.order.Purchases.forEach(item => {\r\n        let amount = (item.Price - ((item.Price * item.Discount / 100))) * item.Quantity;\r\n        sum += amount;\r\n      })\r\n      let request = {\r\n        UseWallet: this.useWallet,\r\n        CartList: this.cartItems\r\n      }\r\n      this.apiRequestService.post(url, request).subscribe(res => {\r\n        this.payment(res.Data.RazorPayOrderId, res.Data.Amount);\r\n      });\r\n    }\r\n  }\r\n\r\n  placeOrder(order: Order, callback?: Function) {\r\n\r\n    let url = environment.apiUrl + \"/order/place-order\";\r\n    this.apiRequestService.post(url, order).subscribe(res => {\r\n      console.log(res);\r\n      if (callback) {\r\n        callback();\r\n      }\r\n    });\r\n  }\r\n\r\n  razorPayDismiss() {\r\n    this.router.navigate(['/'], { replaceUrl: true });\r\n  }\r\n\r\n  razorPayHandler(response: any) {\r\n    this.order.PaymentId = response.razorpay_payment_id;\r\n    this.order.PaymentOrderId = response.razorpay_order_id;\r\n    this.order.PaymentSignature = response.razorpay_signature;\r\n\r\n    this.showFullSpinner()\r\n    this.placeOrder(this.order, () => {\r\n      this.cartService.clearList();\r\n      this.orderPlacedSuccessfully();\r\n    });\r\n  }\r\n\r\n  orderPlacedSuccessfully() {\r\n\r\n    this.hideFullSpinner();\r\n\r\n    // this.apiRequestService.showMessage({\r\n    //   Message: \"Your order Is Placed Successfully\", Result: Result.Success,\r\n    //   Data: 0,\r\n    //   IsSuccess: true\r\n    // })\r\n\r\n    this.router.navigate([{ outlets: { action: ['order-success'], primary: [] } }])\r\n  }\r\n\r\n  payment(orderId: string, amount: number) {\r\n\r\n    this.hideFullSpinner();\r\n\r\n    var ref = this;\r\n    this.razorPayOptions.amount = amount;\r\n    this.razorPayOptions.order_id = orderId;\r\n    this.razorPayOptions.handler = this.razorPayHandler.bind(this);\r\n    this.razorPayOptions.modal = this.razorPayModal;\r\n    this.razorPayOptions.prefill = {\r\n      name: \"Sauban Sada\",\r\n      email: \"sadasauban123@gmail.com\",\r\n      contact: \"5858585858\"\r\n    };\r\n\r\n    this.razorPay = new Razorpay(this.razorPayOptions);\r\n\r\n    this.razorPay.modal = this.razorPayModal;\r\n\r\n    this.razorPay.open();\r\n  }\r\n\r\n  openTimeSelectionModal() {\r\n    let request = { open: false, modalType: ModalType.TimingSelection, data: null };\r\n    this.utilities.openModalDialog(request);\r\n  }\r\n}\r\n","<div class=\"uk-card product-grid uk-padding-remove\">\r\n\r\n    <div class=\"uk-width-1-1@m uk-width-1-2@s uk-width-1-3\">\r\n\r\n        <div (click)=\"openProductOverView()\" class=\"uk-card  uk-padding-small uk-card-body\">\r\n            <img [attr.src]=\"imgUrl + product.ProductImages[0]\" class=\"product-img \" [alt]=\"product.ProductName\">\r\n\r\n        </div>\r\n\r\n\r\n    </div>\r\n\r\n    <div class=\"uk-card-body uk-padding-small uk-padding-remove-bottom\">\r\n        <div class=\"product-price\">\r\n            <span class=\"offer-price\">\r\n                ₹{{ selectedProduct?.Price | number: '1.1-2' }}</span> &nbsp;\r\n            <span class=\"mrp-price\" *ngIf=\"selectedProduct?.DiscountPercentage != 0\">\r\n                ₹{{ selectedProduct?.Mrp }}</span> <br>\r\n            <span class=\"uk-badge price-offbadge \" *ngIf=\"selectedProduct?.DiscountPercentage != 0\">\r\n                    ₹{{ selectedProduct?.DiscountPercentage }}% OFF\r\n                </span>\r\n        </div>\r\n        <h6 class=\"product-name uk-margin-small-bottom\" (click)=\"openProductOverView()\">\r\n            {{ product?.ProductName }}\r\n        </h6>\r\n\r\n    </div>\r\n\r\n    <div class=\"uk-card-footer uk-padding-small uk-padding-remove-top\">\r\n        <a (click)=\"openProductVariants()\" class=\"uk-button uk-button-small price-variant uk-float-left\">\r\n            {{ selectedProduct?.Volume }} {{ selectedProduct?.MeasureName }}\r\n            <span class=\"material-icons-outlined\">\r\n                chevron_right\r\n            </span>\r\n        </a>\r\n        <span class=\"uk-float-right\" *ngIf=\"cartCount > 0\">\r\n            <span class=\"material-icons-outlined price-addon-btn\" (click)=\"removeFromCart()\">\r\n                remove_circle_outline\r\n            </span>\r\n        <input type=\"text\" name=\"\" id=\"\" [value]=\"cartCount\" class=\"uk-input uk-form-small price-addon-qty\" maxlength=\"2\">\r\n        <span class=\"material-icons-outlined price-addon-btn\" (click)=\"addToCart()\">\r\n                add_circle_outline\r\n            </span>\r\n        </span>\r\n        <button class=\"uk-button price-addbtn uk-float-right uk-button-small\" *ngIf=\"cartCount == 0\" (click)=\"addToCart()\">Add </button>\r\n    </div>\r\n</div>","import { Component, Input, OnInit } from '@angular/core';\r\nimport { ModalType } from 'src/app/models/common';\r\nimport { Product, ProductVariant } from 'src/app/models/product';\r\nimport { CartService } from 'src/app/services/cart.service';\r\nimport { UtilitiesService } from 'src/app/services/utilities.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-wb-product-item-card',\r\n  templateUrl: './wb-product-item-card.component.html',\r\n  styleUrls: ['./wb-product-item-card.component.scss']\r\n})\r\nexport class WbProductItemCardComponent implements OnInit {\r\n\r\n  @Input() public product!: Product;\r\n\r\n  selectedIndex: number = 0;\r\n\r\n  get selectedProduct(): ProductVariant | undefined {\r\n    if (this.product != null && this.product.ProductVariants.length > 0) {\r\n      return this.product.ProductVariants[this.selectedIndex];\r\n    }\r\n  }\r\n\r\n  get cartCount(): number {\r\n    let count = 0;\r\n    if (this.product != null && this.product.ProductVariants?.length > 0) {\r\n      count = this.cartService.getProductCartCount(this.product.ProductVariants[0].Id);\r\n    }\r\n    return count;\r\n  }\r\n\r\n  imgUrl: string = environment.uploadsUrl;\r\n\r\n  constructor(private utilities: UtilitiesService, private cartService: CartService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  openProductOverView() {\r\n    let request = { open: false, modalType: ModalType.ProductOverview, data: this.product };\r\n    this.utilities.openModalDialog(request);\r\n  }\r\n\r\n  openProductVariants() {\r\n    let request = { open: false, modalType: ModalType.ProductVariant, data: this.product };\r\n    this.utilities.openModalDialog(request);\r\n  }\r\n\r\n  addToCart() {\r\n    this.cartService.addItem(this.product.ProductVariants[0].Id);\r\n  }\r\n\r\n  removeFromCart() {\r\n    this.cartService.decreaseItem(this.product.ProductVariants[0].Id);\r\n  }\r\n}\r\n","<div class=\"uk-modal-dialog uk-modal-body pm-modal\">\r\n\r\n    <button class=\"uk-modal-close-default\" type=\"button\" uk-close></button>\r\n\r\n    <div class=\"uk-modal-body uk-padding-remove\" uk-overflow-auto>\r\n\r\n        <div class=\"uk-card uk-padding-small uk-grid-collapse uk-child-width-1-2@s\" uk-grid>\r\n\r\n            <div class=\"uk-card-media-left \">\r\n                <img *ngIf=\"product != null && product?.ProductImages != null\" [attr.src]=\"imgUrl + product.ProductImages[0]\" class=\"pm-product-image uk-align-center \" alt=\"\">\r\n            </div>\r\n\r\n            <div>\r\n\r\n                <div class=\"uk-card-body uk-padding-remove pm-details-grid\">\r\n\r\n                    <h3 class=\"pm-product-name uk-margin-remove\"> {{ product?.ProductName }}</h3>\r\n\r\n                    <h4 class=\"pm-product-category uk-margin-remove\"> {{ product?.SubCategoryName }}</h4>\r\n\r\n                    <p class=\"pm-product-price uk-margin-remove\">\r\n                        <span>₹{{ selectedProduct?.Price | number: '1.1-2' }}</span>\r\n                        <span class=\"pm-product-mrp uk-margin-remove\" *ngIf=\"selectedProduct?.DiscountPercentage != 0\"><span>₹{{ selectedProduct?.Mrp }}</span></span>\r\n                    </p>\r\n\r\n                    <span class=\"uk-badge pm-product-badge uk-margin-remove\" *ngIf=\"selectedProduct?.DiscountPercentage != 0\">\r\n             {{ selectedProduct?.DiscountPercentage }}% OFF\r\n           </span>\r\n                    <p class=\"pm-product-description uk-margin-remove\">\r\n                        {{ product?.Description }}\r\n                    </p>\r\n\r\n\r\n\r\n\r\n                    <div class=\"pm-avail-heading uk-margin-small\">Pack Size</div>\r\n\r\n                    <div class=\"pm-variant-button uk-margin-remove\">\r\n                        <ng-container *ngFor=\"let variant of product?.ProductVariants; let i = index\">\r\n                            <button class=\"uk-button uk-button-small\" [class.selected]=\"selectedProduct?.Id == variant.Id\" (click)=\"selectedIndex = i\">{{ variant?.Volume }}\r\n                 {{ variant?.MeasureName }}</button>\r\n                        </ng-container>\r\n                    </div>\r\n\r\n                    <div *ngIf=\"cartCount[selectedIndex] > 0\">\r\n                        <span uk-icon=\"icon:minus-circle; ratio: 0.8;\" class=\"price-addon-btn\" (click)=\"removeFromCart()\"></span>\r\n                        <input type=\"text\" name=\"\" id=\"\" [value]=\"cartCount[selectedIndex]\" class=\"uk-input uk-form-small price-addon-qty\" maxlength=\"2\">\r\n                        <span uk-icon=\"icon:plus-circle; ratio: 0.8;\" class=\"price-addon-btn\" (click)=\"addToCart()\"></span>\r\n                    </div>\r\n\r\n                    <button *ngIf=\"cartCount[selectedIndex] == 0\" (click)=\"addToCart()\" class=\"uk-button  uk-margin pm-btn \">Add to cart</button>\r\n\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>","import { Component, Input, OnInit } from '@angular/core';\r\nimport { Product, ProductVariant } from 'src/app/models/product';\r\nimport { CartService } from 'src/app/services/cart.service';\r\nimport { UtilitiesService } from 'src/app/services/utilities.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-wb-product-overview-modal',\r\n  templateUrl: './wb-product-overview-modal.component.html',\r\n  styleUrls: ['./wb-product-overview-modal.component.scss']\r\n})\r\nexport class WbProductOverviewModalComponent implements OnInit {\r\n\r\n  imgUrl: string = environment.uploadsUrl;\r\n  selectedIndex: number = 0;\r\n\r\n  get selectedProduct(): ProductVariant | undefined {\r\n    if (this.product != null && this.product.ProductVariants.length > 0) {\r\n      return this.product.ProductVariants[this.selectedIndex];\r\n    }\r\n    else return;\r\n  }\r\n\r\n  @Input()\r\n  product: Product;\r\n\r\n  get cartCount(): number[] {\r\n    let count: number[] = [];\r\n    if (this.product != null && this.product.ProductVariants?.length > 0) {\r\n      for (let item of this.product.ProductVariants) {\r\n        count.push(this.cartService.getProductCartCount(item.Id));\r\n      }\r\n    }\r\n    return count;\r\n  }\r\n\r\n  constructor(private utilities: UtilitiesService, private cartService: CartService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  addToCart() {\r\n    this.cartService.addItem(this.selectedProduct?.Id ?? 0);\r\n  }\r\n\r\n  removeFromCart() {\r\n    this.cartService.decreaseItem(this.selectedProduct?.Id ?? 0);\r\n  }\r\n\r\n}\r\n","<div class=\"uk-modal-dialog uk-modal-body  product-variant\">\r\n\r\n    <button class=\"uk-modal-close-outside\" type=\"button\" uk-close></button>\r\n\r\n    <div class=\" uk-grid-match uk-grid-collapse\" uk-grid>\r\n        <div class=\"uk-width-1-3@m\">\r\n            <div class=\"uk-card uk-text-center uk-padding-remove  uk-card-body\">\r\n                <img class=\"view-image uk-align-center variant-imagegrid\" *ngIf=\"product != null && product?.ProductImages != null\" [attr.src]=\"imgUrl + product.ProductImages[0]\">\r\n                <h6 class=\"variant-name uk-margin-remove-bottom\">{{ product?.ProductName }}</h6>\r\n                <button (click)=\"openProductOverView()\" class=\"uk-button uk-button-text view-details\">View Details</button>\r\n\r\n            </div>\r\n        </div>\r\n        <div class=\"uk-width-expand@m\" *ngIf=\"product != null\">\r\n            <div class=\"uk-card uk-padding-small uk-card-body\">\r\n                <ng-container *ngFor=\"let item of product.ProductVariants; let i = index\">\r\n                    <div class=\"variants-grid uk-padding-small\">\r\n                        <table class=\"uk-table uk-table-small uk-table-divider variation-table uk-margin-remove\">\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td>\r\n                                        <p class=\"variant-qty uk-margin-remove\"> {{ item.Volume }} <span> {{ item.MeasureName }} </span></p>\r\n                                        <p class=\"price uk-margin-remove\"><span class=\"r-symbol variant-price\"> ₹{{ item.Price }}</span><span class=\"variant-mrp\" *ngIf=\"item.DiscountPercentage != 0\">₹ {{ item.Mrp }}</span></p>\r\n                                    </td>\r\n                                    <td><button class=\"uk-button variant-add uk-align-right uk-button-small\" *ngIf=\"cartCount[i] == 0\" (click)=\"addToCart(item)\">Add</button>\r\n                                        <span class=\"uk-float-right\" *ngIf=\"cartCount[i] > 0\">\r\n\r\n                                        <span uk-icon=\"icon:minus-circle; ratio: 0.8;\" class=\"price-addon-btn\"\r\n                                          (click)=\"removeFromCart(item)\"></span>\r\n\r\n                                        <input type=\"text\" name=\"\" id=\"\" [value]=\"cartCount[i]\" class=\"uk-input uk-form-small price-addon-qty\" maxlength=\"2\">\r\n\r\n                                        <span uk-icon=\"icon:plus-circle; ratio: 0.8;\" class=\"price-addon-btn\" (click)=\"addToCart(item)\"></span>\r\n\r\n                                        </span>\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </ng-container>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, Input, OnInit } from '@angular/core';\r\nimport { ModalRequest, ModalType } from 'src/app/models/common';\r\nimport { Product, ProductVariant } from 'src/app/models/product';\r\nimport { CartService } from 'src/app/services/cart.service';\r\nimport { UtilitiesService } from 'src/app/services/utilities.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-wb-product-variants-modal',\r\n  templateUrl: './wb-product-variants-modal.component.html',\r\n  styleUrls: ['./wb-product-variants-modal.component.scss']\r\n})\r\nexport class WbProductVariantsModalComponent implements OnInit {\r\n\r\n  imgUrl: string = environment.uploadsUrl;\r\n\r\n  @Input()\r\n  product: Product;\r\n  \r\n  get cartCount(): number[] {\r\n    let count: number[] = [];\r\n    if (this.product != null && this.product.ProductVariants?.length > 0) {\r\n      for (let item of this.product.ProductVariants) {\r\n        count.push(this.cartService.getProductCartCount(item.Id));\r\n      }\r\n    }\r\n    return count;\r\n  }\r\n\r\n  constructor(private utilities: UtilitiesService, private cartService: CartService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  openProductOverView() {\r\n    let request: ModalRequest = { open: false, modalType: ModalType.ProductVariant, data: null };\r\n\r\n    this.utilities.closeModalDialog(request);\r\n\r\n    request = { open: false, modalType: ModalType.ProductOverview, data: this.product }\r\n    this.utilities.openModalDialog(request);\r\n  }\r\n \r\n  addToCart(variant: ProductVariant) {\r\n    this.cartService.addItem(variant?.Id ?? 0);\r\n  }\r\n\r\n  removeFromCart(variant: ProductVariant) {\r\n    this.cartService.decreaseItem(variant?.Id ?? 0);\r\n  }\r\n\r\n}\r\n","import { Component, Injector, Input, OnInit } from '@angular/core';\nimport { WalletService } from 'src/app/services/api-services/wallet.service';\nimport { BaseComponent } from 'src/app/shared/base.component';\nimport { Location } from '@angular/common'; \nimport { FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { User } from 'src/app/auth/_models/user';\nimport { AuthenticationService } from 'src/app/auth/_services/authentication.service';\nimport { UserService } from 'src/app/auth/_services/user.service';\nimport { CartService } from 'src/app/services/cart.service'; \nimport { environment } from 'src/environments/environment';\n\ndeclare var UIkit: any;\n\n@Component({\n  selector: 'app-wb-profile',\n  templateUrl: './wb-profile.component.html',\n  styleUrls: ['./wb-profile.component.scss']\n})\nexport class WbProfileComponent  extends BaseComponent implements OnInit {\n\n  \n  @Input() modalId: string = 'user-profile-modal';\n\n  assetsUrl: string = environment.assetsUrl;\n\n  userInfo: User;\n\n  formInstance: FormGroup = this.fb.group({\n    UserName: [''],\n    FirstName: ['', [Validators.required]],\n    LastName: ['', [Validators.required]],\n    PhoneNumber: ['', [Validators.required]],\n    Email: ['', [Validators.required]]\n  })\n\n  get isUserLogged(): boolean {\n    return this.authService.currentUserValue != null && this.authService.currentUserValue.requireOTP === \"False\";\n  }\n\n  get cartCount(): number {\n    return this.cartService.getCartCount();\n  }\n\n  constructor(protected injector: Injector, private cartService: CartService,\n    private authService: AuthenticationService,\n    private userrService: UserService,\n    private userService: UserService,\n    private _location: Location) {\n    super(injector);\n  }\n \n  loadCurrentUseerDetails(force: boolean = false) {\n    this.userrService.getCurrentUserDetails(force).subscribe(data => {\n      this.userInfo = data;\n      if (this.userInfo.PhoneNumber == null) {\n        this.userInfo.PhoneNumber = data.UserName;\n      }\n      this.formInstance.patchValue(this.userInfo);\n    });\n  }\n\n\n  logOutClick() {\n    this.showSpinner();\n    this.authService.logout().subscribe(res => {\n      this.router.navigate([\"\"], { replaceUrl: true })\n      this.hideSpinner()\n    });\n  }\n\n  submitForm() {\n    let editModal = 'edit-user'\n    this.userService.saveUserDetails(this.formInstance.value).subscribe((data) => {\n      if (data.IsSuccess) {\n        this.loadCurrentUseerDetails(true);\n        UIkit.modal('#' + editModal).hide();\n      }\n    })\n  }\n \n  \n  isAddOrEdit: boolean = false;\n  isEditMode: boolean = false\n  \n  ngOnInit(): void { \n\n    this.showModal(this.modalId, () => {\n      this.modalClose()\n    });\n    this.loadCurrentUseerDetails();\n    \n  }\n  \n  \n  modalClose() {\n    if (this.router != null) {\n      let outletUrls: string[] = []; \n      this.router.navigate([\"/\"]);\n    }\n  }\n  \n  close() {\n    this._location.back();\n  }\n\n  navigateBack() {\n    this._location.back();\n  }\n}","<div id=\"modal-container\">\n\n    <div [id]=\"modalId\" uk-scrollspy=\"target: > div; cls: uk-animation-slide-right-medium;\" uk-modal bg-close=\"false\"\n        container=\"#pmodal-container\" esc-close=\"false\">\n        <div class=\"uk-modal-dialog uk-modal-body uk-height-1-1@s add-address-modal\">\n\n            <button class=\"uk-modal-close-default\" uk-close type=\"button\" (click)=\"close()\"></button>\n\n            <p class=\"modal-heading uk-margin-small-bottom\">\n                <a (click)=\"navigateBack()\"><span class=\"material-icons-outlined back-btn\">\n                        arrow_back\n                    </span></a> My Details\n            </p>\n            <button class=\"uk-modal-close-default\" type=\"button\" uk-close></button>\n\n\n            <div class=\"uk-child-width-1-1@s uk-child-width-1-1@m\" uk-grid>\n                <div>\n                    <div class=\"uk-card detail-info-grid uk-padding-small uk-card-body\">\n                        <form [formGroup]=\"formInstance\" (ngSubmit)=\"formInstance.valid && submitForm()\"\n                            class=\"uk-grid-small\" uk-grid>\n\n                            <div class=\"uk-width-1-1 uk-text-center uk-margin-small-bottom uk-margin-small-top\">\n                                <h6> Update Your Details</h6>\n                            </div>\n\n                            <div class=\"uk-width-1-1 uk-margin-small-top\">\n                                <label class=\"uk-form-label\" class=\"userform-label\">Phone number</label>\n                                <div class=\"uk-inline uk-width-1-1\">\n                                    <span class=\"uk-form-icon userform-code\">\n                                        +91-\n                                    </span>\n                                    <input readonly [formControlName]=\"'PhoneNumber'\"\n                                        class=\"uk-input user-phone-number userform-input uk-width-1-1\" type=\"number\"\n                                        max-length=\"10\" placeholder=\"Enter your mobile number\">\n\n                                </div>\n                            </div>\n\n                            <div class=\"uk-width-1-1 uk-margin-small-top\">\n                                <label class=\"uk-form-label\" class=\"userform-label\">Email</label>\n                                <div class=\"uk-inline uk-width-1-1\">\n                                    <span class=\"uk-form-icon userform-code material-icons-outlined\">\n                                        email\n                                    </span>\n                                    <input [formControlName]=\"'Email'\" class=\"uk-input userform-input uk-width-1-1\"\n                                        type=\"email\" max-length=\"10\" placeholder=\"Enter your email\">\n\n                                </div>\n                            </div>\n\n                            <div class=\"uk-width-1-1 uk-margin-small-top\">\n                                <label class=\"uk-form-label\" class=\"userform-label\">First Name</label>\n                                <div class=\"uk-inline uk-width-1-1\">\n                                    <span class=\"uk-form-icon userform-code material-icons-outlined\">\n                                        edit\n                                    </span>\n                                    <input [formControlName]=\"'FirstName'\" class=\"uk-input userform-input uk-width-1-1\"\n                                        type=\"text\" max-length=\"10\" placeholder=\"Enter your first name\">\n\n                                </div>\n                            </div>\n\n                            <div class=\"uk-width-1-1 uk-margin-small-top\">\n                                <label class=\"uk-form-label\" class=\"userform-label\">Last Name</label>\n                                <div class=\"uk-inline uk-width-1-1\">\n                                    <span class=\"uk-form-icon userform-code material-icons-outlined\">\n                                        edit\n                                    </span>\n                                    <input [formControlName]=\"'LastName'\" class=\"uk-input userform-input uk-width-1-1\"\n                                        type=\"text\" max-length=\"10\" placeholder=\"Enter your last name\">\n\n                                </div>\n                            </div>\n\n                            <div class=\"uk-width-1-1\">\n                                <br /> \n\n                                <button type=\"submit\" [attr.disabled]=\"formInstance.valid ? null : 'disabled'\"\n                                    class=\"uk-button userform-submit uk-width-1-1\">\n                                    Update\n                                </button>\n                            </div>\n                        </form>\n\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","<div class=\"uk-navbar-item web-search\">\r\n    <form [formGroup]=\"formInstance\" (ngSubmit)=\"searchPerformed()\" class=\"uk-search uk-search-default uk-width-1-1\">\r\n\r\n        <a class=\"uk-search-icon-flip uk-width-1-1\" (click)=\"searchPerformed()\" uk-search-icon></a>\r\n\r\n        <input class=\"uk-search-input web-search-bar\" type=\"search\" [formControlName]=\"'Search'\"\r\n            placeholder=\"Search for products...\" >\r\n            \r\n\r\n        <div uk-drop=\"mode: click; delay-hide: 0\" id=\"search-drop\">\r\n            <div class=\"uk-card uk-card-default uk-card-body web-search-suggestion uk-padding-small\">\r\n                <p class=\"search-heading\">Suggestion</p>\r\n                <table class=\"uk-table uk-table-small  websearch-table\">\r\n                    <tbody>\r\n                        <tr *ngFor=\"let product of productList\">\r\n                            <td><img class=\"srch-img\" [attr.src]=\"uploadsUrl + product.ProductImages[0]\"></td>\r\n                            <td (click)=\"searchPerformed(product.ProductName)\">{{ product.ProductName }} in <span> {{ product.SubCategoryName }}</span></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td><span uk-icon=\"icon:search;ratio: 0.8;\"></span></td>\r\n                            <td (click)=\"searchPerformed()\"><span> Search All</span> {{ searchCtrl != null ?  searchCtrl?.value : '' }}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    </form>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AbstractControl, FormBuilder, FormControl, FormGroup } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { debounceTime, finalize, switchMap, tap } from 'rxjs/operators';\r\nimport { ResponseObject } from 'src/app/models/common';\r\nimport { Product, ProductFilter } from 'src/app/models/product';\r\nimport { ProductsService } from 'src/app/services/api-services/products.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\ndeclare var UIkit: any;\r\n\r\n@Component({\r\n  selector: 'app-wb-search',\r\n  templateUrl: './wb-search.component.html',\r\n  styleUrls: ['./wb-search.component.scss']\r\n})\r\nexport class WbSearchComponent implements OnInit {\r\n\r\n\r\n  formInstance: FormGroup = this.fb.group({\r\n    Search: ['']\r\n  })\r\n\r\n  get searchCtrl(): AbstractControl | null {\r\n    return this.formInstance.get(\"Search\");\r\n  }\r\n\r\n  productList: Product[] = [];\r\n\r\n  isLoading: boolean = false;\r\n\r\n  errorMsg: string = \"\";\r\n\r\n  productFilter: ProductFilter = new ProductFilter();\r\n\r\n  uploadsUrl: string = environment.uploadsUrl;\r\n\r\n  constructor(private productService: ProductsService, private router: Router,\r\n    private fb: FormBuilder) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.productFilter.Search = \"\";\r\n    this.productFilter.PageSize = 10;\r\n\r\n    this.searchCtrl?.valueChanges\r\n      .pipe(\r\n        debounceTime(1000),\r\n        tap(() => {\r\n          this.errorMsg = \"\";\r\n          this.productList = [];\r\n          this.isLoading = true;\r\n        }),\r\n        switchMap(value => {\r\n\r\n          this.productFilter.Search = value\r\n          this.productFilter.PageSize = 5;\r\n          return this.productService.getProductList(this.productFilter)\r\n            .pipe(\r\n              finalize(() => {\r\n                this.isLoading = false\r\n              }),\r\n            )\r\n        })\r\n      )\r\n      .subscribe((res: ResponseObject<Product[]>) => {\r\n        if (res.Data == undefined) {\r\n          // this.errorMsg = data['Error'];\r\n          this.productList = [];\r\n        } else {\r\n          this.errorMsg = \"\";\r\n          this.productList = this.processProductList(res.Data);\r\n        }\r\n\r\n        console.log(\"Search Result: \" + this.productList);\r\n      });\r\n  }\r\n\r\n\r\n  processProductList(list: Product[]): Product[] {\r\n    let _res: Product[] = []\r\n    list.forEach(item => {\r\n      let images: string[] = [];\r\n      item.ProductImages.forEach(img => {\r\n        images.push(img.replace('~', ''));\r\n      });\r\n      item.ProductImages = images\r\n      _res.push(item);\r\n    });\r\n    return _res;\r\n  }\r\n\r\n  searchPerformed(res?: string) {\r\n    let q = res;\r\n    if (q == null) {\r\n      q = this.searchCtrl?.value;\r\n    }\r\n    UIkit.drop(\"#search-drop\").hide();\r\n    this.router.navigateByUrl('/ps?q=' + q)\r\n  }\r\n}\r\n","<div class=\"uk-container uk-container-xlarge uk-padding-remove-top uk-padding-large\"\r\n    *ngIf=\"offerBanners != null && offerBanners.length > 0\">\r\n    <div class=\"uk-child-width-1-2@s uk-child-width-1-4@m uk-text-center uk-grid-small\" \r\n    uk-scrollspy=\"target: > div; cls: uk-animation-slide-bottom-small; delay: 200\" uk-grid>\r\n        <div *ngFor=\"let item of offerBanners\">\r\n            <a [routerLink]=\"'collections/' + item.OfferUrl\">\r\n                <div class=\"uk-card uk-padding-remove uk-card-body\">\r\n                    <img class=\"offer-img\" [attr.src]=\"uploadsUrl + '/' + item.BannerImageUrl\" alt=\"\" />\r\n                </div>\r\n            </a>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, Injector, OnInit } from '@angular/core';\r\nimport { ResponseObject } from 'src/app/models/common';\r\nimport { OfferBanner, OfferBannerPlacement, OfferFilter } from 'src/app/models/offer';\r\nimport { OfferService } from 'src/app/services/api-services/offers.service';\r\nimport { BaseComponent } from 'src/app/shared/base.component';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-wb-secondary-banner',\r\n  templateUrl: './wb-secondary-banner.component.html',\r\n  styleUrls: ['./wb-secondary-banner.component.scss']\r\n})\r\nexport class WbSecondaryBannerComponent extends BaseComponent implements OnInit {\r\n\r\n  uploadsUrl: string = environment.uploadsUrl;\r\n\r\n  offerBanners: OfferBanner[] = [];\r\n\r\n  constructor(protected injector: Injector, protected offerSeervice: OfferService) {\r\n    super(injector);\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    let filter = new OfferFilter();\r\n    this.offerSeervice.getOfferBannerList(filter).subscribe((res: ResponseObject<OfferBanner[]>) => {\r\n      res.Data?.forEach((item: OfferBanner) => {\r\n        item.BannerImageUrl = item.BannerImageUrl.replace(\"~/\", '');\r\n      })\r\n      this.offerBanners = (res.Data ?? []).filter(i => i.Placement == OfferBannerPlacement.DesktopHome);\r\n    })\r\n  } \r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-wb-shop-by-brands',\r\n  templateUrl: './wb-shop-by-brands.component.html',\r\n  styleUrls: ['./wb-shop-by-brands.component.scss']\r\n})\r\nexport class WbShopByBrandsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>wb-shop-by-brands works!</p>\r\n","<div class=\"uk-container uk-container-large uk-padding-large uk-padding-remove-bottom uk-padding-remove-top\">\r\n    <p class=\"home-section-heading\">Trending</p>\r\n    <a class=\"uk-float-right view-more\" routerLink=\"/categories\">View more <span class=\"material-icons-outlined\">\r\n      chevron_right\r\n      </span></a>\r\n    <p class=\"home-section-title uk-margin-medium-bottom\">Shop by Category</p>\r\n    <div class=\"uk-slider-container-offset\" uk-slider=\"autoplay: true; finite: true; autoplay-interval: 8000;\">\r\n\r\n        <div class=\"uk-position-relative uk-visible-toggle uk-light\" tabindex=\"-1\">\r\n\r\n            <ul class=\"uk-slider-items uk-child-width-1-2 uk-child-width-1-6@l uk-grid-small uk-grid-match\" \r\n                uk-scrollspy=\"target: > li; cls: uk-animation-slide-right-small; delay: 80\" uk-grid>\r\n                <ng-container *ngFor=\"let item of categoryList\">\r\n\r\n                    <li [routerLink]=\"['products', item.RouteKey]\">\r\n                        <div class=\"uk-card home-category-grid\" (click)=\"categoryCalicked(item)\">\r\n                            <div class=\"uk-card-media-top uk-padding-small\">\r\n                                <img [attr.src]=\"imgUrl + item.CategoryImage\" alt=\"\">\r\n                            </div>\r\n                            <div class=\"uk-card-body uk-padding-small uk-padding-remove-top\">\r\n                                <p class=\"home-category-title\">{{ item.CategoryName }}</p>\r\n                            </div>\r\n                        </div>\r\n                    </li>\r\n                </ng-container>\r\n            </ul>\r\n\r\n            <a class=\"uk-position-center-left uk-position-small slider-side-category\" href=\"#\" uk-slidenav-previous uk-slider-item=\"previous\"></a>\r\n            <a class=\"uk-position-center-right uk-position-small slider-side-category\" href=\"#\" uk-slidenav-next uk-slider-item=\"next\"></a>\r\n\r\n        </div>\r\n\r\n    </div>\r\n\r\n\r\n\r\n</div>\r\n","import { Component, EventEmitter, Injector, OnInit, Output } from '@angular/core';\r\nimport { Category } from 'src/app/models/category';\r\nimport { ResponseObject } from 'src/app/models/common';\r\nimport { CategoriesService } from 'src/app/services/api-services/categories.service';\r\nimport { BaseComponent } from 'src/app/shared/base.component';\r\nimport { environment } from 'src/environments/environment'; \r\n\r\n@Component({\r\n  selector: 'app-wb-shop-by-category',\r\n  templateUrl: './wb-shop-by-category.component.html',\r\n  styleUrls: ['./wb-shop-by-category.component.scss']\r\n})\r\nexport class WbShopByCategoryComponent extends BaseComponent implements OnInit {\r\n  \r\n  imgUrl: string = environment.uploadsUrl;\r\n\r\n  categoryList: Category[] = []; \r\n\r\n  @Output()\r\n  categoryClicked: EventEmitter<Category> = new EventEmitter<Category>();\r\n\r\n  categoryCalicked(item: Category) {\r\n    this.categoryClicked.emit(item);\r\n  }\r\n\r\n  constructor(protected injector: Injector, \r\n    private categoryService: CategoriesService) {\r\n    super(injector);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    let filter: any;\r\n    this.categoryService.getCategoryList(filter).subscribe((res: ResponseObject<Category[]>) => {\r\n      let data = res.Data ?? [];\r\n      data.forEach(item => {\r\n        item.CategoryImage = item.CategoryImage.replace('~', '');\r\n      })\r\n      this.categoryList = data;\r\n\r\n      console.log(this.categoryList);\r\n    })\r\n  }\r\n\r\n}\r\n","<div class=\"uk-child-width-1-2@s uk-child-width-1-3@m uk-child-width-1-6@l uk-text-center uk-grid-small\"\r\n  uk-height-match=\"target: app-wb-product-item-card > .product-grid > .uk-card-body\"\r\n  uk-scrollspy=\"target: > app-wb-product-item-card; cls: uk-animation-slide-bottom-small; delay: 200\" uk-grid>\r\n  <ng-container *ngFor=\"let item of productList\">\r\n    <app-wb-product-item-card [product]=\"item\"></app-wb-product-item-card>\r\n  </ng-container>\r\n</div>\r\n","import { Component, Injector, Input, OnInit } from '@angular/core';\r\nimport { ResponseObject } from 'src/app/models/common';\r\nimport { Product } from 'src/app/models/product';\r\nimport { ProductsService } from 'src/app/services/api-services/products.service';\r\nimport { BaseComponent } from 'src/app/shared/base.component';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-wb-suggested-products',\r\n  templateUrl: './wb-suggested-products.component.html',\r\n  styleUrls: ['./wb-suggested-products.component.scss']\r\n})\r\nexport class WbSuggestedProductsComponent implements OnInit {\r\n  \r\n  @Input() productList: Product[] = [];\r\n\r\n  constructor() {\r\n  } \r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n}\r\n","<div class=\"uk-modal-dialog uk-modal-body pm-modal\">\n\n    <button class=\"uk-modal-close-default\" type=\"button\" uk-close></button>\n\n    <div class=\"uk-modal-body uk-padding-remove\" uk-overflow-auto>\n\n        <button class=\"uk-modal-close-default\" type=\"button\" uk-close></button>\n\n        <p class=\"picked-date\">Select Delivery Timing Date</p>\n        <div class=\"avail-grids uk-margin-small-top\">\n            <table class=\"uk-table uk-table-small date-table uk-table-divider\">\n                <tbody>\n                    <tr>\n                        <td *ngFor=\"let item of dayList\">\n                            <button class=\"uk-button date-grid\" [class.uk-active]=\"item.WeekDayId == selectedIndex\"\n                                (click)=\"selectedIndex = item.WeekDayId; selectedSlot = -1\">\n                                <ng-container *ngIf=\"item.Title != null\">\n                                   {{ item.Title }} \n                                </ng-container>\n                                <ng-container *ngIf=\"item.Title == null\">\n                                    {{ item.Date | date: 'dd-MMM'}}\n                                </ng-container>\n                            </button>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n            <p class=\"slot-title\">Select time slot</p>\n            <div class=\"times-grid\">\n                <div class=\"uk-child-width-1-2@s uk-child-width-1-2@m uk-grid-small uk-text-left\" uk-grid>\n                    <ng-container *ngFor=\"let item of timingList\">\n                        <div *ngIf=\"item.WeekDayId == selectedIndex\">\n                            <div class=\"uk-card time-grid uk-card-body\" [class.uk-active]=\"item.Id == selectedSlot\" (click)=\"item.IsTimingActive && timeSelected(item, true);\">\n                                <button class=\"uk-button slot-btn uk-width-1-1\" [class.notavail]=\"!item.IsTimingActive\">\n                                    <span>  {{ item.TimePeriodId }} | {{ tConvert(item.FromHours, item.FromMinutes) }} to {{ tConvert(item.ToHours, item.ToMinutes) }}\n                                    </span></button>\n                            </div>\n                        </div>\n                    </ng-container>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, Injector, Input, OnDestroy, OnInit } from '@angular/core';\nimport { ModalRequest, ModalType, ResponseObject } from 'src/app/models/common';\nimport { DeliveryTimingFilter } from 'src/app/models/delivery-timings';\nimport { DeliveryTimingsService } from 'src/app/services/api-services/delivery-timings.service';\nimport { PlaceOrderService } from 'src/app/services/api-services/place-order.service';\nimport { BaseComponent } from 'src/app/shared/base.component';\n\n@Component({\n  selector: 'app-wb-timing-selector',\n  templateUrl: './wb-timing-selector.component.html',\n  styleUrls: ['./wb-timing-selector.component.scss']\n})\nexport class WbTimingSelectorComponent extends BaseComponent implements OnInit, OnDestroy {\n\n  @Input()\n  modalId: string = \"time-selector-modal\";\n\n  timingList: any[];\n  dayList: any[] = [];\n  selectedIndex: number = 0;\n  selectedSlot: number = 0;\n  selectedSlotItem: any = null;\n\n  // orderStatus: typeof OrderStatus = OrderStatus;\n  // camelCaseToSpacedText: typeof transformCamelToSpaces = transformCamelToSpaces;\n\n  // orders: Order[];\n  selectedId: number;\n\n  constructor(protected injector: Injector, private services: DeliveryTimingsService,\n    private placeOrderService: PlaceOrderService) {\n    super(injector);\n  }\n\n  ngOnInit(): void {\n\n    let filter: DeliveryTimingFilter = new DeliveryTimingFilter();\n    this.services.getDeliveryTimingsList(filter).subscribe((res: ResponseObject<any[]>) => {\n      this.timingList = res.Data ?? [];\n      if (this.timingList != null) {\n        let date: Date = (new Date());\n        let ind = (date.getDay() < 6 ? date.getDay() + 1 : 0);\n        let count = 4;\n        let selected: boolean = false;\n        while (count > 0) {\n          if (ind > 6) ind = 0;\n          let item = this.timingList.find(item => item.WeekDayId === ind);\n          if (item != null) {\n            this.dayList.push({\n              DayName: item.DayName,\n              WeekDayId: item.WeekDayId,\n              Date: date,\n              Title: count == 4 ? \"Today\" : count == 3 ? \"Tomorrow\" : null,\n              TimeSlots: []\n            });\n          };\n          ind++;\n          date = this.addDays(date, 1);\n          count--;\n        }\n        if (this.dayList[0] != null) {\n          this.selectedIndex = this.dayList[0].WeekDayId;\n          this.timingList.forEach(item => {\n            let itemIndex = this.dayList.findIndex(i => i.WeekDayId == item.WeekDayId);\n\n            if (this.dayList[itemIndex] != undefined) {\n              if (item.IsTimingActive && (this.selectedSlotItem == null || this.selectedSlotItem.WeekDayId > item.WeekDayId)) {\n                this.selectedIndex = item.WeekDayId;\n                this.selectedSlot = item.Id;\n                this.selectedSlotItem = item;\n                console.log(\"selecting --- \" + this.selectedSlotItem.WeekDayId)\n              }\n              this.dayList[itemIndex].TimeSlots.push(item);\n            }\n          })\n        }\n        console.log(\"Selected Slot: \" + this.selectedSlot);\n      }\n      this.timeSelected(this.selectedSlotItem);\n    })\n\n  }\n\n  timeSelected(item: any, shouldClose: boolean = false) {\n    if(item == null) return;\n    this.selectedSlot = item.Id;\n    // modalType: ModalType;\n    // open: boolean;\n    // data: Product | ProductVariant | Category | null;\n    let request: ModalRequest = {\n      modalType: ModalType.TimingSelection,\n      open: false,\n      data: item\n    }\n\n    this.utilities.closeModalDialog(request);\n    this.placeOrderService.setSelectedTimeSlot(request.data);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-wb-two-banners',\r\n  templateUrl: './wb-two-banners.component.html',\r\n  styleUrls: ['./wb-two-banners.component.scss']\r\n})\r\nexport class WbTwoBannersComponent implements OnInit {\r\n\r\n  assetsUrl: string = environment.assetsUrl;\r\n  \r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"uk-container uk-container-large uk-padding-large uk-padding-remove-top\">\r\n    <p class=\"home-section-heading\">Offers</p>\r\n    <p class=\"home-section-title uk-margin-medium-bottom\">Best Values</p>\r\n    <div class=\"uk-child-width-1-2@s uk-child-width-1-2@m uk-text-center\" uk-grid>\r\n        <div>\r\n            <div class=\"uk-card uk-padding-remove uk-card-body\">\r\n                <img class=\"web-second-banner\" [attr.src]=\"assetsUrl + '/7.jpg'\" alt=\"\">\r\n            </div>\r\n        </div>\r\n        <div>\r\n            <div class=\"uk-card uk-padding-remove uk-card-body\">\r\n                <img class=\"web-second-banner \" [attr.src]=\"assetsUrl + '/5.jpg'\" alt=\"\">\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-wb-wallet-history',\r\n  templateUrl: './wb-wallet-history.component.html',\r\n  styleUrls: ['./wb-wallet-history.component.scss']\r\n})\r\nexport class WbWalletHistoryComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div id=\"wallet-history\" uk-scrollspy=\"target: > div; cls: uk-animation-slide-right-medium;\" uk-modal>\r\n  <div class=\"uk-modal-dialog uk-modal-body uk-height-1-1@s wallet-history\">\r\n      <button class=\"uk-modal-close-default\" type=\"button\" uk-close></button>\r\n      <p class=\"web-modal-title\">Wallet History</p>\r\n      <div class=\"uk-child-width-1-1@s uk-child-width-1-1@m uk-text-center\" uk-grid>\r\n          <div>\r\n              <div class=\"uk-card wallet-info-grid uk-padding-small uk-card-body\">\r\n                  <p class=\"wallet-heading uk-margin-remove\">Total Wallet Balance</p>\r\n                  <p class=\"wallet-balance uk-margin-remove\">₹233</p>\r\n                  <ul class=\"uk-subnav uk-subnav-pill wallet-history-switcher\"\r\n                      uk-switcher=\"animation: uk-animation-slide-left-medium, uk-animation-slide-right-medium\">\r\n                      <li class=\"uk-width-1-2\"><a href=\"#\">Recieved</a></li>\r\n                      <li class=\"uk-width-1-2\"><a href=\"#\">Redeem</a></li>\r\n                  </ul>\r\n\r\n                  <ul class=\"uk-switcher uk-margin\">\r\n                      <li>\r\n                          <table class=\"uk-table uk-table-small uk-table-divider transaction-table\">\r\n\r\n                              <tbody>\r\n                                  <tr>\r\n                                      <td><span class=\"transaction-orderid\">Order<span> #68237282</span></span>\r\n                                          <br><span>Transaction Date : <span>10 jul 2021</span></span></td>\r\n                                      <td>\r\n                                          <span class=\"transaction-credit\"><span\r\n                                                  uk-icon=\"icon:arrow-up; ratio:0.8;\"></span>₹233</span>\r\n                                      </td>\r\n                                  </tr>\r\n                                  <tr>\r\n                                      <td><span class=\"transaction-orderid\">Order<span> #68237282</span></span>\r\n                                          <br><span>Transaction Date : <span>10 jul 2021</span></span></td>\r\n                                      <td>\r\n                                          <span class=\"transaction-debit\"><span\r\n                                                  uk-icon=\"icon:arrow-down; ratio:0.8;\"></span>₹33</span>\r\n                                      </td>\r\n                                  </tr>\r\n                              </tbody>\r\n\r\n                          </table>\r\n                      </li>\r\n                      <li>\r\n                          <p class=\"no-transaction\">No transaction</p>\r\n                      </li>\r\n\r\n                  </ul>\r\n              </div>\r\n          </div>\r\n      </div>\r\n  </div>\r\n</div>","<div id=\"modal-container\">\r\n\r\n\r\n    <div [id]=\"modalId\" uk-scrollspy=\"target: > div; cls: uk-animation-slide-right-medium;\" uk-modal bg-close=\"false\"\r\n        container=\"#pmodal-container\" esc-close=\"false\">\r\n        <div class=\"uk-modal-dialog uk-modal-body uk-height-1-1@s add-address-modal\">\r\n\r\n            <ngx-spinner [name]=\"loadSpinner\"></ngx-spinner>\r\n\r\n            <button class=\"uk-modal-close-default\" uk-close type=\"button\" (click)=\"close()\"></button>\r\n\r\n            <p class=\"modal-heading uk-margin-small-bottom\">\r\n                <a (click)=\"navigateBack()\"><span class=\"material-icons-outlined back-btn\">\r\n                        arrow_back\r\n                    </span></a> Wallet Redeeem Request\r\n            </p>\r\n            <button class=\"uk-modal-close-default\" type=\"button\" uk-close></button>\r\n\r\n\r\n            <div id=\"data-switcher\" class=\"uk-switcher\" uk-switcher>\r\n                <div class=\"uk-animation-slide-bottom-small\">\r\n                    <div class=\"uk-text-right uk-padding-small uk-padding-remove-right\">\r\n                        <a (click)=\"navigateBankAccounts()\" class=\"uk-button redeem-btn uk-padding-small\">Bank\r\n                            Accounts</a>\r\n                        &nbsp;\r\n                        <a (click)=\"switch(1)\" class=\"uk-button redeem-btn uk-padding-small\">Request Redeem</a>\r\n                    </div>\r\n                    <div class=\"balance-grid uk-text-center\">\r\n                        <p class=\"balance-title uk-margin-remove\">Current Balance</p>\r\n                        <p class=\"balance-amount uk-margin-remove\"><span class=\"r-symbol\">\r\n                                ₹</span>{{currentBalance}}</p>\r\n                    </div>\r\n                    <br />\r\n                    <div>\r\n                        <p class=\"activity-heading\">Redeem History</p>\r\n                        <div>\r\n \r\n                            <table class=\"uk-table history-table uk-margin-remove-bottom uk-text-center\">\r\n                                <tbody>\r\n                                    <ng-container *ngFor=\"let requestItem of redeemRequestList; let i = index\"> \r\n                                        <tr *ngIf=\"i > 0\" class=\"gap\"></tr>\r\n                                        <tr class=\"history-grid\">\r\n                                            <td class=\"hover\"></td>\r\n                                            \r\n                                                <!-- Id: number;\r\n                                                RequestedByUserId: string;\r\n                                                BankAccountNumber: string;\r\n                                                BankAccountId: number;\r\n                                                Amount: number;\r\n                                                RequestState: number;\r\n                                                RequestDateTime: Date;\r\n                                                RequestCompletionDateTime: Date;  -->\r\n                                            <td>\r\n                                                <p class=\"trans-id\">#TR-{{ requestItem?.Id | number: '5.' | removeComma }}</p>\r\n                                            </td>\r\n                                            <td>\r\n                                                <span class=\"uk-badge redeem-status requested\">{{ requestItem?.RequestState }}</span>\r\n                                            </td>\r\n                                            <td>\r\n                                                <p class=\"requested-date \">{{ requestItem?.RequestDateTime | date: 'MMM-dd, yyyy hh:mm aa' }}</p>\r\n                                            </td>\r\n                                            <td>\r\n                                                <p class=\"trans-amt\"><span class=\"material-icons-outlined\">\r\n                                                        remove\r\n                                                    </span><span class=\"r-symbol\"> ₹{{ requestItem?.Amount }}</span>\r\n                                                </p>\r\n                                            </td>\r\n                                            <td>\r\n                                                <a (click)=\"redeemRequestDetails = requestItem; switch(2)\"\r\n                                                    class=\"uk-button  uk-padding-remove bank-btn\"><span\r\n                                                        class=\"material-icons-round req-icon\">\r\n                                                        account_balance\r\n                                                    </span> </a>\r\n                                            </td>\r\n                                        </tr>\r\n                                    </ng-container>\r\n                                </tbody>\r\n                            </table>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"uk-animation-slide-right-small\">\r\n                    <div class=\"uk-card-body uk-padding-top-small\">\r\n                        <div class=\"balance-grid uk-text-center\">\r\n                            <p class=\"balance-title uk-margin-remove\">Current Balance</p>\r\n                            <p class=\"balance-amount uk-margin-remove\"><span class=\"r-symbol\">\r\n                                    ₹</span>{{currentBalance}}</p>\r\n                        </div>\r\n                        <br />\r\n                        Select Bank Account\r\n                        <br />\r\n                        <br />\r\n                        <form [formGroup]=\"bankAccountForm\">\r\n                            <div>\r\n                                <div class=\"bank-options\">\r\n\r\n                                    <label class=\"labl\" *ngFor=\"let account of bankAccounts\"\r\n                                        (click)=\"setValue(account)\">\r\n                                        <input type=\"radio\" formControlName=\"BankAccountId\" [value]=\"account.Id\"\r\n                                            (click)=\"setValue(account)\" checked=\"checked\" />\r\n                                        <div>\r\n                                            <div class=\"circle\"></div>{{ account.AccountName }} | {{\r\n                                            account.AccountNumber }} | {{ account.BankName }}\r\n                                        </div>\r\n                                    </label>\r\n\r\n                                </div>\r\n                            </div>\r\n                            <br />\r\n                            <div class=\"uk-text-right\">\r\n                                <button class=\"uk-button uk-button-primary\" (click)=\"switch(0)\">Cancel</button> &nbsp;\r\n                                <button class=\"uk-button uk-button-primary\" (click)=\"createRedeemRequest()\">Create\r\n                                    Request</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"uk-animation-slide-right-small\">\r\n                    <div class=\"uk-card-body uk-padding-top-small\">\r\n                        <h4>Redeem Details</h4>\r\n\r\n                        Request#:  <b>TR-{{ redeemRequestDetails?.Id | number: '5.' | removeComma }}</b> <br /> \r\n                        Name: <b>{{ redeemRequestDetails?.Amount }}</b> <br /> \r\n                        Request Status: <b>{{ redeemRequestDetails?.RequestState }}</b> <br />\r\n                        Request Date: <b>{{ redeemRequestDetails?.RequestDateTime | date: 'MMM-dd, yyyy hh:mm aa' }}</b> <br />\r\n                        Bank Account Number: <b>{{ redeemRequestDetails?.BankAccountNumber }}</b> <br /> <br />\r\n                        <div class=\"uk-text-right\"> \r\n                            <button class=\"uk-button uk-button-primary uk-toggle-buttons\"\r\n                                (click)=\"redeemRequestDetails = null; switch(0)\">Close</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>","import { Component, Injector, Input, OnInit } from '@angular/core';\r\nimport { WalletService } from 'src/app/services/api-services/wallet.service';\r\nimport { BaseComponent } from 'src/app/shared/base.component';\r\nimport { Location } from '@angular/common';\r\nimport { Wallet } from 'src/app/models/wallet';\r\nimport { BankAccountService } from 'src/app/services/api-services/bank-accounts.service';\r\nimport { RedeemRequestService } from 'src/app/services/api-services/redeem-request.service';\r\nimport { RedeemRequest } from 'src/app/models/redeem-request';\r\nimport { BankAccount } from 'src/app/models/bank-account';\r\nimport { FormGroup } from '@angular/forms';\r\n\r\ndeclare var UIkit: any;\r\n\r\n@Component({\r\n  selector: 'app-wb-wallet-redeem',\r\n  templateUrl: './wb-wallet-redeem.component.html',\r\n  styleUrls: ['./wb-wallet-redeem.component.scss']\r\n})\r\nexport class WbWalletRedeemComponent extends BaseComponent implements OnInit {\r\n\r\n  @Input() modalId: string = 'wallet-redeeem-request-modal';\r\n\r\n  _switcher: any;\r\n  walletList: Wallet[];\r\n  redeemRequestList: RedeemRequest[] = [];\r\n  currentBalance: number;\r\n  bankAccounts: BankAccount[];\r\n  redeemRequestDetails: RedeemRequest | null = null;\r\n\r\n\r\n  isAddOrEdit: boolean = false;\r\n  isEditMode: boolean = false;\r\n\r\n  currentSwitcherIndex: number = 0;\r\n\r\n  bankAccountForm = this.fb.group({\r\n    BankAccountId: [],\r\n  })\r\n\r\n  constructor(protected injector: Injector, private walletService: WalletService,\r\n    private bankAccountService: BankAccountService, private redeemRequestService: RedeemRequestService,\r\n    private _location: Location) {\r\n    super(injector);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.showModal(this.modalId, () => {\r\n      this.modalClose()\r\n    });\r\n    this.loadWalletInfo();\r\n    this.loadRedeemHistory();\r\n    this.loadBankAccounts();\r\n\r\n    this.currentSwitcherIndex = 0;\r\n  }\r\n\r\n  setValue(bankAccount: BankAccount) {\r\n    this.bankAccountForm.patchValue({ BankAccountId: bankAccount.Id });\r\n  }\r\n\r\n  get switcher(): any {\r\n    if (this._switcher == null) {\r\n      this._switcher = UIkit.switcher('#data-switcher', { animation: false })\r\n    }\r\n    return this._switcher;\r\n  }\r\n\r\n  switch(index: number) {\r\n    this.currentSwitcherIndex = index;\r\n    setTimeout(() => {\r\n      this.switcher.show(index);\r\n    })\r\n  }\r\n\r\n  modalClose() {\r\n    if (this.router != null) {\r\n      let outletUrls: string[] = [];\r\n      if (this.router.url.indexOf('wallet-redeem') >= 0) {\r\n        outletUrls.push('wallet-redeem');\r\n        //outletUrls.push(this.selectedId);\r\n      }\r\n      this.router.navigate([{ outlets: { action: outletUrls, primary: [] } }])\r\n    }\r\n  }\r\n\r\n\r\n  loadBankAccounts() {\r\n    this.bankAccountService.getBankAccountList().subscribe((res: { Data: BankAccount[]; }) => {\r\n      this.bankAccounts = res.Data;\r\n      if (this.bankAccounts?.length > 0) {\r\n        this.bankAccountForm.patchValue({ BankAccountId: this.bankAccounts[0].Id });\r\n      }\r\n    })\r\n  }\r\n\r\n  addAddress() {\r\n\r\n  }\r\n\r\n  close() {\r\n    //this.formInstance.reset();\r\n    let url = this.router.url.split(\"/\")[0];\r\n    this.router.navigateByUrl(url);\r\n  }\r\n\r\n  navigateBack() {\r\n    if (this.currentSwitcherIndex != 0) {\r\n      this.switch(0);\r\n    } else {\r\n      this._location.back();\r\n    }\r\n  }\r\n\r\n  loadWalletInfo() {\r\n    this.walletService.getWalletList().subscribe((res: { Data: Wallet[]; }) => {\r\n      this.walletList = res.Data;\r\n      this.currentBalance = 0;\r\n      this.walletList.forEach(item => this.currentBalance += item.Amount);\r\n\r\n    })\r\n  }\r\n\r\n  loadRedeemHistory() {\r\n    this.redeemRequestService.getRedeemRequestList().subscribe(res => {\r\n      this.redeemRequestList = res.Data;\r\n      this.redeemRequestList = [\r\n        {\r\n          Id: 1,\r\n          RequestedByUserId: '4345',\r\n          BankAccountNumber: '43453453',\r\n          BankAccountId: 22,\r\n          Amount: 100,\r\n          RequestState: 11,\r\n          RequestDateTime: new Date(),\r\n          RequestCompletionDateTime: new Date()\r\n        },\r\n        {\r\n          Id: 2,\r\n          RequestedByUserId: '13455',\r\n          BankAccountNumber: '345345',\r\n          BankAccountId: 22,\r\n          Amount: 200,\r\n          RequestState: 12,\r\n          RequestDateTime: new Date(),\r\n          RequestCompletionDateTime: new Date()\r\n        }\r\n      ];\r\n    });\r\n  }\r\n\r\n  navigateBankAccounts() {\r\n    this.router.navigate([{ outlets: { action: ['bank-accounts'], primary: [] } }]);\r\n  }\r\n\r\n  editBankAccount() {\r\n    this.router.navigate([{ outlets: { action: ['edit-bank-account'], primary: [] } }]);\r\n  }\r\n\r\n  createRedeemRequest() {\r\n\r\n    this.redeemRequestService.createRedeemRequest(<RedeemRequest><unknown>this.bankAccountForm.value).subscribe(res => {\r\n\r\n    });\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { DesktopHomeComponent } from './views/desktop-home/desktop-home.component'; \r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { DesktopLayoutComponent } from './views/desktop-layout/desktop-layout.component';\r\nimport { LoginComponent } from '../auth/login/login.component';\r\nimport { WbNavbarComponent } from './components/wb-navbar/wb-navbar.component';\r\nimport { WbSearchComponent } from './components/wb-search/wb-search.component';\r\nimport { WbFooterComponent } from './components/wb-footer/wb-footer.component';\r\nimport { WbShopByCategoryComponent } from './components/wb-shop-by-category/wb-shop-by-category.component';\r\nimport { WbSuggestedProductsComponent } from './components/wb-suggested-products/wb-suggested-products.component';\r\nimport { WbTwoBannersComponent } from './components/wb-two-banners/wb-two-banners.component';\r\nimport { WbShopByBrandsComponent } from './components/wb-shop-by-brands/wb-shop-by-brands.component';\r\nimport { WbFooterBannerComponent } from './components/wb-footer-banner/wb-footer-banner.component';\r\nimport { WbMainBannerComponent } from './components/wb-main-banner/wb-main-banner.component';\r\nimport { WbOffersComponent } from './components/wb-offers/wb-offers.component';\r\nimport { WbMyordersComponent } from './components/wb-myorders/wb-myorders.component';\r\nimport { WbOrderDetailsComponent } from './components/wb-order-details/wb-order-details.component';\r\nimport { WbMyWalletComponent } from './components/wb-my-wallet/wb-my-wallet.component';\r\nimport { WbWalletHistoryComponent } from './components/wb-wallet-history/wb-wallet-history.component';\r\nimport { WbWalletRedeemComponent } from './components/wb-wallet-redeem/wb-wallet-redeem.component';\r\nimport { WbMyAddressComponent } from './components/wb-my-address/wb-my-address.component';\r\nimport { WbAddNewAddressComponent } from './components/wb-add-new-address/wb-add-new-address.component';\r\nimport { WbMyCartComponent } from './components/wb-my-cart/wb-my-cart.component';\r\nimport { WbPlaceOrdersComponent } from './components/wb-place-orders/wb-place-orders.component';\r\nimport { WbProductOverviewModalComponent } from './components/wb-product-overview-modal/wb-product-overview-modal.component';\r\nimport { WbProductItemCardComponent } from './components/wb-product-item-card/wb-product-item-card.component';\r\nimport { WbProductVariantsModalComponent } from './components/wb-product-variants-modal/wb-product-variants-modal.component';\r\nimport { ProductCatalogueComponent } from './views/product-catalogue/product-catalogue.component';\r\nimport { RoleGuardService } from '../auth/_helpers/role.guard';\r\nimport { Role } from '../auth/_models/role';\r\nimport { WbOrderSuccssfullComponent } from './components/wb-order-succssfull/wb-order-succssfull.component';\r\nimport { WbSecondaryBannerComponent } from './components/wb-secondary-banner/wb-secondary-banner.component';\r\nimport { WbHomeBrandsComponent } from './components/wb-home-brands/wb-home-brands.component';\r\nimport { WbOrdersComponent } from './components/wb-orders/wb-orders.component';\r\nimport { WbMyOrderDetailsComponent } from './components/wb-my-order-details/wb-my-order-details.component';\r\nimport { MbOrderSuccessComponent } from '../mobile/components/mb-order-success/mb-order-success.component';\r\nimport { TwoFactorComponent } from '../auth/two-factor/two-factor.component';\r\nimport { WbTimingSelectorComponent } from './components/wb-timing-selector/wb-timing-selector.component';\r\nimport { WbProfileComponent } from './components/wb-profile/wb-profile.component';\r\nimport { WbBankAcccountsComponent } from './components/wb-bank-accounts/wb-bank-accounts.component';\r\nimport { environment } from 'src/environments/environment'; \r\nimport { ServerDownComponent } from './components/server-down/server-down.component';\r\nimport { WbMyNotificationComponent } from './components/wb-my-notifs/wb-my-notifs.component';\r\n\r\nconst categoryRoutes = (outletAction: string) => {\r\n  return [\r\n    {\r\n      canActivate: [RoleGuardService],\r\n      data: { roles: [Role.User] },\r\n      path: 'my-addresses', component: WbMyAddressComponent,\r\n      outlet: outletAction\r\n    },\r\n    {\r\n      canActivate: [RoleGuardService],\r\n      data: { roles: [Role.User] },\r\n      path: 'address', component: WbAddNewAddressComponent,\r\n      outlet: outletAction\r\n    },\r\n    {\r\n      path: 'cart', component: WbMyCartComponent,\r\n      outlet: outletAction\r\n    },\r\n    {\r\n      path: 'notification', component: WbMyNotificationComponent,\r\n      outlet: outletAction\r\n    },\r\n    {\r\n      canActivate: [RoleGuardService],\r\n      data: { roles: [Role.User] },\r\n      path: 'place-order', component: WbPlaceOrdersComponent,\r\n      outlet: outletAction\r\n    },\r\n    {\r\n      canActivate: [RoleGuardService],\r\n      data: { roles: [Role.User] },\r\n      path: 'edit-address/:id', component: WbAddNewAddressComponent,\r\n      outlet: outletAction\r\n    },\r\n    {\r\n      canActivate: [RoleGuardService],\r\n      data: { roles: [Role.User] },\r\n      path: 'wallets', component: WbMyWalletComponent,\r\n      outlet: outletAction\r\n    },\r\n    {\r\n      canActivate: [RoleGuardService],\r\n      data: { roles: [Role.User] },\r\n      path: 'bank-accounts', component: WbBankAcccountsComponent,\r\n      outlet: outletAction\r\n    },\r\n    {\r\n      canActivate: [RoleGuardService],\r\n      data: { roles: [Role.User] },\r\n      path: 'wallet-redeem', component: WbWalletRedeemComponent,\r\n      outlet: outletAction\r\n    },\r\n    {\r\n      canActivate: [RoleGuardService],\r\n      data: { roles: [Role.User, Role.Admin] },\r\n      path: 'profile', component: WbProfileComponent,\r\n      outlet: outletAction\r\n    },\r\n    {\r\n      canActivate: [RoleGuardService],\r\n      data: { roles: [Role.User] },\r\n      path: 'order-success', component: WbOrderSuccssfullComponent,\r\n      outlet: outletAction\r\n    },\r\n    {\r\n      canActivate: [RoleGuardService],\r\n      data: { roles: [Role.User] },\r\n      path: 'my-orders', component: WbMyordersComponent,\r\n      outlet: outletAction\r\n    },\r\n    {\r\n      canActivate: [RoleGuardService],\r\n      data: { roles: [Role.User] },\r\n      path: 'order-details/:id', component: WbMyOrderDetailsComponent,\r\n      outlet: outletAction\r\n    },\r\n    {\r\n      canActivate: [RoleGuardService],\r\n      path: 'otp', component: TwoFactorComponent,\r\n      outlet: outletAction\r\n    },\r\n    {\r\n      path: 'login', component: LoginComponent,\r\n      outlet: outletAction\r\n    },\r\n    {\r\n      path: 'offers', component: WbOffersComponent,\r\n      outlet: outletAction\r\n    }\r\n  ]\r\n}\r\n\r\nconst desktopRoutes: Routes = [\r\n  {\r\n    path: 'server-down', component: ServerDownComponent\r\n  },\r\n  {\r\n    path: '', component: DesktopLayoutComponent, children: [\r\n      {\r\n        path: '', component: DesktopHomeComponent,\r\n        children: [...categoryRoutes('primary')]\r\n      },\r\n      {\r\n        path: 'ps', component: ProductCatalogueComponent,\r\n      },\r\n      {\r\n        path: 'collections', component: ProductCatalogueComponent,\r\n        children:\r\n          [\r\n            {\r\n              path: ':categoryKey', component: ProductCatalogueComponent,\r\n              children: [\r\n                {\r\n                  path: '', component: ProductCatalogueComponent,\r\n                  children: [\r\n                    {\r\n                      path: ':subCategoryKey', component: ProductCatalogueComponent,\r\n                      children: [\r\n                        {\r\n                          path: 'products', component: ProductCatalogueComponent\r\n                        },\r\n                        {\r\n                          path: ':groupKey', component: ProductCatalogueComponent\r\n                        }\r\n                      ]\r\n                    }\r\n                  ]\r\n                }\r\n              ]\r\n            }\r\n          ]\r\n      },\r\n      ...categoryRoutes('action')\r\n    ]\r\n  }\r\n]\r\n\r\n@NgModule({\r\n    imports: [\r\n        SharedModule,\r\n        CommonModule,\r\n        RouterModule.forChild(desktopRoutes),\r\n    ],\r\n    declarations: [\r\n        DesktopLayoutComponent,\r\n        DesktopHomeComponent,\r\n        WbNavbarComponent,\r\n        WbSearchComponent,\r\n        WbFooterComponent,\r\n        WbShopByCategoryComponent,\r\n        WbSuggestedProductsComponent,\r\n        WbTwoBannersComponent,\r\n        WbShopByBrandsComponent,\r\n        WbFooterBannerComponent,\r\n        WbMainBannerComponent,\r\n        WbOffersComponent,\r\n        WbMyordersComponent,\r\n        WbOrderDetailsComponent,\r\n        WbMyWalletComponent,\r\n        WbWalletHistoryComponent,\r\n        WbWalletRedeemComponent,\r\n        WbMyAddressComponent,\r\n        WbAddNewAddressComponent,\r\n        WbMyCartComponent,\r\n        WbMyNotificationComponent,\r\n        WbPlaceOrdersComponent,\r\n        WbProductOverviewModalComponent,\r\n        WbProductItemCardComponent,\r\n        WbProductVariantsModalComponent,\r\n        ProductCatalogueComponent,\r\n        WbOrderSuccssfullComponent,\r\n        WbSecondaryBannerComponent,\r\n        WbHomeBrandsComponent,\r\n        WbOrdersComponent,\r\n        WbMyOrderDetailsComponent,\r\n        WbBankAcccountsComponent,\r\n        WbTimingSelectorComponent,\r\n        WbProfileComponent,\r\n        ServerDownComponent\r\n    ]\r\n})\r\nexport class DesktopModule {\r\n\r\n  connection: any = null;\r\n\r\n}\r\n","import { Component, Injector, Input, OnInit } from '@angular/core';\r\nimport { NavigationEnd, Router } from '@angular/router';\r\nimport { filter } from 'rxjs/operators';\r\nimport { Category } from 'src/app/models/category';\r\nimport { ResponseObject } from 'src/app/models/common';\r\nimport { Product, ProductFilter } from 'src/app/models/product';\r\nimport { ProductsService } from 'src/app/services/api-services/products.service';\r\nimport { BaseComponent } from 'src/app/shared/base.component';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './desktop-home.component.html',\r\n  styleUrls: ['./desktop-home.component.scss']\r\n})\r\nexport class DesktopHomeComponent extends BaseComponent implements OnInit {\r\n\r\n  displayCart: boolean = false;\r\n\r\n  featuredProducts: Product[] = [];\r\n  suggestedProducts: Product[] = [];\r\n\r\n  currentRoute: string = \"\";\r\n\r\n  constructor(protected injector: Injector,\r\n    private productService: ProductsService) {\r\n\r\n    super(injector);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    let filter: ProductFilter = new ProductFilter();\r\n    filter.PageNumber = 0;\r\n    filter.PageSize = 6;\r\n    this.productService.getProductList(filter).subscribe((res: ResponseObject<Product[]>) => {\r\n\r\n      let data = res.Data ?? [];\r\n\r\n      if (!environment.production) {\r\n        console.log(\"Products Loaded: \");\r\n        console.log(data);\r\n      }\r\n      this.featuredProducts = this.processProductList(data);\r\n    });\r\n\r\n    filter.PageNumber = 0;\r\n    filter.PageSize = 6;\r\n    this.productService.getProductList(filter).subscribe((res: ResponseObject<Product[]>) => {\r\n\r\n      let data = res.Data ?? [];\r\n\r\n      if (!environment.production) {\r\n        console.log(\"Products Loaded: \");\r\n        console.log(data);\r\n      }\r\n      this.suggestedProducts = this.processProductList(data);\r\n    });\r\n  }\r\n\r\n  onCategoryClicked(event: Category) {\r\n    this.router.navigate(['/collections', event.RouteKey]);\r\n  }\r\n\r\n  reachedEnd() {\r\n  }\r\n\r\n  processProductList(list: Product[]): Product[] {\r\n    let _res: Product[] = []\r\n    list.forEach(item => {\r\n      let images: string[] = [];\r\n      item.ProductImages.forEach(img => {\r\n        images.push(img.replace('~', ''));\r\n      });\r\n      item.ProductImages = images\r\n      _res.push(item);\r\n    });\r\n    return _res;\r\n  }\r\n}\r\n","<app-wb-main-banner></app-wb-main-banner>\r\n<router-outlet></router-outlet>\r\n  \r\n<app-wb-secondary-banner></app-wb-secondary-banner>\r\n\r\n<app-wb-shop-by-category (categoryClicked)=\"onCategoryClicked($event)\"></app-wb-shop-by-category>\r\n\r\n<div class=\"uk-container uk-container-large uk-padding-large uk-padding-remove-top\">\r\n    <p class=\"home-section-heading\">For you</p>\r\n    <a class=\"uk-float-right view-more\">View more <span class=\"material-icons-outlined\">\r\n      chevron_right\r\n      </span></a>\r\n    <p class=\"home-section-title uk-margin-medium-bottom\">Top Featured Products</p>\r\n    <app-wb-suggested-products [productList]=\"featuredProducts\"></app-wb-suggested-products>\r\n</div>\r\n\r\n<app-wb-home-brands></app-wb-home-brands>\r\n\r\n<div class=\"uk-container uk-container-large uk-padding-large uk-padding-remove-top\">\r\n    <p class=\"home-section-heading\">For you</p>\r\n    <p class=\"home-section-title uk-margin-medium-bottom\">Latest Products</p>\r\n    <app-wb-suggested-products [productList]=\"featuredProducts\"></app-wb-suggested-products>\r\n</div>\r\n\r\n<app-wb-footer></app-wb-footer>\r\n","import { Component, Injector, Input, OnInit } from '@angular/core';\r\nimport { NavigationEnd, ParamMap } from '@angular/router';\r\nimport { NotifierService } from 'angular-notifier';\r\nimport { filter } from 'rxjs/operators';\r\nimport { AuthenticationService } from 'src/app/auth/_services/authentication.service';\r\nimport { ModalRequest, ModalType, ResponseObject, Result } from 'src/app/models/common';\r\nimport { Product, ProductVariant } from 'src/app/models/product';\r\nimport { UtilitiesService } from 'src/app/services/utilities.service';\r\nimport { BaseComponent } from 'src/app/shared/base.component';\r\nimport { environment } from 'src/environments/environment';\r\n\r\ndeclare var UIkit: any;\r\n\r\n@Component({\r\n  selector: 'app-desktop-layout',\r\n  templateUrl: './desktop-layout.component.html',\r\n  styleUrls: ['./desktop-layout.component.scss']\r\n})\r\nexport class DesktopLayoutComponent extends BaseComponent implements OnInit {\r\n\r\n  product: Product;\r\n\r\n  @Input() title: string = environment.appName;\r\n\r\n  constructor(protected injector: Injector, private authService: AuthenticationService,\r\n    protected notifierService: NotifierService) {\r\n    super(injector);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.setUpNotifier();\r\n\r\n    this.utilities.dialogRequest.subscribe((request: ModalRequest) => {\r\n      if (request.modalType == ModalType.ProductOverview) {\r\n        console.log(request.data);\r\n        this.product = <Product>request.data;\r\n        if (request.open)\r\n          this.showModal(\"#product-modal\", () => { });\r\n        else\r\n          this.hideModal(\"#product-modal\", true);\r\n      }\r\n      else if (request.modalType == ModalType.ProductVariant) {\r\n        this.product = <Product>request.data;\r\n        if (request.open)\r\n          this.showModal(\"#product-variant\", () => { });\r\n        else\r\n          this.hideModal(\"#product-variant\", true);\r\n      }\r\n      else if (request.modalType == ModalType.TimingSelection) {\r\n        if (request.open)\r\n          this.showModal(\"#time-selection\", () => { });\r\n        else\r\n          this.hideModal(\"#time-selection\", true);\r\n      }\r\n    })\r\n  }\r\n\r\n  currentNotification: any[] = [];\r\n\r\n  setUpNotifier() {\r\n    this.apiRequestService.onMessage$.subscribe((res: ResponseObject<any>) => {\r\n      if (res.Data != null && res.Data.status != 0 && res.Message != null && res.Message.trim() != \"\") {\r\n        this.checkCounterForSimilarMessage(res, () => {\r\n          console.log(\"notification popup message\")\r\n          this.notifierService.notify(\r\n            res.Result == Result.Success ? 'success' :\r\n              ((res.Result == Result.Failure || res.Result == Result.ValidationError || res.Result == Result.Unauthorized) ? 'warning'\r\n                : 'error')\r\n            , res.Message);\r\n          if (res.Data != null && res.Data.callback != null) {\r\n            res.Data.callback();\r\n          }\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  checkCounterForSimilarMessage(res, callBack?: any) {\r\n    let existingIndex = this.currentNotification.findIndex(i => i.Message = res.Message && i.Result == res.Result);\r\n    if (existingIndex > -1) {\r\n      setTimeout(() => {\r\n        if (existingIndex < this.currentNotification.length)\r\n          this.currentNotification.splice(existingIndex, 1);\r\n      }, 2000);\r\n    } else {\r\n      this.currentNotification.push(Object.assign({}, res));\r\n      callBack();\r\n    }\r\n    return false;\r\n  }\r\n\r\n}\r\n","<app-wb-navbar></app-wb-navbar>\r\n\r\n\r\n<ngx-spinner bdColor=\"rgba(0, 0, 0, 0.8)\" size=\"medium\" color=\"#fff\" type=\"ball-atom\" [fullScreen]=\"true\">\r\n  <p style=\"color: white\"> Loading... </p>\r\n</ngx-spinner>\r\n\r\n\r\n<router-outlet></router-outlet>\r\n<router-outlet name=\"action\"></router-outlet>\r\n\r\n\r\n<app-wb-product-overview-modal [product]=\"product\" id=\"product-modal\" uk-modal=\"stack:true;\"\r\n  class=\"uk-flex-top uk-flex-center\" uk-scrollspy=\"target: > div; cls: uk-animation-slide-right-medium;\">\r\n</app-wb-product-overview-modal>\r\n\r\n\r\n<app-wb-timing-selector id=\"time-selection\" uk-modal=\"stack:true;\"\r\n  class=\"uk-flex-top uk-flex-center\" uk-scrollspy=\"target: > div; cls: uk-animation-slide-right-medium;\">\r\n</app-wb-timing-selector>\r\n\r\n\r\n<app-wb-product-variants-modal [product]=\"product\" id=\"product-variant\" uk-modal=\"stack:true;\"\r\n  class=\"uk-flex-top uk-flex-center\" uk-scrollspy=\"target: > div; cls: uk-animation-slide-right-medium;\">\r\n</app-wb-product-variants-modal>\r\n\r\n<notifier-container></notifier-container>\r\n\r\n\r\n<!--\r\n<app-wb-my-cart [cartId]=\"cartInfo?.id\"></app-wb-my-cart>\r\n\r\n<app-wb-place-orders [active]=\"placeOrderInfo?.active\" [placeOrderId]=\"placeOrderInfo?.id\"></app-wb-place-orders>\r\n\r\n<app-wb-order-succssfull [active]=\"orderSuccessInfo?.active\" [modalId]=\"orderSuccessInfo?.id\"></app-wb-order-succssfull>\r\n\r\n<app-wb-login-modal [logInId]=\"loginInfo?.id\" [otpId]=\"otpInfo?.id\"></app-wb-login-modal>\r\n\r\n<app-wb-my-address [active]=\"addressInfo?.active\" [modalId]=\"addressInfo?.id\"></app-wb-my-address>\r\n\r\n<app-wb-myorders [active]=\"myOrdersInfo?.active\"  [modalId]=\"myOrdersInfo?.id\"></app-wb-myorders>\r\n\r\n<app-wb-my-order-details [routeData]='orderDetailsInfo?.data' [modalId]=\"orderDetailsInfo?.id\"> </app-wb-my-order-details>\r\n\r\n<app-wb-add-new-address [active]=\"addAddressInfo?.active\" [modalId]=\"addAddressInfo?.id\"></app-wb-add-new-address>\r\n \r\n<app-wb-add-new-address [routeData]='editAddressInfo?.data' [active]=\"editAddressInfo?.active\" [modalId]=\"editAddressInfo?.id\">\r\n</app-wb-add-new-address> -->","<div class=\"uk-container uk-container-xlarge uk-padding-remove\">\r\n    <div class=\"uk-text-center uk-grid-collapse  uk-grid-match\" uk-grid>\r\n        <div class=\"uk-width-1-5@m\">\r\n            <div class=\"uk-card web-category-grid uk-card-body uk-padding-remove\"\r\n                style=\"max-height:calc(100vh - 82px) !important; overflow: hidden;\">\r\n                <div class=\"uk-width-1-1 web-category-list\">\r\n\r\n                    <ul id=\"left-menu\" class=\"uk-nav-default uk-nav-parent-icon category-nav\" uk-nav *ngIf=\"!loading\"\r\n                        data-uk-nav=\"{multiple:false}\">\r\n                        \r\n                        <li class=\"uk-parent uk-margin-medium uk-margin-bottom-remove\">\r\n                            <a href=\"#\" class=\"offers\">\r\n                                <span class=\"material-icons-outlined \"> local_offer </span> Offers\r\n                            </a>\r\n                            <div uk-slider *ngIf=\"offerBanners != null && (offerBanners?.length ?? 0) > 0\">\r\n                                <div class=\"uk-position-relative uk-visible-toggle uk-light\" tabindex=\"-1\">\r\n                                    <ul class=\"uk-slider-items uk-child-width-1-1\">\r\n                                        <li *ngFor=\"let offer of offerBanners\">\r\n                                            <a [routerLink]=\"'/collections/' + offer.OfferUrl\">\r\n                                                <img [attr.src]=\"uploadsUrl + '/' + offer.BannerImageUrl\"\r\n                                                    class=\"offer-banner\" alt=\"\">\r\n                                            </a>\r\n                                        </li>\r\n                                    </ul>\r\n                                </div>\r\n                                <ul class=\"uk-slider-nav uk-dotnav uk-flex-center uk-margin offer-dot\"></ul>\r\n                            </div>\r\n                        </li>\r\n\r\n                        <li class=\"uk-parent\" [class.uk-open]=\"category?.RouteKey === categoryKey\"\r\n                            [class.uk-active]=\"category?.RouteKey === categoryKey\"\r\n                            *ngFor=\"let category of categories; let i = index\">\r\n                            <a (click)=\"navigateCategory(category, $event, i)\">\r\n                                {{ category.CategoryName }} <span style=\"float: right;\" class=\"material-icons-outlined\">\r\n                                    chevron_right\r\n                                </span> </a>\r\n                            <ul class=\"uk-nav-sub sub-category\">\r\n                                <ng-container *ngFor=\"let subCategory of subCategories; let j = index\">\r\n                                    <li *ngIf=\"subCategory.CategoryId == category.Id\" class=\"web-category-sublist\"\r\n                                        [class.uk-active]=\"subCategory?.RouteKey == subCategoryKey\">\r\n                                        <a (click)=\"navigateSubCategory(subCategory)\">{{ subCategory.SubCategoryName\r\n                                            }}</a>\r\n                                    </li>\r\n                                </ng-container>\r\n                            </ul>\r\n                        </li>\r\n\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"uk-width-expand@m\">\r\n            <div class=\"uk-card web-category-products uk-padding-small uk-card-body\" style=\"overflow-y:auto;\"\r\n                (scroll)=\"onScroll($event)\">\r\n\r\n                <ngx-spinner [name]=\"loadSpinner\">\r\n                </ngx-spinner>\r\n\r\n\r\n                <ul class=\"uk-breadcrumb web-category-breadcrumb uk-text-left uk-margin-remove\">\r\n                    <li><a (click)=\"navigateHome()\">Home</a></li>\r\n\r\n                    <ng-container *ngIf=\"selectedOffer != null\"> \r\n                        <li>\r\n                            <a [routerLink]=\"['/offers']\"> Offers </a>\r\n                        </li>\r\n                        <li>\r\n                            <a [routerLink]=\"['/collections/' + selectedOffer.OfferUrl ]\"> {{\r\n                                selectedOffer?.DisplayName }} </a>\r\n                        </li>\r\n                    </ng-container>\r\n                    <li *ngIf=\"selectedCategory != null\">\r\n                        <a (click)=\"navigateCategoryLink(selectedCategory)\"> {{\r\n                            selectedCategory?.CategoryName }} </a>\r\n                    </li>\r\n\r\n                    <li *ngIf=\"selectedCategory != null && selectedSubCategory != null\">\r\n                        <a (click)=\"navigateSubCategory(selectedSubCategory)\"> {{\r\n                            selectedSubCategory?.SubCategoryName }} </a>\r\n                    </li>\r\n                </ul>\r\n                <br />\r\n                <p *ngIf=\"header != ''\" class=\"category-query-heading uk-margin-remove uk-margin-medium-bottom\"> {{\r\n                    header }} <br /></p>\r\n                <ng-container *ngIf=\"selectedOffer != null\">\r\n                    <br />\r\n                </ng-container>\r\n                <!-- \r\n                <tr *ngIf=\"productGroups.length > 0\">\r\n\r\n                    <td class=\"active-group\">\r\n                        <ng-container *ngFor=\"let item of productGroups\">\r\n                            <span class=\"uk-badge group-badge uk-active\" *ngIf=\"item.Id == this.productGroupId\">{{\r\n                                item.ProductGroupName }}</span>\r\n                        </ng-container>\r\n                        <span class=\"uk-badge group-badge uk-active\" *ngIf=\"productGroupId == null\">\r\n                            All\r\n                        </span>\r\n                    </td>\r\n                    <td class=\"other-group\">\r\n                        <span class=\"uk-badge group-badge\" (click)=\"productGroupId = undefined; loadProductFromStart()\"\r\n                            *ngIf=\"productGroupId != null\">\r\n                            All\r\n                        </span>\r\n                        <ng-container *ngFor=\"let item of productGroups\">\r\n                            <span *ngIf=\"item.Id != this.productGroupId\"\r\n                                (click)=\"productGroupId = item.Id; loadProductFromStart()\" class=\"uk-badge group-badge\">\r\n                                {{ item.ProductGroupName }}</span>\r\n                        </ng-container>\r\n                    </td>\r\n                </tr> -->\r\n                <div class=\"products-group uk-text-left uk-padding-small uk-padding-remove-left\"\r\n                    *ngIf=\"subCategoryId > -1\">\r\n\r\n                    <a *ngIf=\"productGroupId == null\" class=\"product-group uk-active uk-badge\">All</a>\r\n\r\n                    <ng-container *ngFor=\"let item of productGroups\">\r\n                        <a *ngIf=\"item.Id == this.productGroupId\" class=\"product-group uk-active uk-badge\">{{\r\n                            item.ProductGroupName }}</a>\r\n                    </ng-container>\r\n\r\n                    <a *ngIf=\"productGroupId != null\" (click)=\"productGroupId = undefined; loadProductFromStart()\"\r\n                        class=\"product-group uk-badge\">All</a>\r\n\r\n                    <ng-container *ngFor=\"let item of productGroups\">\r\n                        <a *ngIf=\"item.Id != this.productGroupId\"\r\n                            (click)=\"productGroupId = item.Id; loadProductFromStart()\" class=\"product-group uk-badge\">{{\r\n                            item.ProductGroupName }}</a>\r\n                    </ng-container>\r\n                </div>\r\n                <ng-container *ngIf=\"searchKey != ''\">\r\n                    <div class=\"uk-text-left search-result\">\r\n                        Showing Result For <span> \"{{ searchKey }}\"</span>\r\n                    </div>\r\n                    <br />\r\n                </ng-container>\r\n                <ng-container *ngIf=\"productList.length == 0 && !isProductLoading\">\r\n                    <div class='uk-text-center'>No products</div>\r\n                </ng-container>\r\n                <div class=\"uk-child-width-1-2@s uk-child-width-1-5@m uk-child-width-1-5@l uk-text-center uk-grid-small uk-grid-match\"\r\n                    uk-scrollspy=\"target: > app-wb-product-item-card; cls: uk-animation-slide-bottom-small; delay: 300; repeat:false;\" uk-grid>\r\n\r\n                    <ng-container *ngFor=\"let item of productList\">\r\n                        <app-wb-product-item-card [product]='item'></app-wb-product-item-card>\r\n                    </ng-container>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, inject, Injector, OnInit } from '@angular/core';\r\nimport { NavigationEnd } from '@angular/router';\r\nimport { filter } from 'rxjs/operators';\r\nimport { Category, CategoryFilter } from 'src/app/models/category';\r\nimport { ProductQueryType, ResponseObject } from 'src/app/models/common';\r\nimport { OfferBanner, OfferBannerPlacement, OfferFilter } from 'src/app/models/offer';\r\nimport { Product, ProductFilter } from 'src/app/models/product';\r\nimport { ProductGroup, ProductGroupFilter } from 'src/app/models/product-group';\r\nimport { SubCategory, SubCategoryFilter } from 'src/app/models/sub-category';\r\nimport { CategoriesService } from 'src/app/services/api-services/categories.service';\r\nimport { OfferService } from 'src/app/services/api-services/offers.service';\r\nimport { ProductGroupsService } from 'src/app/services/api-services/product-groups.service';\r\nimport { ProductsService } from 'src/app/services/api-services/products.service';\r\nimport { SubCategoriesService } from 'src/app/services/api-services/sub-categories.service';\r\nimport { BaseComponent } from 'src/app/shared/base.component';\r\nimport { environment } from 'src/environments/environment';\r\n\r\ndeclare var UIkit: any;\r\n\r\n@Component({\r\n  selector: 'app-product-catalogue',\r\n  templateUrl: './product-catalogue.component.html',\r\n  styleUrls: ['./product-catalogue.component.scss']\r\n})\r\nexport class ProductCatalogueComponent extends BaseComponent implements OnInit {\r\n\r\n  assetsUrl: string = environment.assetsUrl;\r\n  uploadsUrl: string = environment.uploadsUrl;\r\n\r\n  header: string = \"\";\r\n\r\n  categories: Category[] = [];\r\n  subCategories: SubCategory[] = [];\r\n  productGroups: ProductGroup[] = [];\r\n\r\n  categoryId: number;\r\n  subCategoryId: number;\r\n  selectedOffer: OfferBanner | null;\r\n  productGroupId: number | undefined;\r\n\r\n  categoryKey: string | undefined;\r\n  subCategoryKey: string | undefined;\r\n  productGroupKey: string | undefined;\r\n\r\n  categoryFilter: CategoryFilter = new CategoryFilter();\r\n  subCategoryFilter: SubCategoryFilter = new SubCategoryFilter();\r\n  productGroupFilter: ProductGroupFilter = new ProductGroupFilter();\r\n  productFilter: ProductFilter = new ProductFilter();\r\n\r\n  offerBanners: OfferBanner[] = [];\r\n\r\n  isNoMore: boolean = false;\r\n\r\n  childSubs: any = null;\r\n  subCategorySub: any = null;\r\n  isProductLoading: boolean = false;\r\n\r\n  asyncCount: number = 0;\r\n\r\n  searchKey: string;\r\n\r\n  productList: Product[] = [];\r\n\r\n  get activeProductGroups(): ProductGroup[] {\r\n    return this.productGroups.filter(j => this.productGroupId == j.Id);\r\n  }\r\n\r\n  get inActiveProductGroups(): ProductGroup[] {\r\n    return this.productGroups.filter(j => this.productGroupId != j.Id);\r\n  }\r\n\r\n  get selectedCategory(): Category | undefined {\r\n    return this.categories.find(i => i.RouteKey == this.categoryKey);\r\n  }\r\n  get selectedSubCategory(): SubCategory | undefined {\r\n    return this.subCategories.find(i => i.RouteKey == this.subCategoryKey);\r\n  }\r\n\r\n  // item: Product = {\r\n  //   ProductImages: ['/Storage/Uploads/ProductImages/46e1f218e32d4001863a60cceb3ebb91.jpg'],\r\n  //   ProductName: \"abcd\",\r\n  //   BrandId: 1,\r\n  //   Description: '',\r\n  //   Id: 1,\r\n  //   ProductCode: \"111\",\r\n  //   ProductVariants: [],\r\n  //   SubCategoryId: 1,\r\n  //   BrandName: '',\r\n  //   SubCategoryName: '',\r\n  // };\r\n  constructor(protected injector: Injector,\r\n    protected categoryService: CategoriesService,\r\n    protected subCategoryService: SubCategoriesService,\r\n    protected productGroupService: ProductGroupsService,\r\n    private productService: ProductsService, protected offerSeervice: OfferService) {\r\n    super(injector);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.productFilter.PageNumber = 0;\r\n\r\n    this.route.firstChild?.params.subscribe(res => {\r\n      this.selectedOffer = null;\r\n\r\n      this.categoryKey = res.categoryKey;\r\n\r\n      this.categoryId = (this.categories.find(i => i.RouteKey == this.categoryKey))?.Id ?? 0;\r\n\r\n      this.checkOfferId(() => {\r\n        this.loadProductFromStart();\r\n      });\r\n    });\r\n\r\n    this.route.queryParamMap.subscribe(res => {\r\n\r\n      this.searchKey = res.get('q') ?? '';\r\n\r\n      this.loadProductFromStart();\r\n    })\r\n\r\n    if (this.subCategorySub == null) {\r\n      this.subCategorySub = this.route.firstChild?.firstChild?.firstChild?.params.subscribe(res => {\r\n\r\n        this.subCategoryKey = res.subCategoryKey;\r\n        this.subCategoryId = (this.subCategories.find(i => i.RouteKey == this.subCategoryKey))?.Id ?? -1;\r\n\r\n      });\r\n    }\r\n\r\n    if (this.childSubs == null) {\r\n      this.childSubs = this.route.firstChild?.firstChild?.firstChild?.firstChild?.firstChild?.params.subscribe(res => {\r\n\r\n        this.productGroupKey = res.groupKey;\r\n        this.productGroupId = (this.productGroups.find(i => i.RouteKey == this.productGroupKey))?.Id;\r\n      })\r\n    }\r\n\r\n    this.loadCategories(() => {\r\n      this.categoryId = (this.categories.find(i => i.RouteKey == this.categoryKey))?.Id ?? 0;\r\n\r\n      this.loadSubCategories(() => {\r\n\r\n        this.asyncCount++;\r\n        this.subCategoryId = (this.subCategories.find(i => i.RouteKey == this.subCategoryKey))?.Id ?? -1;\r\n\r\n        // this.loadProductGroups(() => {\r\n        //   this.productGroupId = (this.productGroups.find(i => i.RouteKey == this.productGroupKey))?.Id;\r\n        // })\r\n        this.loadAfterAsync();\r\n      });\r\n\r\n      this.loadOffers(() => {\r\n        this.asyncCount++;\r\n        this.checkOfferId(() => {\r\n          this.loadAfterAsync();\r\n        });\r\n      });\r\n    })\r\n\r\n  }\r\n\r\n  checkOfferId(callBack?: any) {\r\n    if (this.categoryId == 0 && this.offerBanners != null) {\r\n      this.selectedOffer = this.offerBanners.find(i => i.OfferUrl == this.categoryKey) ?? null;\r\n      this.header = this.selectedOffer?.DisplayName ?? this.header;\r\n      if (callBack) callBack();\r\n    } else {\r\n      this.selectedOffer = null;\r\n    }\r\n  }\r\n\r\n  loadAfterAsync() {\r\n    if (this.asyncCount >= 2) {\r\n      this.asyncCount = 0;\r\n      this.loadProductFromStart();\r\n    }\r\n  }\r\n\r\n  loadCategories(callBack?: any) {\r\n\r\n    if (this.categories.length == 0) {\r\n      this.categoryService.getCategoryList(this.categoryFilter).subscribe((res: ResponseObject<Category[]>) => {\r\n        this.categories = res.Data ?? [];\r\n        this.categoryId = (this.categories.find(i => i.RouteKey == this.categoryKey))?.Id ?? 0;\r\n        if (callBack) callBack();\r\n      });\r\n    }\r\n    else if (callBack) callBack();\r\n  }\r\n\r\n  loadOffers(callBack?: any): void {\r\n\r\n    let filter = new OfferFilter();\r\n    this.offerSeervice.getOfferBannerList(filter).subscribe((res: ResponseObject<OfferBanner[]>) => {\r\n      res.Data?.forEach((item: OfferBanner) => {\r\n        item.BannerImageUrl = item.BannerImageUrl.replace(\"~/\", '');\r\n      })\r\n      this.offerBanners = (res.Data ?? [])//.filter(i => i.Placement == OfferBannerPlacement.DesktopOffers);\r\n      if (callBack) callBack();\r\n    })\r\n  }\r\n\r\n  loadSubCategories(callBack?: any) {\r\n\r\n    if (this.subCategories.length == 0) {\r\n      this.subCategoryService.getSubCategoryList(this.subCategoryFilter).subscribe((res: ResponseObject<SubCategory[]>) => {\r\n        this.subCategories = res.Data ?? [];\r\n        let subCategory = (this.subCategories.find(i => i.RouteKey == this.subCategoryKey));\r\n        this.subCategoryId = subCategory?.Id ?? -1;\r\n        this.header = subCategory?.SubCategoryName ?? '';\r\n        if (callBack) callBack();\r\n      });\r\n    }\r\n    else if (callBack) callBack();\r\n  }\r\n\r\n  loadProductGroups(callBack?: any) {\r\n    this.selectedOffer = null; \r\n    this.productGroupId = undefined;\r\n    this.productGroupFilter.SubCategoryId = this.subCategories.find(i => i.RouteKey == this.subCategoryKey)?.Id ?? -1;\r\n    this.productGroupService.getProductGroupList(this.productGroupFilter).subscribe((res: ResponseObject<ProductGroup[]>) => {\r\n      this.productGroups = res.Data ?? [];\r\n      this.productGroupId = (this.productGroups.find(i => i.RouteKey == this.productGroupKey))?.Id;\r\n      if (callBack) callBack();\r\n    });\r\n  }\r\n\r\n  navigateCategory(category: Category, event: any, i: number) {\r\n    event.stopPropagation();\r\n    UIkit.nav('#left-menu').toggle(i + 1);\r\n    this.navigateCategoryLink(category);\r\n  }\r\n\r\n  navigateHome() {\r\n    this.categoryKey = '';\r\n    this.categoryId = -1;\r\n    this.subCategoryKey = '';\r\n    this.subCategoryId = -1;\r\n    this.productGroupId = undefined;\r\n    this.header = '';\r\n    this.router.navigate(['/collections']);\r\n    this.loadProductFromStart();\r\n  }\r\n\r\n  navigateCategoryLink(category: Category) {\r\n    this.selectedOffer = null; \r\n    this.categoryId = category.Id;\r\n    this.subCategoryKey = \"\";\r\n    this.subCategoryId = -1;\r\n    this.categoryKey = category.RouteKey;\r\n    this.productGroupId = undefined;\r\n    this.header = '';\r\n    this.router.navigate(['/collections/' + category?.RouteKey]);\r\n    this.loadProductFromStart();\r\n  }\r\n\r\n  navigateSubCategory(subCategory: SubCategory) {\r\n    this.selectedOffer = null; \r\n    this.categoryId = subCategory.CategoryId;\r\n    this.categoryKey = this.categories.find(i => i.Id == this.categoryId)?.RouteKey ?? '';\r\n    this.subCategoryKey = subCategory.RouteKey;\r\n    this.subCategoryId = subCategory.Id;\r\n    this.productGroupId = undefined;\r\n    this.header = subCategory?.SubCategoryName ?? '';\r\n    this.router.navigate(['/collections/' + this.categoryKey + '/' + subCategory.RouteKey]);\r\n    this.loadProductGroups();\r\n    this.loadProductFromStart();\r\n  }\r\n\r\n  loadProductFromStart() {\r\n\r\n    this.isNoMore = false;\r\n    this.productList = [];\r\n    this.productFilter.PageNumber = -1;\r\n    this.productFilter.Search = this.searchKey;\r\n    this.showSpinner();\r\n    this.loadProducts();\r\n  }\r\n\r\n  loadProducts() {\r\n    this.isProductLoading = true;\r\n    this.productFilter.PageSize = 20;\r\n    this.productFilter.PageNumber++;\r\n    this.productFilter.CategoryKey = this.categoryKey ?? \"\";\r\n    this.productFilter.SubCategoryKey = this.subCategoryKey ?? \"\";\r\n    this.productFilter.ProductGroupKey = this.productGroupKey ?? \"\";\r\n    this.productFilter.ProductGroupId = this.productGroupId;\r\n    if (this.selectedOffer != null) {\r\n      this.productFilter.OfferId = this.selectedOffer.OfferId;\r\n      this.productFilter.ProductQueryType = ProductQueryType.Offers;\r\n    }\r\n    else {\r\n      this.productFilter.ProductQueryType = ProductQueryType.FilterOrNone;\r\n    }\r\n    this.productService.getProductList(this.productFilter).subscribe((res: ResponseObject<Product[]>) => {\r\n      let data = res.Data ?? [];\r\n\r\n      this.isProductLoading = true;\r\n      if (!environment.production) {\r\n        console.log(\"Products Loaded: \");\r\n        console.log(data);\r\n      }\r\n      let products: Product[] = this.processProductList(data);\r\n      products.forEach(item => {\r\n        this.productList.push(item);\r\n      })\r\n      this.isNoMore = this.productList.length > 0 && products.length == 0;\r\n    })\r\n  }\r\n\r\n  processProductList(list: Product[]): Product[] {\r\n    let _res: Product[] = []\r\n    list.forEach(item => {\r\n      let images: string[] = [];\r\n      item.ProductImages.forEach(img => {\r\n        images.push(img.replace('~', ''));\r\n      });\r\n      item.ProductImages = images\r\n      _res.push(item);\r\n    });\r\n    return _res;\r\n  }\r\n\r\n  onScroll(event: any) {\r\n    // visible height + pixel scrolled >= total height \r\n    if (event.target.offsetHeight + event.target.scrollTop >= event.target.scrollHeight - 5 && !this.isNoMore) {\r\n      this.loadProducts();\r\n    }\r\n  }\r\n}\r\n","import { ProductVariant } from \"./product\";\r\n\r\nexport class Notification {\r\n    ProductVariantId: number;\r\n    Quantity: number;\r\n}\r\n\r\nexport class NotificationView{\r\n    Quantity: number;\r\n    ProductVariantId: number;\r\n    ProductVariant!: ProductVariant;\r\n}","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { Notification } from 'src/app/models/notification';\r\nimport { environment } from '../../environments/environment';\r\nimport { Brand, BrandFilter } from '../models/brand';\r\nimport { ApiRequestService } from './api-services/api-request.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class NotificationService {\r\n\r\n    private _updateNotification: Subject<Notification> = new Subject();\r\n    public notificationUpdated: Observable<any> = this._updateNotification.asObservable();\r\n\r\n    private storage_key: string = \"notification_list\";\r\n\r\n    private notificationList: Notification[] = [];\r\n\r\n    constructor() {\r\n        this.loadNotificationList();\r\n    }\r\n\r\n    addItem(productId: number) {\r\n        this.loadNotificationList();\r\n\r\n        let notificationItem = undefined;\r\n        let index = this.notificationList.findIndex(i => i.ProductVariantId == productId);\r\n        if (index > -1) {\r\n            notificationItem = this.notificationList[index];\r\n            notificationItem.Quantity += 1;\r\n            this.notificationList[index] = notificationItem;\r\n        } else {\r\n            notificationItem = new Notification();\r\n            notificationItem.ProductVariantId = productId;\r\n            notificationItem.Quantity = 1;\r\n            this.notificationList.push(notificationItem);\r\n        }\r\n        this.saveNotificationList();\r\n        this._updateNotification.next(notificationItem);\r\n    }\r\n\r\n    decreaseItem(productId: number) {\r\n        this.loadNotificationList();\r\n\r\n        let notificationItem = undefined;\r\n        let index = this.notificationList.findIndex(i => i.ProductVariantId == productId);\r\n        if (index > -1) {\r\n            if (this.notificationList[index].Quantity > 1) {\r\n                notificationItem = this.notificationList[index];\r\n                notificationItem.Quantity -= 1;\r\n                this.notificationList[index] = notificationItem;\r\n            } else {\r\n                this.notificationList.splice(index, 1);\r\n            }\r\n        }\r\n        this.saveNotificationList();\r\n        this._updateNotification.next(<Notification>notificationItem);\r\n    }\r\n\r\n    removeItem(productId: number) {\r\n        this.loadNotificationList();\r\n        let index = this.notificationList.findIndex(i => i.ProductVariantId == productId);\r\n        if (index > -1) {\r\n            this.notificationList.splice(index, 1);\r\n        }\r\n        this.saveNotificationList();\r\n        this._updateNotification.next(null);\r\n    }\r\n\r\n\r\n    getProductNotificationCount(productId: number): number {\r\n        this.loadNotificationList();\r\n\r\n        let count = 0;\r\n        let index = this.notificationList.findIndex(i => i.ProductVariantId == productId);\r\n        if (index > -1) {\r\n            count = this.notificationList[index].Quantity;\r\n        }\r\n        return count;\r\n    }\r\n\r\n    getNotificationCount(): number {\r\n        let sum = 0;\r\n        this.notificationList.forEach(item => {\r\n            sum += item.Quantity;\r\n        })\r\n        return sum;\r\n    }\r\n\r\n    loadNotificationList() {\r\n        if (this.notificationList.length == 0) {\r\n            this.notificationList = <Notification[]>JSON.parse(localStorage.getItem(this.storage_key) ?? \"[]\");\r\n        }\r\n    }\r\n\r\n    clearList() {\r\n        this.notificationList = [];\r\n        localStorage.removeItem(this.storage_key);\r\n        this._updateNotification.next(null);\r\n    }\r\n\r\n    getNotificationList(): Notification[] {\r\n        return this.notificationList;\r\n    }\r\n\r\n    saveNotificationList() {\r\n        localStorage.setItem(this.storage_key, JSON.stringify(this.notificationList));\r\n    }\r\n}"]}