{"version":3,"sources":["webpack:///src/app/mobile/components/mb-add-address/mb-add-address.component.ts","webpack:///src/app/mobile/components/mb-add-address/mb-add-address.component.html","webpack:///src/app/mobile/components/mb-address/mb-address.component.html","webpack:///src/app/mobile/components/mb-address/mb-address.component.ts","webpack:///src/app/mobile/components/mb-bank-accounts/mb-bank-accounts.component.html","webpack:///src/app/mobile/components/mb-bank-accounts/mb-bank-accounts.component.ts","webpack:///src/app/mobile/components/mb-category-details/mb-category-details.component.ts","webpack:///src/app/mobile/components/mb-default-splash/mb-default-splash.component.ts","webpack:///src/app/mobile/components/mb-default-splash/mb-default-splash.component.html","webpack:///src/app/mobile/components/mb-ft-products/mb-ft-products.component.ts","webpack:///src/app/mobile/components/mb-ft-products/mb-ft-products.component.html","webpack:///src/app/mobile/components/mb-header-nav/mb-header-nav.component.html","webpack:///src/app/mobile/components/mb-header-nav/mb-header-nav.component.ts","webpack:///src/app/mobile/components/mb-home-brands/mb-home-brands.component.ts","webpack:///src/app/mobile/components/mb-home-brands/mb-home-brands.component.html","webpack:///src/app/mobile/components/mb-home-categories/mb-home-categories.component.html","webpack:///src/app/mobile/components/mb-home-categories/mb-home-categories.component.ts","webpack:///src/app/mobile/components/mb-home-main-banner/mb-home-main-banner.component.ts","webpack:///src/app/mobile/components/mb-home-main-banner/mb-home-main-banner.component.html","webpack:///src/app/mobile/components/mb-home-navbar/mb-home-navbar.component.ts","webpack:///src/app/mobile/components/mb-home-navbar/mb-home-navbar.component.html","webpack:///src/app/mobile/components/mb-home-offer-slider/mb-home-offer-slider.component.html","webpack:///src/app/mobile/components/mb-home-offer-slider/mb-home-offer-slider.component.ts","webpack:///src/app/mobile/components/mb-home-slider-banner/mb-home-slider-banner.component.html","webpack:///src/app/mobile/components/mb-home-slider-banner/mb-home-slider-banner.component.ts","webpack:///src/app/mobile/components/mb-home-stories-offers/mb-home-stories-offers.component.html","webpack:///src/app/mobile/components/mb-home-stories-offers/mb-home-stories-offers.component.ts","webpack:///src/app/mobile/components/mb-login/mb-login.component.ts","webpack:///src/app/mobile/components/mb-login/mb-login.component.html","webpack:///src/app/mobile/components/mb-my-notifs/mb-my-notifs.component.ts","webpack:///src/app/mobile/components/mb-my-notifs/mb-my-notifs.component.html","webpack:///src/app/mobile/components/mb-my-orders/mb-my-orders.component.html","webpack:///src/app/mobile/components/mb-my-orders/mb-my-orders.component.ts","webpack:///src/app/mobile/components/mb-my-wallet/mb-my-wallet.component.html","webpack:///src/app/mobile/components/mb-my-wallet/mb-my-wallet.component.ts","webpack:///src/app/mobile/components/mb-order-cancel-reason/mb-order-cancel-reason.component.ts","webpack:///src/app/mobile/components/mb-order-cancel-reason/mb-order-cancel-reason.component.html","webpack:///src/app/mobile/components/mb-order-details/mb-order-details.component.html","webpack:///src/app/mobile/components/mb-order-details/mb-order-details.component.ts","webpack:///src/app/mobile/components/mb-order-success/mb-order-success.component.ts","webpack:///src/app/mobile/components/mb-order-success/mb-order-success.component.html","webpack:///src/app/mobile/components/mb-order-track/mb-order-track.component.html","webpack:///src/app/mobile/components/mb-order-track/mb-order-track.component.ts","webpack:///src/app/mobile/components/mb-otp/mb-otp.component.ts","webpack:///src/app/mobile/components/mb-otp/mb-otp.component.html","webpack:///src/app/mobile/components/mb-place-orders/mb-place-orders.component.html","webpack:///src/app/mobile/components/mb-place-orders/mb-place-orders.component.ts","webpack:///src/app/mobile/components/mb-product-grids/mb-product-grids.component.html","webpack:///src/app/mobile/components/mb-product-grids/mb-product-grids.component.ts","webpack:///src/app/mobile/components/mb-product-variant/mb-product-variant.component.html","webpack:///src/app/mobile/components/mb-product-variant/mb-product-variant.component.ts","webpack:///src/app/mobile/components/mb-redeem-details/mb-redeem-details.component.ts","webpack:///src/app/mobile/components/mb-redeem-details/mb-redeem-details.component.html","webpack:///src/app/mobile/components/mb-redeem-request/mb-redeem-request.component.ts","webpack:///src/app/mobile/components/mb-redeem-request/mb-redeem-request.component.html","webpack:///src/app/mobile/components/mb-related-products/mb-related-products.component.ts","webpack:///src/app/mobile/components/mb-related-products/mb-related-products.component.html","webpack:///src/app/mobile/components/mb-splash-screen/mb-splash-screen.component.ts","webpack:///src/app/mobile/components/mb-splash-screen/mb-splash-screen.component.html","webpack:///src/app/mobile/components/mb-story-view/mb-story-view.component.html","webpack:///src/app/mobile/components/mb-story-view/mb-story-view.component.ts","webpack:///src/app/mobile/components/mb-timing-selector/mb-timing-selector.component.html","webpack:///src/app/mobile/components/mb-timing-selector/mb-timing-selector.component.ts","webpack:///src/app/mobile/components/mb-wallet-redeem/mb-wallet-redeem.component.html","webpack:///src/app/mobile/components/mb-wallet-redeem/mb-wallet-redeem.component.ts","webpack:///src/app/mobile/components/server-down/server-down.component.ts","webpack:///src/app/mobile/components/server-down/server-down.component.html","webpack:///src/app/mobile/components/titlebar/titlebar.component.ts","webpack:///src/app/mobile/components/titlebar/titlebar.component.html","webpack:///src/app/mobile/components/topnav/topnav.component.ts","webpack:///src/app/mobile/components/topnav/topnav.component.html","webpack:///src/app/mobile/mobile.module.ts","webpack:///src/app/mobile/views/cart/cart.component.html","webpack:///src/app/mobile/views/cart/cart.component.ts","webpack:///src/app/mobile/views/categories/categories.component.html","webpack:///src/app/mobile/views/categories/categories.component.ts","webpack:///src/app/mobile/views/mobile-home/mobile-home.component.ts","webpack:///src/app/mobile/views/mobile-home/mobile-home.component.html","webpack:///src/app/mobile/views/mobile-layout/mobile-layout.component.ts","webpack:///src/app/mobile/views/mobile-layout/mobile-layout.component.html","webpack:///src/app/mobile/views/offers-view/offers-view.component.html","webpack:///src/app/mobile/views/offers-view/offers-view.component.ts","webpack:///src/app/mobile/views/product-details/product-details.component.html","webpack:///src/app/mobile/views/product-details/product-details.component.ts","webpack:///src/app/mobile/views/product-list/product-list.component.html","webpack:///src/app/mobile/views/product-list/product-list.component.ts","webpack:///src/app/mobile/views/profiles/profiles.component.html","webpack:///src/app/mobile/views/profiles/profiles.component.ts","webpack:///src/app/mobile/views/search-result/search-result.component.html","webpack:///src/app/mobile/views/search-result/search-result.component.ts","webpack:///src/app/mobile/views/search-view/search-view.component.html","webpack:///src/app/mobile/views/search-view/search-view.component.ts","webpack:///src/app/shared/animations.ts"],"names":["MbAddAddressComponent","injector","addressService","submitted","path","_isGPS","formInstance","fb","group","Id","FullName","Validators","PhoneNumber","AreaCode","AddressLine1","AddressLine2","LandMark","Country","GPS","IsDefault","isEditMode","errorIntrcptr","httpError$","subscribe","res","messageShown","Result","router","navigateByUrl","data","num","parseInt","isNaN","getAddressInfo","patchValue","Data","_active","clearAddressValidators","setGPSValidators","setAddressValidators","clearGPSValidators","get","pos","url","lastIndexOf","orderQuery","substring","length","id","addressLine1","setValidators","addressLine2","landMark","country","clearValidators","gps","valid","showFullSpinner","address","value","editAddressInfo","hideFullSpinner","close","addAddressInfo","reset","split","BaseComponent","onSubmit","MbAddressComponent","authService","addresses","ngOnInit","filter","i","loadAddresses","AddressFilter","UserId","currentUserValue","userId","getAddressList","console","log","deleteAddress","navigate","returnUrl","MbBankAccountsComponents","bankAccountService","_location","deletionAccount","currentSwitcherIndex","AccountOfUserId","BankName","AccountNumber","IFSCCode","AccountName","_switcher","UIkit","switcher","animation","_deleteConfirmation","modal","index","setTimeout","show","deleteConfirmation","loadBankAccounts","getBankAccountList","bankAccounts","bankAccount","addBankAccountInfo","back","deleteAccount","confirmDelete","MbCategoryDetailsComponent","MbDefaultSplashComponent","MbFtProductsComponent","MbHeaderNavComponent","location","onBackClick","EventEmitter","title","hasActions","hasNav","isTitleCenter","observers","emit","MbHomeBrandsComponent","assetsUrl","environment","MbHomeCategoriesComponent","categoryService","imgUrl","categoryList","categoryClicked","item","getCategoryList","forEach","CategoryImage","replace","MbHomeMainBannerComponent","assetUrl","MbHomeNavbarComponent","MbHomeOfferSliderComponent","productList","MbHomeSliderBannerComponent","offerSeervice","uploadsUrl","offerBanners","OfferFilter","getOfferBannerList","BannerImageUrl","MbHomeStoriesOffersComponent","offerBanner","changeCurrentBannerr","MbLoginComponent","authenticationService","showPassword","UserName","Password","spinnerOptions","bdColor","color","invalid","showSpinner","pass","password","login","email","pipe","first","user","requireOTP","hideSpinner","error","submitForm","MbMyNotifsComponent","MbMyOrdersComponent","orderService","orderStatus","OrderStatus","camelCaseToSpacedText","transformCamelToSpaces","OrderFilter","getOrderList","orders","MbMyWalletComponent","walletService","loadWalletInfo","getWalletList","walletList","currentBalance","Amount","MbOrderCancelReasonComponent","spinner","name","order","Object","assign","OrderState","updateOrderStatus","hide","ele","document","getElementById","remove","cancelOrder","MbOrderDetailsComponent","orderStatuses","enumToKeyValueArray","getOrderInfo","Purchases","ProductImage","ImageUrl","initOrderStatus","apiRequestService","showMessage","Message","outlets","action","primary","found","excludeList","status","done","includes","sum","Price","TotalQuantity","MbOrderSuccessComponent","replaceUrl","navigateMyOrders","navigateHome","MbOrderTrackComponent","MbOtpComponent","OtpCode","userName","otp","updateRequireOTP","submitOtp","MbPlaceOrdersComponent","cartService","productService","zone","placeOrderService","Order","productCartList","razorPayOptions","paymentMethod","PaymentType","razorPayModal","ondismiss","razorPayDismiss","bind","escape","backdropclose","RelDay","TimePeriod","IsDelivery","UseWallet","getCartCount","reduce","Quantity","ProductVariant","getCartList","ind","orderTimeSlotStatus","JSON","stringify","selectedTimeSlot","timePeriod","setValue","TimePeriodId","setSelectedTimeSlot","loadProducts","cartItems","ProductFilter","Ids","map","ProductVariantId","join","getProductVariantList","variantList","vItem","cItem","push","currentWalletBalance","relDay","OrderDate","Date","PaymentMode","useWallet","isDirectPlace","cartTotal","placeOrder","clearList","orderPlacedSuccessfully","amount","Discount","request","CartList","post","payment","RazorPayOrderId","callback","response","PaymentId","razorpay_payment_id","PaymentOrderId","razorpay_order_id","PaymentSignature","razorpay_signature","run","orderId","ref","order_id","handler","razorPayHandler","prefill","contact","razorPay","Razorpay","open","modalType","ModalType","utilities","openModalDialog","openTimeSelectionModal","submit","MbProductGridsComponent","selectedIndex","product","ProductVariants","count","getProductCartCount","event","stopPropagation","addItem","decreaseItem","openProductVariants","MbProductVariantComponent","variant","MbRedeemDetailsComponent","MbRedeemRequestComponent","MbRelatedProductsComponent","MbSplashScreenComponent","showBottomNav","MbStoryViewComponent","progress","currentBanner","interval","setInterval","clearInterval","MbTimingSelectorComponent","services","dayList","selectedSlot","selectedSlotItem","DeliveryTimingFilter","getDeliveryTimingsList","timingList","date","getDay","selected","find","WeekDayId","DayName","Title","TimeSlots","addDays","itemIndex","findIndex","undefined","IsTimingActive","timeSelected","shouldClose","closeModalDialog","MbWalletRedeemComponent","redeemRequestService","modalId","redeemRequestList","redeemRequestDetails","isAddOrEdit","bankAccountForm","BankAccountId","loadRedeemHistory","_createRequestDialog","redeemRequestDialog","getRedeemRequestList","RequestedByUserId","BankAccountNumber","RequestState","RequestDateTime","RequestCompletionDateTime","createRedeemRequest","openRedeemRequestDialog","ServerDownComponent","localAssetsUrl","TitlebarComponent","TopnavComponent","categoryRoutes","component","mobileRoutes","MobileLayoutComponent","children","MobileHomeComponent","canActivate","RoleGuardService","roles","Role","ProductDetailsComponent","SearchViewComponent","SearchResultComponent","pathMatch","CartComponent","OffersViewComponent","ProfilesComponent","CategoriesComponent","ProductListComponent","MobileModule","SharedModule","CommonModule","RouterModule","cartUpdated","cartItem","splice","cartList","len","Product","ProductImages","arr","str","removeItem","navigatePlaceOrder","subCategoryService","productGroupService","header","categories","subCategories","productGroups","isNoMore","asyncCount","categoryFilter","CategoryFilter","subCategoryFilter","SubCategoryFilter","productGroupFilter","ProductGroupFilter","productFilter","childSubs","subCategorySub","isProductPage","j","productGroupId","category","list","subCategory","CategoryId","SubCategoryName","route","params","firstChild","selectedOffer","PageNumber","categoryKey","categoryId","RouteKey","loadOffers","checkOfferId","loadProductFromStart","subCategoryKey","subCategoryId","loadProductGroups","productGroupKey","loadCategories","loadSubCategories","loadAfterAsync","callBack","OfferUrl","DisplayName","CategoryBanner","getSubCategoryList","SubCategoryId","getProductGroupList","accordion","toggle","target","offsetHeight","scrollTop","scrollHeight","PageSize","CategoryKey","SubCategoryKey","ProductGroupKey","ProductGroupId","OfferId","ProductQueryType","getProductList","products","processProductList","_res","images","img","openCloseAnimation","fadeInOutAmination","displayCart","featuredProducts","suggestedProducts","currentRoute","meta","notifierService","currentNotification","items","icon","label","routerLink","routerLinkParams","active","pathname","toString","toLowerCase","indexOf","setUpNotifier","events","NavigationEnd","x","checkUrl","initOffCanvas","dialogRequest","showModal","hideModal","updateTag","content","outlet","activatedRouteData","onMessage$","trim","checkCounterForSimilarMessage","notify","existingIndex","Placement","OfferBannerPlacement","productId","getProductInfo","selectedProduct","userrService","userService","FirstName","LastName","Email","loadCurrentUseerDetails","force","getCurrentUserDetails","userInfo","logout","editModal","saveUserDetails","IsSuccess","searchKey","queryParamMap","Search","onScroll","searchCtrl","isLoading","errorMsg","searches","parse","localStorage","getItem","setItem","searchText","recentSearches","valueChanges","debounceTime","tap","switchMap","finalize","window","searchElement","nativeElement","focus","q","addToRecentSearches","searchPerformed","trigger","transition","style","position","opacity","left","animate","flyInOutAnimation","maxWidth","query","top","width","animateChild","optional"],"mappings":"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","file":"src_app_mobile_mobile_module_ts-es5.js","sourcesContent":["import { Component, Injector, Input, OnInit } from '@angular/core';\r\nimport { FormGroup, Validators } from '@angular/forms';\r\nimport { ParamMap, Params, RoutesRecognized } from '@angular/router';\r\nimport { map, switchMap } from 'rxjs/operators';\r\nimport { Address } from 'src/app/models/address';\r\nimport { ResponseObject, Result } from 'src/app/models/common';\r\nimport { AddressesService } from 'src/app/services/api-services/address.service';\r\nimport { BaseComponent } from 'src/app/shared/base.component';\r\n\r\n\r\n@Component({\r\n  selector: 'app-mb-add-address',\r\n  templateUrl: './mb-add-address.component.html',\r\n  styleUrls: ['./mb-add-address.component.scss']\r\n})\r\nexport class MbAddAddressComponent extends BaseComponent implements OnInit {\r\n\r\n  submitted: boolean = false;\r\n\r\n  path: string = 'edit-address'\r\n\r\n  @Input() public set routeData(data: string) {\r\n    let num = parseInt(data);\r\n    if (!isNaN(num)) {\r\n      this.isEditMode = true;\r\n      this.addressService.getAddressInfo(num).subscribe((res: ResponseObject<any>) => {\r\n        this.formInstance.patchValue(res.Data);\r\n      })\r\n    }\r\n  }\r\n\r\n  routerSubscription: any;\r\n\r\n  @Input() modalId: string;\r\n\r\n  @Input() set active(_active: boolean) {\r\n  }\r\n\r\n\r\n  private _isGPS: boolean = false;\r\n\r\n  set isGPS(_isGPS: boolean) {\r\n    this._isGPS = _isGPS;\r\n    if (_isGPS) {\r\n      this.clearAddressValidators();\r\n      this.setGPSValidators();\r\n    }\r\n    else {\r\n      this.setAddressValidators();\r\n      this.clearGPSValidators();\r\n    }\r\n  };\r\n\r\n  get isGPS(): boolean {\r\n    return this._isGPS;\r\n  }\r\n\r\n  formInstance: FormGroup = this.fb.group({\r\n    Id: [''],\r\n    FullName: ['', [Validators.required]],\r\n    PhoneNumber: ['', [Validators.required]],\r\n    AreaCode: [''],\r\n    AddressLine1: [''],\r\n    AddressLine2: [''],\r\n    LandMark: [''],\r\n    Country: ['India'],\r\n    GPS: [''],\r\n    IsDefault: [false]\r\n  })\r\n\r\n  get fullName() { return this.formInstance.get(\"FullName\") }\r\n  get phoneNumber() { return this.formInstance.get(\"PhoneNumber\") }\r\n  get areaCode() { return this.formInstance.get(\"AreaCode\") }\r\n  get addressLine1() { return this.formInstance.get(\"AddressLine1\") }\r\n  get addressLine2() { return this.formInstance.get(\"AddressLine2\") }\r\n  get landMark() { return this.formInstance.get(\"LandMark\") }\r\n  get country() { return this.formInstance.get(\"Country\") }\r\n  get gps() { return this.formInstance.get(\"GPS\") }\r\n\r\n  isEditMode: boolean = false;\r\n\r\n  constructor(protected injector: Injector, private addressService: AddressesService) {\r\n    super(injector);\r\n    this.errorIntrcptr.httpError$.subscribe(res => {\r\n      this.messageShown = false;\r\n      if (res.Result == Result.NotFound) {\r\n        this.router.navigateByUrl('/address');\r\n      }\r\n    })\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    \r\n    let pos = this.router.url.lastIndexOf('/') + 1;\r\n    let orderQuery = this.router.url.substring(pos, this.router.url.length);\r\n    if (!isNaN(<any>orderQuery)) {\r\n    \r\n      let id = parseInt(orderQuery);\r\n      this.isEditMode = true;\r\n      this.addressService.getAddressInfo(id).subscribe((res: ResponseObject<any>) => {\r\n        \r\n        this.formInstance.patchValue(res.Data);\r\n      })\r\n    }\r\n    \r\n    this.setAddressValidators();\r\n  }\r\n\r\n  setAddressValidators() {\r\n    this.addressLine1?.setValidators([Validators.required]);\r\n    this.addressLine2?.setValidators([Validators.required]);\r\n    this.landMark?.setValidators([Validators.required]);\r\n    this.country?.setValidators([Validators.required]);\r\n  }\r\n\r\n  clearAddressValidators() {\r\n    this.addressLine1?.clearValidators();\r\n    this.addressLine2?.clearValidators();\r\n    this.landMark?.clearValidators();\r\n    this.country?.clearValidators();\r\n  }\r\n\r\n  setGPSValidators() {\r\n    this.gps?.setValidators([Validators.required]);\r\n  }\r\n\r\n  clearGPSValidators() {\r\n    this.gps?.clearValidators();\r\n\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.formInstance.valid) {\r\n      this.showFullSpinner();\r\n      if (this.isEditMode) {\r\n        let address: Address = this.formInstance.value\r\n        this.addressService.editAddressInfo(address).subscribe(() => {\r\n          this.hideFullSpinner();\r\n          this.close();\r\n        });\r\n      } else {\r\n        let address: Address = this.formInstance.value\r\n        this.addressService.addAddressInfo(address).subscribe(() => {\r\n          this.hideFullSpinner();\r\n          this.close();\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  close() {\r\n    this.formInstance.reset();\r\n    let url = this.router.url.split(\"/\")[0];\r\n    this.router.navigateByUrl(url);\r\n  }\r\n}\r\n","<div class=\"uk-container- uk-container-xlarge uk-padding-remove full-container\">\r\n    <app-mb-header-nav [title]=\"(isEditMode ? 'Edit' : 'Add') + ' Address'\" [hasActions]=\"false\"></app-mb-header-nav>\r\n    <ngx-spinner [name]=\"loadSpinner\" [fullScreen]=\"false\">\r\n    </ngx-spinner>\r\n  \r\n    <div class=\"uk-container uk-container-xlarge address-container\">\r\n\r\n        <form [formGroup]=\"formInstance\" (ngSubmit)=\"submitted = true; onSubmit()\"\r\n            class=\"uk-grid-small uk-margin uk-text-left\" uk-grid>\r\n            <div class=\"uk-width-1-1@s\">\r\n                <label for=\"FullName\" class=\"primary-label\">Contact Person Name</label>\r\n                <input [formControlName]=\"'FullName'\" class=\"uk-input address-input\" type=\"text\" placeholder=\"Name *\"\r\n                    [class.uk-form-danger]=\"submitted && fullName?.invalid\">\r\n            </div>\r\n            <div class=\"uk-width-1-1@s\">\r\n                <label for=\"PhoneNumber\" class=\"primary-label\">Contact Person Phone</label>\r\n                <input [formControlName]=\"'PhoneNumber'\" class=\"uk-input address-input\" type=\"text\"\r\n                    placeholder=\"Mobile *\" [class.uk-form-danger]=\"submitted && phoneNumber?.invalid\">\r\n            </div>\r\n            <div class=\"uk-width-1-1@s\">\r\n                <label for=\"AddressLine1\" class=\"primary-label\">Street Name</label>\r\n                <input [formControlName]=\"'AddressLine1'\" class=\"uk-input address-input\" type=\"text\"\r\n                    placeholder=\"Address *\" [class.uk-form-danger]=\"submitted && addressLine1?.invalid\">\r\n            </div>\r\n            <div class=\"uk-width-1-1@s\">\r\n                <label for=\"AddressLine2\" class=\"primary-label\">Flat, Floor, Building Name</label>\r\n                <input [formControlName]=\"'AddressLine2'\" class=\"uk-input address-input\" type=\"text\"\r\n                    placeholder=\"Office/House No *\" [class.uk-form-danger]=\"submitted && addressLine2?.invalid\">\r\n            </div>\r\n            <div class=\"uk-width-1-1@s\">\r\n                <label for=\"LandMark\" class=\"primary-label\">Nearest Landmark</label>\r\n                <input [formControlName]=\"'LandMark'\" class=\"uk-input address-input\" type=\"text\"\r\n                    placeholder=\"Landmark *\" [class.uk-form-danger]=\"submitted && landMark?.invalid\">\r\n            </div>\r\n            <div class=\"uk-width-1-1@s\">\r\n                <div class=\"uk-padding-small uk-text-center\">\r\n\r\n                    <label for=\"IsDefault\" class=\"address-default-checkbox\"> <input id=\"IsDefault\"\r\n                            [formControlName]=\"'IsDefault'\" class=\"uk-checkbox\" type=\"checkbox\">\r\n                        &nbsp;Make this as default\r\n                    </label>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"uk-width-1-1\">\r\n                <button type=\"submit\" class=\"uk-button address-save-btn uk-width-1-1\">Save\r\n                    Address</button>\r\n            </div>\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <br />\r\n        </form>\r\n    </div>\r\n</div>","<div class=\"uk-container- uk-container-xlarge uk-padding-remove full-container\">\r\n    <app-mb-header-nav [title]=\"'Addresses'\" [hasActions]=\"false\"></app-mb-header-nav>\r\n    <ngx-spinner [name]=\"loadSpinner\" [fullScreen]=\"false\">\r\n    </ngx-spinner>\r\n\r\n    <div class=\"uk-container uk-container-xlarge address-container\">\r\n\r\n        <div class=\"uk-card uk-padding-remove uk-margin-small-top uk-card-body\">\r\n            <a [routerLink]=\"['/address']\" class=\"add-link uk-align-right\">Add New Address</a>\r\n        </div> \r\n        <div class=\"uk-card address-grid uk-padding-small uk-card-body\" *ngFor=\"let address of addresses\">\r\n            <table class=\"uk-table uk-table-small uk-table-divider\">\r\n\r\n                <tbody>\r\n                    <tr> \r\n                        <td class=\"address-details uk-text-left\">\r\n                            <p class=\"add-type uk-margin-remove\">{{ address?.FullName }}</p>\r\n                            <p class=\"add-street uk-margin-small uk-margin-remove-bottom\">{{ address?.AddressLine1 }}\r\n                            </p>\r\n                            <p class=\"add-city uk-margin-remove\">{{ address?.AddressLine2 }}</p>\r\n                            <p class=\"person-details\"> +91-{{ address?.PhoneNumber}}</p>\r\n                        </td>\r\n                        <td class=\"uk-padding-remove uk-text-right add-links\">\r\n                            <a [routerLink]=\"['/edit-address', address?.Id]\">\r\n                                <span class=\"material-icons-outlined\">\r\n                                    edit\r\n                                </span></a>\r\n                                &nbsp;&nbsp;\r\n                            <a (click)=\"deleteAddress(address?.Id)\" uk-toggle><span class=\"material-icons-outlined\">\r\n                                    delete\r\n                                </span></a>\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, Injector, Input, OnInit } from '@angular/core'; \r\nimport { AuthenticationService } from 'src/app/auth/_services/authentication.service';\r\nimport { Address, AddressFilter } from 'src/app/models/address';\r\nimport { ResponseObject } from 'src/app/models/common';\r\nimport { AddressesService } from 'src/app/services/api-services/address.service';\r\nimport { BaseComponent } from 'src/app/shared/base.component';\r\n\r\n@Component({\r\n  selector: 'app-mb-address',\r\n  templateUrl: './mb-address.component.html',\r\n  styleUrls: ['./mb-address.component.scss']\r\n})\r\nexport class MbAddressComponent extends BaseComponent implements OnInit {\r\n  @Input() modalId: string;\r\n  \r\n  @Input() set active(_active: boolean) {\r\n    if (_active) {\r\n      this.ngOnInit();\r\n    }\r\n  }\r\n\r\n  addresses: Address[] = [];\r\n\r\n  get defaultAddress(): Address | null {\r\n    if (this.addresses.length > 0) {\r\n      let addresses = this.addresses.filter(i => i.IsDefault);\r\n      if (addresses == null || addresses.length > 0) {\r\n        return addresses[0];\r\n      }\r\n      else {\r\n        return this.addresses[0];\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  isEditMode: boolean = false;\r\n  id: any = 0;\r\n\r\n  constructor(protected injector: Injector, private authService: AuthenticationService, private addressService: AddressesService) {\r\n    super(injector);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.loadAddresses();\r\n  }\r\n\r\n  loadAddresses() {\r\n\r\n    let filter = new AddressFilter();\r\n    filter.UserId = this.authService.currentUserValue.userId;\r\n    this.addressService.getAddressList(filter).subscribe((res: ResponseObject<any>) => {\r\n      console.log(\"Addresses: \")\r\n      this.addresses = res.Data;\r\n      this.hideFullSpinner();\r\n    });\r\n  }\r\n\r\n  deleteAddress(id: any) {\r\n    this.showFullSpinner();\r\n    this.addressService.deleteAddress(id).subscribe(() => {\r\n      this.loadAddresses();\r\n    })\r\n  }\r\n\r\n  close() {\r\n    this.router.navigate(this.returnUrl.return)\r\n  }\r\n}\r\n","<div class=\"uk-container uk-container-xlarge uk-padding-remove full-container\">\r\n\r\n    <ng-container *ngIf=\"currentSwitcherIndex > 0\">\r\n        <app-mb-header-nav [hasActions]=\"false\" (onBackClick)=\"currentSwitcherIndex > 0 ? switch(0): null\"></app-mb-header-nav>\r\n    </ng-container>\r\n    <ng-container *ngIf=\"currentSwitcherIndex == 0\">\r\n        <app-mb-header-nav [hasActions]=\"false\"></app-mb-header-nav>\r\n    </ng-container>\r\n\r\n    <div id=\"data-switcher\" class=\"uk-switcher\" uk-switcher>\r\n        <div class=\"uk-animation-slide-bottom-small\">\r\n\r\n            <div class=\"uk-card setting-grid uk-padding-small uk-card-body\">\r\n\r\n                <div class=\"uk-text-right uk-padding-remove-top uk-padding-small uk-padding-remove-right\">\r\n                    <br />\r\n                    <a (click)=\"switch(1)\" class=\"uk-button redeem-btn\">Add Account</a>\r\n                </div>\r\n\r\n\r\n                <ng-container *ngFor=\"let item of bankAccounts\">\r\n                    <div class=\"history-grid uk-margin-small-top\">\r\n\r\n                        <table class=\"uk-table history-table uk-margin-remove\">\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td class=\"uk-text-left\" style=\"width: 80%;\">\r\n                                        <div>\r\n                                            Acc. Name: <b>{{ item.AccountName }}</b> <br />\r\n                                            Bank Name: <b>{{ item.BankName }}</b> <br />\r\n                                            Acc. Number: <b>{{ item.AccountNumber }}</b> <br />\r\n                                            IFSC Code: <b>{{ item.IFSCCode }}</b> <br />\r\n                                        </div>\r\n                                    </td>\r\n                                    <td class=\"uk-text-right\" style=\"width: 20%;\">\r\n                                        <a (click)=\"deletionAccount = item; openDeleteConfirmation()\"\r\n                                            class=\"uk-button uk-padding-remove\">\r\n                                            <span class=\"material-icons-round req-icon\">\r\n                                                delete\r\n                                            </span>\r\n                                        </a>\r\n\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </ng-container>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"uk-animation-slide-bottom-small\">\r\n            <div>\r\n                <div class=\"uk-card wallet-info-grid uk-padding-small uk-card-body\" *ngIf=\"currentSwitcherIndex == 1\">\r\n                    <form [formGroup]=\"formInstance\" class=\"uk-grid-small uk-margin-small-top\" uk-grid>\r\n                        <div class=\"uk-width-1-2@s\">\r\n                            <label for=\"AccountName\" class=\"primary-label\">Full Name</label>\r\n                            <input formControlName=\"AccountName\" class=\"uk-input redeem-input\" type=\"text\"\r\n                                placeholder=\"Full Name\">\r\n                        </div>\r\n                        <div class=\"uk-width-1-2@s\">\r\n                            <label for=\"IFSCCode\" class=\"primary-label\">IFSC</label>\r\n                            <input formControlName=\"IFSCCode\" class=\"uk-input redeem-input\" type=\"text\"\r\n                                placeholder=\"IFSC\">\r\n                        </div>\r\n                        <div class=\"uk-width-1-2@s\">\r\n                            <label for=\"BankName\" class=\"primary-label\">Bank Name</label>\r\n                            <input formControlName=\"BankName\" class=\"uk-input redeem-input\" type=\"text\"\r\n                                placeholder=\"Bank Name\">\r\n                        </div>\r\n                        <div class=\"uk-width-1-2@s\">\r\n                            <label for=\"AccountNumber\" class=\"primary-label\">Account Number</label>\r\n                            <input formControlName=\"AccountNumber\" class=\"uk-input redeem-input\" type=\"text\"\r\n                                placeholder=\"Account No\">\r\n                        </div>\r\n                        <div class=\"uk-width-1-1@s\">\r\n                            <input type=\"submit\" (click)=\"submitted = true; addBankAccount()\"\r\n                                class=\"uk-button redeem-btn uk-button-logout uk-width-1-1\" value=\"Add Bank Account\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div id=\"delete-confirmation\" uk-modal>\r\n        <div class=\"uk-modal-dialog uk-modal-body uk-position-bottom uk-animation-slide-bottom redeem_modal\">\r\n            <button class=\"uk-modal-close-default\" type=\"button\" uk-close></button>\r\n            <div>\r\n                <div class=\"uk-card-body uk-padding-top-small\">\r\n                    <h4>Are your sure to delete this bank account info? </h4>\r\n                    Name: <b>{{ deletionAccount?.AccountName }}</b> <br />\r\n                    Account Number: <b>{{ deletionAccount?.AccountNumber }}</b> <br />\r\n                    Bank Name: <b>{{ deletionAccount?.BankName }}</b> <br />\r\n                    IFSC Code: <b>{{ deletionAccount?.IFSCCode }}</b> <br /> <br />\r\n                    <div class=\"uk-text-right\">\r\n                        <button class=\"uk-button uk-button-primary\" (click)=\"confirmDelete(); \">Confirm</button>\r\n                        &nbsp;\r\n                        <button class=\"uk-button uk-button-primary uk-toggle-buttons\"\r\n                            (click)=\"deletionAccount = null; deleteConfirmation.hide()\">Cancel</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n</div>","import { Component, Injector, Input, OnInit } from '@angular/core';\r\nimport { WalletService } from 'src/app/services/api-services/wallet.service';\r\nimport { BaseComponent } from 'src/app/shared/base.component';\r\nimport { Location } from '@angular/common';\r\nimport { Wallet } from 'src/app/models/wallet';\r\nimport { BankAccountService } from 'src/app/services/api-services/bank-accounts.service';\r\nimport { RedeemRequestService } from 'src/app/services/api-services/redeem-request.service';\r\nimport { RedeemRequest } from 'src/app/models/redeem-request';\r\nimport { BankAccount } from 'src/app/models/bank-account';\r\nimport { FormGroup } from '@angular/forms';\r\n\r\ndeclare var UIkit: any;\r\n\r\n@Component({\r\n  selector: 'app-mb-bank-accounts',\r\n  templateUrl: './mb-bank-accounts.component.html',\r\n  styleUrls: ['./mb-bank-accounts.component.scss']\r\n})\r\nexport class MbBankAccountsComponents extends BaseComponent implements OnInit {\r\n\r\n\r\n  deletionAccount: BankAccount | null = null;\r\n\r\n  submitted: boolean = false;\r\n\r\n  _switcher: any;\r\n\r\n  _deleteConfirmation: any;\r\n\r\n  currentSwitcherIndex: number = 0;\r\n\r\n  formInstance = this.fb.group({\r\n    Id: [],\r\n    AccountOfUserId: [],\r\n    BankName: [],\r\n    AccountNumber: [],\r\n    IFSCCode: [],\r\n    AccountName: []\r\n  })\r\n\r\n\r\n  get switcher(): any {\r\n    if (this._switcher == null) {\r\n      this._switcher = UIkit.switcher('#data-switcher', { animation: false })\r\n    }\r\n    return this._switcher;\r\n  }\r\n\r\n  get deleteConfirmation(): any {\r\n    if (this._deleteConfirmation == null) {\r\n      this._deleteConfirmation = UIkit.modal('#delete-confirmation')\r\n    }\r\n    return this._deleteConfirmation;\r\n  }\r\n\r\n  bankAccounts: BankAccount[];\r\n  currentBalance: number;\r\n\r\n  constructor(protected injector: Injector, private bankAccountService: BankAccountService,\r\n    private _location: Location) {\r\n    super(injector);\r\n  }\r\n\r\n  switch(index: number) {\r\n    if (index == 2) index = 1;\r\n\r\n    this.currentSwitcherIndex = index;\r\n    setTimeout(() => {\r\n      this.switcher.show(index);\r\n    });\r\n  }\r\n\r\n  openDeleteConfirmation() {\r\n    setTimeout(() => {\r\n      this.deleteConfirmation.show();\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.loadBankAccounts();\r\n\r\n    this.currentSwitcherIndex = 0;\r\n\r\n  }\r\n\r\n  close() {\r\n    this.router.navigate(this.returnUrl.return)\r\n  }\r\n\r\n  loadBankAccounts() {\r\n    this.bankAccountService.getBankAccountList().subscribe((res: { Data: BankAccount[]; }) => {\r\n      this.bankAccounts = res.Data;\r\n    })\r\n  }\r\n\r\n  addBankAccount() {\r\n    var bankAccount: BankAccount = <BankAccount><unknown>this.formInstance.value;\r\n    this.bankAccountService.addBankAccountInfo(bankAccount).subscribe(res => {\r\n      this.switch(0);\r\n      this.formInstance.reset();\r\n      this.loadBankAccounts();\r\n    })\r\n  }\r\n\r\n  navigateBack() {\r\n    if (this.currentSwitcherIndex != 0) {\r\n      this.switch(0);\r\n    } else {\r\n      this._location.back();\r\n    }\r\n  }\r\n\r\n  confirmDelete() {\r\n    if (this.deletionAccount != null) {\r\n      this.bankAccountService.deleteAccount(this.deletionAccount.Id).subscribe(res => {\r\n        this.deletionAccount = null;\r\n        this.switch(0);\r\n        this.loadBankAccounts();\r\n      });\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-mb-category-details',\r\n  templateUrl: './mb-category-details.component.html',\r\n  styleUrls: ['./mb-category-details.component.scss']\r\n})\r\nexport class MbCategoryDetailsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-mb-default-splash',\r\n  templateUrl: './mb-default-splash.component.html',\r\n  styleUrls: ['./mb-default-splash.component.scss']\r\n})\r\nexport class MbDefaultSplashComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"splash-screen\">\r\n    <img class=\"splash-img uk-position-center\" src=\"assets/logo-web.jpeg\" alt=\"\">\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-mb-ft-products',\r\n  templateUrl: './mb-ft-products.component.html',\r\n  styleUrls: ['./mb-ft-products.component.scss']\r\n})\r\nexport class MbFtProductsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>mb-ft-products works!</p>\r\n","<nav class=\"uk-navbar-container header-nav\" uk-navbar uk-sticky>\r\n\r\n    <div [class.uk-navbar-left]=\"!isTitleCenter\" [class.uk-navbar-center]=\"isTitleCenter\">\r\n\r\n        <ul class=\"uk-navbar-nav\" [class.uk-text-center]=\"isTitleCenter\">\r\n            <li class=\"uk-active\" *ngIf=\"!isTitleCenter && hasNav\">\r\n                <a (click)=\"navigateBack()\"><span class=\"material-icons-outlined\">\r\n                        keyboard_backspace\r\n                    </span></a>\r\n            </li>\r\n            <li [class.uk-text-center]=\"isTitleCenter\"><a>{{ title }} </a></li>\r\n        </ul>\r\n\r\n    </div>\r\n\r\n    <div class=\"uk-navbar-right\" *ngIf=\"!isTitleCenter && hasActions\">\r\n\r\n        <ul class=\"uk-navbar-nav\">\r\n            <li class=\"uk-active\">\r\n                <a routerLink=\"/offers\">\r\n                    <span class=\"material-icons-round profile-icon\">\r\n                        card_giftcard\r\n                    </span>\r\n                </a>\r\n            </li>\r\n            <li class=\"uk-active\">\r\n                <a routerLink=\"/notifications\">\r\n                    <span class=\"material-icons-round profile-icon\">\r\n                        notifications\r\n                    </span>\r\n                </a>\r\n            </li>\r\n        </ul>\r\n\r\n    </div>\r\n\r\n</nav>","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-mb-header-nav',\r\n  templateUrl: './mb-header-nav.component.html',\r\n  styleUrls: ['./mb-header-nav.component.scss']\r\n})\r\nexport class MbHeaderNavComponent implements OnInit {\r\n\r\n\r\n  @Output()\r\n  onBackClick: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n\r\n  constructor(protected router: Router, private location: Location) { }\r\n\r\n  @Input() title: string = 'Modern Mart'\r\n  @Input() hasActions: boolean = true;\r\n  @Input() hasNav: boolean = true;\r\n  @Input() isTitleCenter: boolean = false;\r\n \r\n  ngOnInit(): void {\r\n  }\r\n\r\n  navigateBack() {\r\n    if (this.onBackClick.observers.length == 0) {\r\n      this.location.back();\r\n    } else{\r\n      this.onBackClick.emit();\r\n    }\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-mb-home-brands',\r\n  templateUrl: './mb-home-brands.component.html',\r\n  styleUrls: ['./mb-home-brands.component.scss']\r\n})\r\nexport class MbHomeBrandsComponent implements OnInit {\r\n\r\n  assetsUrl: string = environment.assetsUrl;\r\n  \r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"uk-container uk-container-xlarge uk-padding-small\">\r\n    <p class=\"title\">Top Brands</p>\r\n    <div class=\"uk-child-width-1-4 uk-grid-small uk-text-center\" uk-grid>\r\n        <div>\r\n            <div class=\"uk-card uk-padding-remove uk-card-body\">\r\n                <img [attr.src]=\"assetsUrl + '/costco.webp'\" class=\"story-icon\" alt=\"\">\r\n            </div>\r\n        </div>\r\n        <div>\r\n            <div class=\"uk-card uk-padding-remove uk-card-body\">\r\n                <img [attr.src]=\"assetsUrl + '/bestbuy.webp'\" class=\"story-icon\" alt=\"\">\r\n            </div>\r\n        </div>\r\n        <div>\r\n            <div class=\"uk-card uk-padding-remove uk-card-body\">\r\n                <img [attr.src]=\"assetsUrl + '/safeway.webp'\" class=\"story-icon\" alt=\"\">\r\n            </div>\r\n        </div>\r\n        <div>\r\n            <div class=\"uk-card uk-padding-remove uk-card-body\">\r\n                <img [attr.src]=\"assetsUrl + '/thewine.webp'\" class=\"story-icon\" alt=\"\">\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","<div class=\"uk-container uk-container-xlarge uk-padding-small\">\r\n    <p class=\"category-title\">Categories\r\n        <a routerLink=\"/collections\" class=\"uk-float-right\">See more <span class=\"material-icons-outlined\">\r\n                chevron_right\r\n            </span></a>\r\n    </p>\r\n\r\n    <div class=\"uk-child-width-1-3 uk-child-width-1-3@m uk-grid-small uk-text-center  uk-grid-match\"\r\n    uk-scrollspy=\"target: > div; cls: uk-animation-slide-bottom-small; delay: 200\" uk-grid>\r\n        <ng-container *ngFor=\"let item of categoryList;\">\r\n            <div>\r\n                <div class=\"uk-card category-grid uk-card-body\" [routerLink]=\"['products/' + item.RouteKey]\">\r\n                    <img class=\"category-img\" [attr.src]=\"imgUrl + item.CategoryImage\" alt=\"\">\r\n                    <p class=\"title\">{{ item.CategoryName }}</p>\r\n                </div>\r\n            </div>\r\n        </ng-container>\r\n    </div>\r\n</div>","import { Component, EventEmitter, Injector, OnInit, Output } from '@angular/core';\r\nimport { Category } from 'src/app/models/category';\r\nimport { ResponseObject } from 'src/app/models/common';\r\nimport { CategoriesService } from 'src/app/services/api-services/categories.service';\r\nimport { BaseComponent } from 'src/app/shared/base.component';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-mb-home-categories',\r\n  templateUrl: './mb-home-categories.component.html',\r\n  styleUrls: ['./mb-home-categories.component.scss']\r\n})\r\nexport class MbHomeCategoriesComponent extends BaseComponent implements OnInit {\r\n  \r\n  imgUrl: string = environment.uploadsUrl;\r\n\r\n  categoryList: Category[] = []; \r\n\r\n  @Output()\r\n  categoryClicked: EventEmitter<Category> = new EventEmitter<Category>();\r\n\r\n  categoryCalicked(item: Category) {\r\n    this.categoryClicked.emit(item);\r\n  }\r\n\r\n  constructor(protected injector: Injector, \r\n    private categoryService: CategoriesService) {\r\n    super(injector);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    let filter: any;\r\n    this.categoryService.getCategoryList(filter).subscribe((res: ResponseObject<Category[]>) => {\r\n      let data = res.Data ?? [];\r\n      data.forEach(item => {\r\n        item.CategoryImage = item.CategoryImage.replace('~', '');\r\n      })\r\n      this.categoryList = data;\r\n\r\n      console.log(this.categoryList);\r\n    })\r\n  }\r\n\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-mb-home-main-banner',\r\n  templateUrl: './mb-home-main-banner.component.html',\r\n  styleUrls: ['./mb-home-main-banner.component.scss']\r\n})\r\nexport class MbHomeMainBannerComponent implements OnInit {\r\n\r\n  assetUrl: string = environment.assetsUrl;\r\n  \r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"uk-container uk-container-xlarge uk-padding-small uk-animation-slide-bottom-small\">\r\n    <img class=\"main-banner\" [attr.data-src]=\"assetUrl + '/6.jpg'\" uk-img>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-mb-home-navbar',\r\n  templateUrl: './mb-home-navbar.component.html',\r\n  styleUrls: ['./mb-home-navbar.component.scss']\r\n})\r\nexport class MbHomeNavbarComponent implements OnInit {\r\n\r\n  assetsUrl: string = environment.assetsUrl;\r\n  \r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<nav class=\"uk-navbar-container\" uk-navbar uk-sticky>\r\n\r\n    <div class=\"uk-navbar-left\">\r\n\r\n        <a class=\"uk-navbar-item uk-logo\" uk-dsiabled>\r\n            <img [attr.src]=\"assetsUrl + '/logo-web.jpeg'\" alt=\"\">\r\n        </a>\r\n\r\n\r\n    </div>\r\n\r\n    <div class=\"uk-navbar-right\">\r\n        <ul class=\"uk-navbar-nav\">\r\n            <li class=\"uk-active\">\r\n                <a routerLink=\"/offers\">\r\n                    <span class=\"material-icons-round profile-icon\">\r\n                        card_giftcard\r\n                    </span>\r\n                </a>\r\n            </li>\r\n            <li class=\"uk-active\">\r\n                <a routerLink=\"/notifications\">\r\n                    <span class=\"material-icons-round profile-icon\">\r\n                        notifications\r\n                    </span>\r\n                </a>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n\r\n</nav>","<div class=\"uk-container uk-container-xlarge uk-padding-small\"\r\n    uk-scrollspy=\"target: > app-mb-product-grids; cls: uk-animation-slide-bottom-small; delay: 200\">\r\n    <p class=\"offer-title\">Featured Products\r\n        <a href=\"\" class=\"uk-float-right\">See more <span class=\"material-icons-outlined\">\r\n                chevron_right\r\n            </span></a>\r\n    </p>\r\n\r\n    <ng-container *ngFor=\"let product of productList\">\r\n        <app-mb-product-grids [product]=\"product\"></app-mb-product-grids>\r\n    </ng-container>\r\n    <!-- \r\n    <div class=\"uk-text-center product-grid uk-grid-collapse uk-grid-match\" uk-grid>\r\n\r\n        <div class=\"uk-width-1-3\">\r\n            <div class=\"uk-card  uk-padding-remove uk-card-body\">\r\n                <img class=\"product-img uk-position-center\" src=\"assets/products/atta-ashirvad.jpg\" alt=\"\">\r\n                <div class=\"uk-overlay uk-light uk-position-top-left\" style=\"padding: 4px;padding-left:8px;\">\r\n                    <span class=\"uk-badge   uk-margin-small offer-badge\">10% off</span>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n        <div class=\"uk-width-expand\">\r\n            <div class=\"uk-card product-details-grid uk-card-body uk-text-left\">\r\n                <p class=\"product-price uk-margin-remove\"><span class=\"offer-price\"><span\r\n                            class=\"r-symbol\">₹</span>140</span>\r\n                    <span class=\"mrp-price\"><span class=\"r-symbol\">₹ </span>120</span>\r\n                </p>\r\n                <p class=\"product-name uk-margin-remove\">Flipkart Supermart Select Idly Rawa (1 kg)\r\n                </p>\r\n                <table class=\"uk-table uk-table-small uk-table-divider btn-table \">\r\n\r\n                    <tbody>\r\n                        <tr>\r\n                            <td> <button class=\"uk-button uk-button-small variant-btn\">500 gm <span\r\n                                        class=\"material-icons-round\">\r\n                                        chevron_right\r\n                                    </span></button></td>\r\n                            <td>\r\n                                <button class=\"uk-button uk-float-right uk-button-small cart-btn\">add<span\r\n                                        class=\"material-icons-round\">\r\n                                        shopping_cart\r\n                                    </span></button>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    </div>\r\n     -->\r\n</div>","import { Component, Input, OnInit } from '@angular/core';\r\nimport { Product } from 'src/app/models/product';\r\n\r\n@Component({\r\n  selector: 'app-mb-home-offer-slider',\r\n  templateUrl: './mb-home-offer-slider.component.html',\r\n  styleUrls: ['./mb-home-offer-slider.component.scss']\r\n})\r\nexport class MbHomeOfferSliderComponent implements OnInit {\r\n  \r\n  @Input() productList: Product[] = [];\r\n\r\n  constructor() {\r\n  } \r\n\r\n  ngOnInit(): void {\r\n  }\r\n}\r\n","<div class=\"uk-container uk-container-xlarge uk-padding-small uk-padding-remove-bottom uk-animation-slide-right-medium\">\r\n    <div uk-slider>\r\n\r\n        <div class=\"uk-position-relative uk-visible-toggle uk-light\" tabindex=\"-1\">\r\n\r\n            <ul class=\"uk-slider-items uk-child-width-1-1 uk-child-width-1-3@s uk-child-width-1-4@m\">\r\n                <li *ngFor=\"let offerBanner of offerBanners\">\r\n                    <a [routerLink]=\"['/collections/' + offerBanner.OfferUrl]\">\r\n                        <img [attr.src]=\"uploadsUrl + '/' + offerBanner.BannerImageUrl\" class=\"offer-banner\" alt=\"\">\r\n                    </a>\r\n                </li>\r\n            </ul>\r\n\r\n\r\n        </div>\r\n\r\n        <ul class=\"uk-slider-nav uk-dotnav uk-flex-center uk-margin offer-dot\"></ul>\r\n\r\n    </div>\r\n\r\n</div>","import { Component, Injector, OnInit } from '@angular/core';\r\nimport { ResponseObject } from 'src/app/models/common';\r\nimport { OfferBanner, OfferFilter } from 'src/app/models/offer';\r\nimport { OfferService } from 'src/app/services/api-services/offers.service';\r\nimport { BaseComponent } from 'src/app/shared/base.component';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-mb-home-slider-banner',\r\n  templateUrl: './mb-home-slider-banner.component.html',\r\n  styleUrls: ['./mb-home-slider-banner.component.scss']\r\n})\r\nexport class MbHomeSliderBannerComponent extends BaseComponent implements OnInit {\r\n\r\n  uploadsUrl: string = environment.uploadsUrl;\r\n\r\n  offerBanners: OfferBanner[] = [];\r\n\r\n  constructor(protected injector: Injector, protected offerSeervice: OfferService) {\r\n    super(injector);\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    let filter = new OfferFilter();\r\n    this.offerSeervice.getOfferBannerList(filter).subscribe((res: ResponseObject<OfferBanner[]>) => {\r\n      res.Data?.forEach((item: OfferBanner) => {\r\n        item.BannerImageUrl = item.BannerImageUrl.replace(\"~/\", '');\r\n      })\r\n      this.offerBanners = (res.Data ?? [])//.filter(i => i.Placement == OfferBannerPlacement.MobileStatus);\r\n    })\r\n  }\r\n}\r\n","<div class=\"uk-container uk-container-xlarge uk-padding-small\" *ngIf=\"offerBanners != null && offerBanners.length > 0\">\r\n    <p class=\"title\">Offers</p>\r\n    <div class=\"story-grid\">\r\n        <div class=\"uk-position-relative uk-visible-toggle uk-light\" tabindex=\"-1\" uk-slider=\"finite: true;\">\r\n\r\n            <ul class=\"uk-slider-items uk-child-width-1-4 uk-child-width-1-3@m uk-grid-match uk-grid-small uk-grid\"\r\n                uk-scrollspy=\"target: > li; cls: uk-animation-slide-bottom-small; delay: 200\">\r\n                <li *ngFor=\"let item of offerBanners\">\r\n                    <div class=\"uk-panel\" (click)=\"navigateViewStory(item)\">\r\n                        <img [attr.src]=\"uploadsUrl + '/' + item.BannerImageUrl\" class=\"story-icon\" alt=\"\">\r\n                    </div>\r\n                </li>\r\n                <!-- <li>\r\n                    <div class=\"uk-panel\">\r\n                        <img [attr.src]=\"assetsurl + '/products/atta-ashirvad.jpg'\" class=\"story-icon\" alt=\"\">\r\n                    </div>\r\n                </li>\r\n                <li>\r\n                    <div class=\"uk-panel\">\r\n                        <img [attr.src]=\"assetsurl + '/products/atta-ashirvad.jpg'\" class=\"story-icon\" alt=\"\">\r\n                    </div>\r\n                </li>\r\n                <li>\r\n                    <div class=\"uk-panel\">\r\n                        <img [attr.src]=\"assetsurl + '/products/diary-milk.jpg'\" class=\"story-icon\" alt=\"\">\r\n                    </div>\r\n                </li>\r\n                <li>\r\n                    <div class=\"uk-panel\">\r\n                        <img [attr.src]=\"assetsurl + '/products/diary-milk.jpg'\" class=\"story-icon\" alt=\"\">\r\n                    </div>\r\n                </li> -->\r\n            </ul>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, Injector, OnInit } from '@angular/core';\r\nimport { ResponseObject } from 'src/app/models/common';\r\nimport { OfferBanner, OfferFilter, OfferBannerPlacement } from 'src/app/models/offer';\r\nimport { OfferService } from 'src/app/services/api-services/offers.service';\r\nimport { BaseComponent } from 'src/app/shared/base.component';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-mb-home-stories-offers',\r\n  templateUrl: './mb-home-stories-offers.component.html',\r\n  styleUrls: ['./mb-home-stories-offers.component.scss']\r\n})\r\nexport class MbHomeStoriesOffersComponent extends BaseComponent implements OnInit {\r\n\r\n  uploadsUrl: string = environment.uploadsUrl;\r\n\r\n  offerBanners: OfferBanner[] = [];\r\n\r\n  constructor(protected injector: Injector, protected offerSeervice: OfferService) {\r\n    super(injector);\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    let filter = new OfferFilter();\r\n    this.offerSeervice.getOfferBannerList(filter).subscribe((res: ResponseObject<OfferBanner[]>) => {\r\n      res.Data?.forEach((item: OfferBanner) => {\r\n        item.BannerImageUrl = item.BannerImageUrl.replace(\"~/\", '');\r\n      })\r\n      this.offerBanners = (res.Data ?? [])//.filter(i => i.Placement == OfferBannerPlacement.MobileStatus);\r\n    })\r\n  }\r\n\r\n  navigateViewStory(offerBanner: OfferBanner) {\r\n    this.offerSeervice.changeCurrentBannerr(offerBanner);\r\n    this.router.navigate([\"/view-story\"]);\r\n  }\r\n}\r\n","import { Location } from '@angular/common';\r\nimport { Component, Injector, OnInit } from '@angular/core';\r\nimport { FormGroup, Validators } from '@angular/forms';\r\nimport { first } from 'rxjs/operators';\r\nimport { AuthenticationService } from 'src/app/auth/_services/authentication.service';\r\nimport { BaseComponent } from 'src/app/shared/base.component';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n    selector: 'app-mb-login',\r\n    templateUrl: './mb-login.component.html',\r\n    styleUrls: ['./mb-login.component.scss']\r\n})\r\nexport class MbLoginComponent extends BaseComponent implements OnInit {\r\n\r\n    submitted: boolean = true;\r\n\r\n    assetsUrl: string = environment.assetsUrl;\r\n    \r\n    showPassword: boolean = false;\r\n\r\n    formInstance: FormGroup = this.fb.group({\r\n        UserName: ['', [Validators.required]],\r\n        Password: ['']\r\n    })\r\n\r\n    constructor(protected injector: Injector, private location: Location,\r\n        private authenticationService: AuthenticationService) {\r\n        super(injector);\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.spinnerOptions.bdColor = 'rgba(0,0,0,0.5)';\r\n        this.spinnerOptions.color = 'rgba(256,256,256,0.8)';\r\n    }\r\n\r\n    back() {\r\n        this.location.back();\r\n    }\r\n\r\n    get email() {\r\n        return this.formInstance.get('UserName');\r\n    }\r\n\r\n    get password() {\r\n        return this.formInstance.get('Password');\r\n    }\r\n\r\n    visibility() {\r\n        this.showPassword = !this.showPassword;\r\n    }\r\n\r\n    submitForm() {\r\n\r\n        this.submitted = true;\r\n\r\n        if (this.formInstance.invalid) {\r\n            return;\r\n        }\r\n\r\n        this.showSpinner();\r\n        let pass = this.password?.value == null ? '' : this.password?.value;\r\n        this.authenticationService.login(this.email?.value, pass)\r\n            .pipe(first())\r\n            .subscribe(\r\n                (user) => {\r\n                    this.formInstance.reset();\r\n                    if (user.requireOTP == \"True\") {\r\n                        let url = this.router.url.replace(\"/login\", \"/otp\");\r\n                        this.router.navigateByUrl(url);\r\n                    } else {\r\n\r\n                    }\r\n                    this.hideSpinner();\r\n                },\r\n                (error: any) => {\r\n                    setTimeout(() => {\r\n                        this.hideSpinner();\r\n                    }, 500);\r\n                });\r\n    }\r\n}\r\n","<div class=\"uk-container uk-container-xlarge uk-padding-remove login-container\">\r\n\r\n\r\n\r\n    <ngx-spinner [name]=\"loadSpinner\" [fullScreen]=\"false\">\r\n    </ngx-spinner>\r\n\r\n    <nav class=\"uk-navbar-container header-nav\" uk-navbar>\r\n\r\n        <div class=\"uk-navbar-left\">\r\n\r\n            <ul class=\"uk-navbar-nav\">\r\n                <li class=\"uk-active\" (click)=\"back()\"><a><span class=\"material-icons-outlined\">\r\n                            keyboard_backspace\r\n                        </span></a></li>\r\n                <li><a href=\"#\">Login</a></li>\r\n            </ul>\r\n\r\n        </div>\r\n\r\n    </nav>\r\n    <div class=\"uk-container uk-container-xlarge details-grid uk-position-center\">\r\n\r\n        <div class=\"app-logo\">\r\n            <img [attr.src]=\"assetsUrl + '/logo-web.jpeg'\" alt=\"\">\r\n        </div>\r\n\r\n        <p class=\"login-title\">Login/Sign Up</p>\r\n        <p class=\"login-subtitle\">Login with phone number</p>\r\n        <form [formGroup]=\"formInstance\" (ngSubmit)=\"submitForm()\" class=\"uk-grid-small\" uk-grid>\r\n            <div class=\"uk-width-1-1 uk-margin-medium-top\">\r\n                <label class=\"uk-form-label\" class=\"phone-label\">Phone number</label>\r\n                <div class=\"uk-inline uk-width-1-1\">\r\n                    <span class=\"uk-form-icon phone-code\">+91</span>\r\n                    <input [formControlName]=\"'UserName'\" class=\"uk-input phone-input uk-width-1-1\" type=\"number\"\r\n                        max-length=\"10\" placeholder=\"Enter your mobile number\">\r\n\r\n                </div>\r\n                <p class=\"error-text \">Please enter a valid number <span class=\"material-icons-outlined uk-float-right\">\r\n                        error\r\n                    </span></p>\r\n            </div>\r\n            <div class=\"uk-width-1-1\">\r\n\r\n                <button type=\"submit\" class=\"uk-button phone-submit uk-width-1-1\">continue <span\r\n                        class=\"material-icons-outlined\">\r\n                        chevron_right\r\n                    </span>\r\n                </button>\r\n            </div>\r\n            <div class=\"uk-width-1-1\">\r\n                <p class=\"login-terms uk-align-center\">By Proceeding you agree to the <a href=\"\">Terms of use</a> and\r\n                    <a href=\"\">Privacy and policy</a>\r\n                </p>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>","import { Component, Injector, OnInit } from '@angular/core';\nimport { BaseComponent } from 'src/app/shared/base.component';\n\n@Component({\n  selector: 'app-mb-my-notifs',\n  templateUrl: './mb-my-notifs.component.html',\n  styleUrls: ['./mb-my-notifs.component.scss']\n})\nexport class MbMyNotifsComponent extends BaseComponent implements OnInit{\n\n  constructor(protected injector: Injector) {\n    super(injector);\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"uk-container- uk-container-xlarge uk-padding-remove full-container\">\n    <app-mb-header-nav [title]=\"'Notifications'\" [hasActions]=\"false\"></app-mb-header-nav>\n    <ngx-spinner [name]=\"loadSpinner\" [fullScreen]=\"false\">\n    </ngx-spinner>\n\n    <div class=\"notification-list\">\n        <div class=\"uk-card uk-card-body uk-padding-small\">\n            <div class=\"notification-icon\">\n                <span uk-icon=\"icon: bolt\"></span>\n            </div>\n            <div class=\"notification-details\">\n                <div class=\"notification-text\">\n                    <p>\n                        hello this is lorem ipsume dolor isuk nomus belor idi kino luru wido wanm kilo sazi\n                    </p>\n                </div>\n            </div>\n        </div>\n        <div class=\"uk-card uk-card-body uk-padding-small\">\n            <div class=\"notification-icon\">\n                <span uk-icon=\"icon: bolt\"></span>\n            </div>\n            <div class=\"notification-details\">\n                <div class=\"notification-text\">\n                    <p>\n                        hello this is lorem ipsume dolor isuk nomus belor idi kino luru wido wanm kilo sazi\n                    </p>\n                </div>\n            </div>\n        </div>\n        <div class=\"uk-card uk-card-body uk-padding-small\">\n            <div class=\"notification-icon\">\n                <span uk-icon=\"icon: bolt\"></span>\n            </div>\n            <div class=\"notification-details\">\n                <div class=\"notification-text\">\n                    <p>\n                        hello this is lorem ipsume dolor isuk nomus belor idi kino luru wido wanm kilo sazi, hello this is lorem ipsume dolor isuk nomus belor idi kino luru wido wanm kilo sazi\n                    </p>\n                </div>\n                <div class=\"notificaiton-image\">\n                    <img src=\"assets/1.jpg\" />\n                </div>\n            </div>\n        </div>\n        <div class=\"uk-card uk-card-body uk-padding-small\">\n            <div class=\"notification-icon\">\n                <span uk-icon=\"icon: bolt\"></span>\n            </div>\n            <div class=\"notification-details\">\n                <div class=\"notification-text\">\n                    <p>\n                        hello this is lorem ipsume dolor isuk nomus belor idi kino luru wido wanm kilo sazi\n                    </p>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","<div class=\"uk-container uk-container-xlarge uk-padding-remove order-container\">\r\n    <app-mb-header-nav [title]=\"'Orders'\" [hasActions]=\"false\"></app-mb-header-nav>\r\n\r\n\r\n    <ngx-spinner [name]=\"loadSpinner\" [fullScreen]=\"false\">\r\n    </ngx-spinner>\r\n\r\n    <div class=\"list-container\">\r\n        <ng-container *ngFor=\"let order of orders\">\r\n            <div class=\"order-grid\" [routerLink]=\"'/order-details/' + order?.Id\">\r\n                <table class=\"uk-table uk-table-small uk-table-divider uk-margin-remove order-table\">\r\n\r\n                    <tbody [class]=\"!(order?.OrderState == 6 || order?.OrderState == 7) ? 'current-status success-stage' : 'current-status cancelled-stage'\">\r\n                        <tr>\r\n                            <td class=\"p-img uk-text-center\">\r\n                                <img [attr.src]=\"assetsUrl + '/products/atta-ashirvad.jpg'\" alt=\"\">\r\n                            </td>\r\n                            <td class=\"p-info uk-text-left\"> {{ order?.Purchases?.length }} Item{{\r\n                                order?.Purchases?.length == 1 ? '' : 's' }} <br> <span class=\"order-total\"> <span\r\n                                        class=\"r-symbol\">₹</span>{{ order?.TotalBill }}</span>\r\n                            </td>\r\n                            <td class=\"p-status uk-text-right\">\r\n                                <span class=\"dsc-icon\"> </span>\r\n                                <span class=\"delivery-status\">{{\r\n                                    camelCaseToSpacedText(orderStatus[order.OrderState]) }}</span>\r\n                            </td>\r\n                            <td class=\"p-chev\"> <span class=\"material-icons-outlined\">\r\n                                    chevron_right\r\n                                </span></td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n                <span class=\"order-id\">#{{ order?.Id }}</span> <span class=\"placed-time\">Placed on {{ order.OrderDate\r\n                    |\r\n                    date: 'MMM-d, y hh:mm aa' }}</span>\r\n            </div>\r\n        </ng-container>\r\n        <!-- <div class=\"order-grid\">\r\n            <table class=\"uk-table uk-table-small uk-table-divider uk-margin-remove order-table\">\r\n\r\n                <tbody>\r\n                    <tr>\r\n                        <td class=\"p-img uk-text-center\">\r\n                            <img [attr.src]=\"assetsUrl + '/products/atta-ashirvad.jpg'\" alt=\"\">\r\n                        </td>\r\n                        <td class=\"p-info uk-text-left\">5 Items <br> <span class=\"order-total\"> <span class=\"r-symbol\">₹</span> 340</span>\r\n                        </td>\r\n                        <td class=\"p-status uk-text-left\"><span class=\"material-icons-round delivery-icon success\"> check_circle </span> <span class=\"delivery-status\">Order Placed</span></td>\r\n                        <td class=\"p-chev\"> <span class=\"material-icons-outlined\">\r\n                        chevron_right\r\n                        </span></td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n            <span class=\"order-id\">#4040401</span> <span class=\"placed-time\">placed on 12 Dec 12:49 Am</span>\r\n        </div> -->\r\n    </div>\r\n</div>","import { Component, Injector, OnInit } from '@angular/core';\r\nimport { OrderStatus, ResponseObject, transformCamelToSpaces } from 'src/app/models/common';\r\nimport { Order, OrderFilter } from 'src/app/models/order';\r\nimport { OrderService } from 'src/app/services/api-services/order.service';\r\nimport { BaseComponent } from 'src/app/shared/base.component';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-mb-my-orders',\r\n  templateUrl: './mb-my-orders.component.html',\r\n  styleUrls: ['./mb-my-orders.component.scss']\r\n})\r\nexport class MbMyOrdersComponent extends BaseComponent implements OnInit {\r\n\r\n  assetsUrl: string = environment.assetsUrl;\r\n  \r\n  orderStatus: typeof OrderStatus = OrderStatus;\r\n  camelCaseToSpacedText: typeof transformCamelToSpaces = transformCamelToSpaces;\r\n\r\n  orders: Order[];\r\n  selectedId: number;\r\n   \r\n  constructor(protected injector: Injector, protected orderService: OrderService) { super(injector); }\r\n\r\n  ngOnInit(): void {\r\n    this.showSpinner();\r\n    let filter: OrderFilter = new OrderFilter();\r\n    this.orderService.getOrderList(filter).subscribe((res: ResponseObject<Order[]>) => {\r\n      this.orders = res.Data ?? [];\r\n      this.hideSpinner();\r\n    });\r\n  }\r\n}\r\n","<div class=\"uk-container uk-container-xlarge uk-padding-remove full-container\">\r\n    <app-mb-header-nav [title]=\"'My Wallet'\" [hasActions]=\"false\"></app-mb-header-nav>\r\n\r\n    <ngx-spinner [name]=\"loadSpinner\" [fullScreen]=\"false\">\r\n    </ngx-spinner>\r\n \r\n    <div class=\"uk-container uk-container-xlarge wallet-container\">\r\n        <div class=\"balance-grid uk-text-center\">\r\n\r\n            <p class=\"balance-title\">Current Balance</p>\r\n            <p class=\"balance-amount\"><span class=\"r-symbol\">\r\n                    ₹</span>{{ currentBalance }}</p>\r\n        </div>\r\n        <p class=\"activity-heading\">Wallet History</p>\r\n        <ng-container *ngIf=\"walletList != null && walletList.length > 0\">\r\n            <ng-container *ngFor=\"let walletInfo of walletList\">\r\n                <div class=\"history-grid uk-margin-small-top\">\r\n                    <p class=\"trans-id uk-margin-remove uk-float-left\">#TRN-{{ walletInfo.TransactionId | number:'5.0' | removeComma }}</p>\r\n                    <p class=\"trans-date uk-text-right uk-margin-remove\">\r\n                        <span>{{ walletInfo.TimeStamp | date:'MMM-dd, yyyy hh:mm' }}</span>\r\n                    </p>\r\n                    <table class=\"uk-table history-table uk-margin-remove uk-text-center\">\r\n                        <tbody>\r\n                            <tr>\r\n                                <td class=\"badge-type uk-text-left\">\r\n\r\n                                    <span class=\"uk-badge purchase-badge \" [class.red]=\"walletInfo.TransactionType == 1\">\r\n                                        {{ walletInfo.TransactionType == 0 ? 'Credited' : 'Debited' }}</span>\r\n                                </td>\r\n                                <td>\r\n                                    <p class=\"invoice-id \">#INV-{{ walletInfo.ActionId ?? walletInfo.Id | number:'5.0' | removeComma }}</p>\r\n                                </td>\r\n                                <td>\r\n                                    <p class=\"trans-amt\">\r\n                                        <!-- <span class=\"material-icons-outlined\">\r\n                                            remove\r\n                                        </span> -->\r\n                                        <span class=\"r-symbol\"> ₹{{ walletInfo.Amount }}</span>\r\n                                    </p>\r\n                                </td>\r\n                            </tr>\r\n\r\n                        </tbody>\r\n                    </table>\r\n                    <p class=\"wallet-type\">{{ walletInfo.OrderAction }}</p>\r\n\r\n                </div>\r\n            </ng-container>\r\n            <br />\r\n        </ng-container>\r\n        <br />\r\n    </div>\r\n\r\n</div>","import { Component, Injector, Input, OnInit } from '@angular/core';\r\nimport { BaseComponent } from 'src/app/shared/base.component';\r\nimport { Wallet } from 'src/app/models/wallet';\r\nimport { AuthenticationService } from 'src/app/auth/_services/authentication.service';\r\nimport { WalletService } from 'src/app/services/api-services/wallet.service';\r\n\r\n@Component({\r\n  selector: 'app-mb-my-wallet',\r\n  templateUrl: './mb-my-wallet.component.html',\r\n  styleUrls: ['./mb-my-wallet.component.scss']\r\n})\r\nexport class MbMyWalletComponent extends BaseComponent implements OnInit {\r\n   \r\n  walletList: Wallet[];\r\n  currentBalance: number;\r\n  \r\n  constructor(protected injector: Injector, private authService: AuthenticationService, private walletService: WalletService) {\r\n    super(injector);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n \r\n    this.loadWalletInfo();\r\n  }\r\n\r\n  loadWalletInfo() {\r\n    this.walletService.getWalletList().subscribe((res: { Data: Wallet[]; }) => {\r\n      this.walletList = res.Data;\r\n      this.currentBalance = 0;\r\n      this.walletList.forEach(item => this.currentBalance += item.Amount);\r\n    })\r\n  }\r\n\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { ResponseObject } from 'src/app/models/common';\r\nimport { Order, OrderStatus } from 'src/app/models/order';\r\nimport { OrderService } from 'src/app/services/api-services/order.service';\r\n\r\ndeclare var UIkit: any;\r\n\r\n@Component({\r\n  selector: 'app-mb-order-cancel-reason',\r\n  templateUrl: './mb-order-cancel-reason.component.html',\r\n  styleUrls: ['./mb-order-cancel-reason.component.scss']\r\n})\r\nexport class MbOrderCancelReasonComponent implements OnInit {\r\n\r\n  name: string = \"cancelled-reason\";\r\n  modal: any;\r\n\r\n  constructor(private orderService: OrderService,\r\n    private router: Router, \r\n    private spinner: NgxSpinnerService) { }\r\n\r\n  @Input()\r\n  order?: Order;\r\n  \r\n  ngOnInit(): void {\r\n  }\r\n  \r\n\r\n  cancelOrder() {\r\n    this.modal = UIkit.modal('#' + this.name);\r\n\r\n    let order = Object.assign({}, this.order);\r\n    order.OrderState = OrderStatus.Cancelled;\r\n    this.spinner.show();\r\n    this.orderService.updateOrderStatus(order).subscribe((res: ResponseObject<any>) => {\r\n      this.spinner.hide();\r\n      this.modal.hide();\r\n      var ele = document.getElementById(this.name);\r\n      ele?.remove();\r\n      this.router.navigate([\"/my-orders\"]);\r\n    });\r\n  }\r\n}\r\n","<!-- This is the modal -->\r\n<div [id]=\"name\" uk-modal>\r\n    <div\r\n        class=\"uk-modal-dialog uk-modal-body uk-animation-slide-bottom reason-modal uk-text-center uk-position-bottom \">\r\n\r\n        <button class=\"uk-modal-close-default\" type=\"button\" uk-close></button>\r\n\r\n        <span class=\"material-icons-round reason-icon\">\r\n            contact_support\r\n        </span>\r\n        <!-- <div class=\"uk-margin uk-text-left\">\r\n            <label class=\"uk-form-label primary-label \" for=\"form-stacked-select\">Select Reason</label>\r\n            <div class=\"uk-form-controls\">\r\n                <select class=\"uk-select primary-select\" id=\"form-stacked-select\">\r\n                <option>I won't be able</option>\r\n                <option>Option 02</option>\r\n            </select>\r\n            </div>\r\n        </div> --> <br />\r\n        <p>\r\n            Confirm to cancel this order #{{order?.Id}}?\r\n        </p>\r\n        <div class=\"uk-margin uk-text-left\">\r\n            <button class=\"uk-button cancelled-btn uk-width-1-1\" (click)=\"cancelOrder()\">Confirm & Cancel</button>\r\n\r\n        </div>\r\n\r\n    </div>\r\n</div>","<div class=\"uk-container uk-container-xlarge uk-padding-remove main-container\">\r\n    <app-mb-header-nav [title]=\"'Order'\" [hasActions]=\"false\"></app-mb-header-nav>\r\n\r\n    <ngx-spinner [name]=\"loadSpinner\" [fullScreen]=\"false\">\r\n    </ngx-spinner>\r\n\r\n    <div class=\"uk-container uk-container-xlarge details-container\" *ngIf=\"order != null\">\r\n        <p class=\"order-id \">Order ID : #{{ order?.Id }}</p>\r\n\r\n        <div class=\"order-status uk-padding-small\">\r\n\r\n            <p class=\"ordered-date uk-margin-small-bottom\">Order placed on {{ order?.OrderDate | date: 'MMM-d, yyyy hh:mm a'}}</p>\r\n\r\n            Order |<span class=\"order-type\"> Delivery</span>\r\n            <p class=\"delivery-time uk-margin-small-bottom\">Delivery Time  </p>\r\n            <p class=\"placed-time uk-margin-small\">{{ order?.TimePeriodText }}</p>\r\n            <div class=\"current-status\" [class]=\"orderNotCancelledOrRejected ? 'success-stage' : 'cancelled-stage'\">\r\n                <table class=\"uk-table uk-table-small uk-text-left uk-table-divider uk-margin-remove\">\r\n\r\n                    <tbody>\r\n                        <tr>\r\n                            <td class=\"icon\"><span class=\"dsc-icon\">\r\n                                </span></td>\r\n                            <td class=\"delivery-status\">Order {{ orderStatuses[order?.OrderState ??\r\n                                0].name }} <br>\r\n                                <span>Your order has been {{ orderStatuses[order?.OrderState ?? 0].name\r\n                                    }}</span>\r\n                            </td>\r\n                            <td uk-toggle=\"target: #order-track\" class=\"track-delivery uk-text-center\">\r\n\r\n                                <span class=\"material-icons-round\">\r\n                                    location_on\r\n                                </span> <br> Track\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <p *ngIf=\"orderNotCancelledOrRejected\" class=\"cancel-grid\"><a uk-toggle=\"target: #cancelled-reason\" class=\"cancel-button\">Cancelled this\r\n                    order</a></p>\r\n        </div>\r\n        <div class=\"ordered-grid\">\r\n            <table class=\"uk-table products-table uk-text-left uk-table-small uk-table-divider uk-margin-remove\">\r\n                <tbody>\r\n\r\n                    <ng-container *ngFor=\"let purchase of order?.Purchases\">\r\n                        <ng-container *ngIf=\"purchase.TotalQuantity > 0\">\r\n                            <tr>\r\n                                <td class=\"product-image\">\r\n                                    <img [attr.src]=\"assetsUrl + '/products/atta-ashirvad.jpg'\" alt=\"\">\r\n                                </td>\r\n                                <td class=\"product-name\">\r\n                                    {{ purchase?.ProductName }} <br>\r\n                                    <span class=\"products-qty\">{{ purchase?.Volume }} {{ purchase?.UnitType?.Acronym }}\r\n                                        x {{ purchase?.TotalQuantity }}</span> <br>\r\n                                    <span class=\"mrp-price\"><span class=\"r-symbol\">₹</span>{{ purchase?.Total | number:\r\n                                        '1.1-1' }}</span>\r\n                                    <span class=\"price\"><span class=\"r-symbol\">₹</span>{{ purchase?.DiscPrice | number:\r\n                                        '1.1-1' }}</span> <span class=\"item-qty\"> x 1</span>\r\n                                </td>\r\n                                <td class=\"uk-text-right\"><span class=\"total-price\"><span\r\n                                            class=\"r-symbol\">₹</span>{{ purchase?.Total | number: '1.1-1' }}</span>\r\n                                </td>\r\n                            </tr>\r\n                        </ng-container>\r\n                    </ng-container>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n        <div class=\"uk-card invoice-grid uk-padding-small uk-card-body\">\r\n\r\n\r\n            <p class=\"invoice-header\">delivery details</p>\r\n\r\n            <table class=\"uk-table uk-table-small uk-margin-remove invoice-table uk-table-divider\">\r\n\r\n                <tbody>\r\n                    <tr>\r\n                        <td>Fullname</td>\r\n                        <td>{{ order?.Address?.FullName }}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Address</td>\r\n                        <td>{{ order?.Address?.AddressLine1 + \", \" + order?.Address?.AddressLine2 }}\r\n                            <ng-container *ngIf=\"order?.Address?.LandMark != ''\">\r\n                                ({{ order?.Address?.LandMark }})\r\n                            </ng-container>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Pincode</td>\r\n                        <td>\r\n                            <ng-container *ngIf=\"order?.Address?.AreaCode != null \">- {{ order?.Address?.AreaCode }}\r\n                            </ng-container>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Phone</td>\r\n                        <td>\r\n                            <ng-container *ngIf=\"order != null\">+91-{{ order?.Address?.PhoneNumber }}\r\n                            </ng-container>\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n            <button class=\"uk-button uk-float-right uk-margin-small-top print-button uk-button-small\"><span\r\n                    class=\"material-icons-outlined\">\r\n                    print\r\n                </span> View Invoice</button>\r\n        </div>\r\n        <div class=\"uk-card invoice-grid uk-padding-small uk-card-body\">\r\n            <p class=\"invoice-header\">Payment Summary</p>\r\n            <table class=\"uk-table uk-table-small uk-margin-remove invoice-table uk-table-divider\">\r\n\r\n                <tbody>\r\n                    <tr class=\"fullname\">\r\n                        <td>Cart Total</td>\r\n                        <td><span class=\"r-symbol\">₹</span> {{ actualTotalPrice(order?.Purchases) |\r\n                            number: '1.1-1' }}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Discount</td>\r\n                        <td class=\"discount-price\"><span class=\"r-symbol\">₹</span> {{ order?.TotalBill |\r\n                            number: '1.1-1' }}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Delivery</td>\r\n                        <td>Free</td>\r\n                    </tr>\r\n                    <tr class=\"total-amount\">\r\n                        <td>Payable Amount</td>\r\n                        <td><span class=\"r-symbol\">₹</span> {{ order?.TotalBill | number: '1.1-1' }}</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    </div>\r\n\r\n</div>\r\n\r\n\r\n\r\n\r\n<app-mb-order-track [order]=\"order\" [orderStatuses]=\"orderStatuses\"></app-mb-order-track>\r\n<app-mb-order-cancel-reason [order]=\"order\"></app-mb-order-cancel-reason>","import { Component, Injector, OnInit } from '@angular/core';\r\nimport { enumToKeyValueArray, OrderStatus, ResponseObject } from 'src/app/models/common';\r\nimport { Order, OrderDetail, OrderFilter } from 'src/app/models/order';\r\nimport { OrderService } from 'src/app/services/api-services/order.service';\r\nimport { BaseComponent } from 'src/app/shared/base.component';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-mb-order-details',\r\n  templateUrl: './mb-order-details.component.html',\r\n  styleUrls: ['./mb-order-details.component.scss']\r\n})\r\nexport class MbOrderDetailsComponent extends BaseComponent implements OnInit {\r\n\r\n  assetsUrl: string = environment.assetsUrl;\r\n  \r\n  public orderStatuses: any = enumToKeyValueArray(OrderStatus);\r\n    \r\n  id: number;\r\n\r\n  order?: Order;\r\n \r\n  get orderNotCancelledOrRejected(): boolean {\r\n    return !(this.order?.OrderState == 6 || this.order?.OrderState == 7)\r\n  }\r\n\r\n  constructor(protected injector: Injector, protected orderService: OrderService) { super(injector); }\r\n\r\n  ngOnInit(): void {\r\n   \r\n    let pos = this.router.url.lastIndexOf('/') + 1;\r\n    let orderQuery = this.router.url.substring(pos, this.router.url.length);\r\n    if (!isNaN(<any>orderQuery)) {\r\n      let id = parseInt(orderQuery);\r\n      this.orderService.getOrderInfo(id).subscribe((res: ResponseObject<Order>) => {\r\n        console.log(res.Data);\r\n        let order = res.Data;\r\n        order?.Purchases.forEach((item: OrderDetail) => {\r\n          item.ProductImage.ImageUrl = item.ProductImage.ImageUrl.replace('~', '');\r\n        })\r\n        this.order = order;\r\n        this.initOrderStatus(this.order?.OrderState ?? 0);\r\n      })\r\n    } else {\r\n      this.apiRequestService.showMessage(<ResponseObject<any>>{\r\n        Message: \"Invalid Order Id\"\r\n      });\r\n      this.router.navigate([{ outlets: { action: ['my-orders'], primary: [] } }]);\r\n    }\r\n  }\r\n\r\n  initOrderStatus(orderStatus: OrderStatus) {\r\n    let found: boolean = false;\r\n    let excludeList = [OrderStatus.All, OrderStatus.Placed, OrderStatus.Cancelled, OrderStatus.Rejected];\r\n    for (let status of this.orderStatuses) {\r\n      status.done = false;\r\n      status.done = !found;\r\n      status.show = !excludeList.includes(status.id);\r\n      if (status.id == orderStatus)\r\n        found = true;\r\n    }\r\n  }\r\n \r\n  actualTotalPrice(order: any[] | undefined) {\r\n    let sum = 0;\r\n    order?.forEach(i => sum += i.Price * i.TotalQuantity);\r\n    return sum;\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-mb-order-success',\n  templateUrl: './mb-order-success.component.html',\n  styleUrls: ['./mb-order-success.component.scss']\n})\nexport class MbOrderSuccessComponent implements OnInit {\n\n  constructor(private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  navigateMyOrders() {\n    this.router.navigate(['..','my-orders'], { replaceUrl: true })\n  }\n\n  navigateHome(){\n    this.router.navigate([''], { replaceUrl: true })\n  }\n}\n","\n   \n<div class=\"uk-container uk-container-xlarge uk-padding-remove success-container\">\n\n\n    <div class=\"icon-container\">\n        <div class=\"check-container\">\n            <div class=\"check-background\">\n                <svg viewBox=\"0 0 65 51\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M7 25L27.3077 44L58.5 7\" stroke=\"white\" stroke-width=\"13\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n          </svg>\n            </div>\n            <div class=\"check-shadow\"></div>\n        </div>\n    </div>\n    <div class=\"details-grid \">\n        <div class=\"details\">\n            <p class=\"success-title\">Your Order has been placed</p>\n            <p class=\"success-subtitle \">Your order has been placed and is on it's way to being processed</p>\n            <a (click)=\"navigateMyOrders()\" class=\"uk-button track-btn\"><span class=\"material-icons-outlined\">\n              local_shipping\n              </span> Track Order</a>\n            <a (click)=\"navigateHome()\" class=\"continue\">Continue Shopping</a>\n        </div>\n    </div>\n</div>","<!-- This is the modal -->\r\n<div id=\"order-track\" uk-modal>\r\n    <div\r\n        class=\"uk-modal-dialog uk-modal-body uk-animation-slide-bottom tracking-modal uk-text-center uk-position-bottom\">\r\n        <p class=\"setting-title\">Track Order <span class=\"order-id\"> <br> Order ID #{{order?.Id}}</span></p>\r\n        <button class=\"uk-modal-close-default\" type=\"button\" uk-close></button>\r\n\r\n        <div class=\"order-track\">\r\n            <ng-container *ngFor=\"let status of orderStatuses\">\r\n                <div class=\"order-track-step\" *ngIf=\"status.show\">\r\n                    <div class=\"order-track-status\">\r\n                        <span class=\"order-track-status-line status-undone\"\r\n                            [class]=\"status.done ? 'status-done' : 'status-todo'\"></span>\r\n                        <span class=\"order-track-status-dot \"\r\n                            [class]=\"status.done ? 'status-done' : 'status-todo'\"></span>\r\n                    </div>\r\n                    <div class=\"order-track-text\">\r\n                        <p class=\"order-track-text-stat\"> {{ status.name }}</p>\r\n                        <!-- <span class=\"order-track-text-sub\">1st November, 2019</span> -->\r\n                    </div>\r\n                </div>\r\n            </ng-container>\r\n             \r\n        </div>\r\n    </div>\r\n</div>","import { Component, Input, OnInit } from '@angular/core';\r\nimport { enumToKeyValueArray, OrderStatus } from 'src/app/models/common';\r\nimport { Order } from 'src/app/models/order';\r\n\r\n@Component({\r\n  selector: 'app-mb-order-track',\r\n  templateUrl: './mb-order-track.component.html',\r\n  styleUrls: ['./mb-order-track.component.scss']\r\n})\r\nexport class MbOrderTrackComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  @Input()\r\n  order?: Order;\r\n\r\n  @Input()\r\n  orderStatuses: any[];\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","import { Component, Injector, OnInit } from '@angular/core';\r\nimport { Location } from '@angular/common';\r\nimport { FormGroup, Validators } from '@angular/forms';\r\nimport { AuthenticationService } from 'src/app/auth/_services/authentication.service';\r\nimport { ResponseObject } from 'src/app/models/common';\r\nimport { BaseComponent } from 'src/app/shared/base.component';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-mb-otp',\r\n  templateUrl: './mb-otp.component.html',\r\n  styleUrls: ['./mb-otp.component.scss']\r\n})\r\nexport class MbOtpComponent extends BaseComponent implements OnInit {\r\n  fb: any;\r\n  apiRequestService: any;\r\n\r\n  get phoneNumber(): string {\r\n    return this.authService.currentUserValue?.userName;\r\n  }\r\n\r\n  get isRequiredOTP(): boolean {\r\n    return this.authService.currentUserValue?.requireOTP === \"True\";\r\n  }\r\n\r\n  formInstance: FormGroup = this.fb.group({\r\n    OtpCode: ['', [Validators.required]]\r\n  })\r\n\r\n  constructor(protected injector: Injector, private location: Location,\r\n    private authService: AuthenticationService) {\r\n    super(injector);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.spinnerOptions.bdColor = 'rgba(0,0,0,0.5)';\r\n    this.spinnerOptions.color = 'rgba(256,256,256,0.8)';\r\n  }\r\n\r\n  ngOnViewUpdated() {\r\n\r\n  }\r\n\r\n  back() {\r\n    this.location.back();\r\n  }\r\n\r\n\r\n  submitOtp() {\r\n    let otp = this.formInstance.get(\"OtpCode\")?.value;\r\n    this.showFullSpinner();\r\n    this.apiRequestService.get(environment.apiUrl + '/auth/verify-otp/' + otp).subscribe((res: ResponseObject<any>) => {\r\n      this.formInstance.reset();\r\n      this.hideFullSpinner();\r\n      this.authService.updateRequireOTP(false);\r\n      this.router.navigate(['/'], { replaceUrl: true });\r\n    })\r\n  }\r\n}\r\n","<div class=\"uk-container uk-container-xlarge uk-padding-remove login-container\">\r\n\r\n    \r\n    <ngx-spinner [name]=\"loadSpinner\" [fullScreen]=\"false\">\r\n    </ngx-spinner>\r\n\r\n    <nav class=\"uk-navbar-container header-nav\" uk-navbar>\r\n\r\n        <div class=\"uk-navbar-left\">\r\n\r\n            <ul class=\"uk-navbar-nav\">\r\n                <li class=\"uk-active\" (click)=\"back()\"><a><span class=\"material-icons-outlined\">\r\n    keyboard_backspace\r\n    </span></a></li>\r\n            </ul>\r\n\r\n        </div>\r\n\r\n    </nav>\r\n    <div class=\"otp-grid uk-position-center\">\r\n\r\n\r\n        <p class=\"otp-title\">Phone number verification</p>\r\n        <p class=\"otp-subtitle\">Enter 4 digit code sent to your phone </p>\r\n        <p class=\"login-number\">+91-{{ phoneNumber }}</p>\r\n        <form class=\"uk-grid-small\" [formGroup]=\"formInstance\" (ngSubmit)=\"submitOtp()\" uk-grid>\r\n            <div class=\"uk-width-1-1\">\r\n                <input [formControlName]=\"'OtpCode'\" placeholder=\"Enter one time password\" maxlength=\"2\" class=\"uk-input otp-input\" type=\"number\">\r\n            </div>\r\n            <div class=\"uk-width-1-1\">\r\n                <button type=\"submit\" class=\"uk-button otp-button uk-width-1-1\">Continue</button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>\r\n","<activity>\r\n    <app-mb-header-nav [title]=\"'Place Order'\"></app-mb-header-nav>\r\n    <ngx-spinner [name]=\"loadSpinner\" [fullScreen]=\"false\">\r\n    </ngx-spinner>\r\n  \r\n    <div class=\"place-order-container\">\r\n\r\n        <div class=\"uk-container uk-container-xlarge subcontainer\">\r\n            <form [formGroup]=\"formInstance\">\r\n                <ul class=\"uk-subnav uk-subnav-pill category-switcher uk-flex-center\"\r\n                    uk-switcher=\"animation: uk-animation-fade\">\r\n                    <li [class.uk-active]=\"index == 0\"><a (click)=\"index = 0;\"><span class=\"material-icons-outlined\">\r\n                                delivery_dining\r\n                            </span>Delivery</a></li>\r\n                    <li [class.uk-active]=\"index == 1\"><a (click)=\"index = 1;\"><span class=\"material-icons-outlined\">\r\n                                shopping_cart_checkout\r\n                            </span>Pick Up</a></li>\r\n                </ul>\r\n\r\n                <ul class=\"uk-switcher uk-margin\">\r\n                    <li>\r\n                        <p class=\"delivery-title\">Select Delivery Address</p>\r\n                        <div class=\"address-grid\">\r\n\r\n                            <ng-container *ngIf=\"addresses.length\">\r\n                                <table class=\"uk-table uk-table-small uk-table-divider delivery-address\">\r\n\r\n                                    <tbody>\r\n                                        <tr>\r\n                                            <td>\r\n                                                <span class=\"person-name\">\r\n                                                    {{ defaultAddress?.FullName }}\r\n                                                </span>\r\n                                                <span class=\"person-no\">\r\n                                                    {{ defaultAddress?.PhoneNumber}}\r\n                                                </span> <br>\r\n                                                <span class=\"person-address\">\r\n                                                    {{ defaultAddress?.AddressLine1 }}\r\n                                                </span>\r\n                                            </td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n\r\n                                <a [routerLink]=\"['/my-addresses']\" [queryParams]=\"returnUrl\"\r\n                                    class=\"uk-button change-btn\">Change </a>\r\n                            </ng-container>\r\n                            <ng-container *ngIf=\"!addresses.length\">\r\n                                <button type=\"button\" [routerLink]=\"['/address']\" [queryParams]=\"returnUrl\"\r\n                                    class=\"uk-button uk-flex-right address-btn uk-width-1-1\">Add\r\n                                    Address</button>\r\n                            </ng-container>\r\n                        </div>\r\n\r\n\r\n                    </li>\r\n                    <li>\r\n                        <p class=\"delivery-title\">Select Delivery Address</p>\r\n                        <div class=\"address-grid pickup\">\r\n                            <table class=\"uk-table uk-table-small uk-table-divider delivery-address\">\r\n\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td class=\"pickup\"> <span class=\"person-address\">Magdoom colony azad street\r\n                                                bhatkal</span></td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n\r\n                        </div>\r\n\r\n\r\n                    </li>\r\n                </ul>\r\n                <div class=\"uk-grid-small uk-margin-small uk-margin-medium-bottom\" uk-grid>\r\n                    <div class=\"uk-width-1-1\">\r\n                        <label class=\"uk-form-label primary-label\" for=\"form-stacked-text\">Delivery Time </label>\r\n\r\n\r\n                        <div class=\"uk-button-group uk-width-1-1\">\r\n                            <button class=\"uk-button time-btn uk-width-1-1\" (click)=\"openTimeSelectionModal()\">\r\n                                <ng-container *ngIf=\"selectedTimeSlot != null\">\r\n                                    {{ getDay(selectedTimeSlot?.WeekDayId) | date: 'dd-MMM EEEE' }} - {{\r\n                                    tConvert(selectedTimeSlot?.FromHours,\r\n                                    selectedTimeSlot?.FromMinutes) }} to {{ tConvert(selectedTimeSlot?.ToHours,\r\n                                    selectedTimeSlot?.ToMinutes) }}\r\n                                </ng-container>\r\n                            </button>\r\n                            <div class=\"uk-inline\">\r\n                                <button class=\"uk-button chev-btn\" type=\"button\"><span class=\"material-icons-outlined \">\r\n                                        chevron_right\r\n                                    </span></button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <label *ngIf=\"currentWalletBalance > 0\">\r\n                    <div class=\"wallet-grid\">\r\n                        <table class=\"uk-table uk-table-small uk-table-divider\">\r\n\r\n                            <tbody>\r\n                                <tr class=\"wallet-tr\">\r\n                                    <td><input [formControlName]=\"'UseWallet'\" class=\"uk-checkbox uk-align-center\"\r\n                                            type=\"checkbox\">\r\n                                    </td>\r\n                                    <td class=\"wallet-details\">Pay with MWallet <br> <span>Available Balance <span\r\n                                                class=\"r-symbol\">₹{{ currentWalletBalance }}</span> </span></td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </label>\r\n                <div class=\"invoice-grid uk-light\">\r\n                    <p class=\"price-heading uk-margin-small\">Price Detail</p>\r\n                    <table class=\"uk-table uk-table-small invoice-table uk-table-divider uk-margin-remove\">\r\n\r\n                        <tbody>\r\n                            <tr>\r\n                                <td class=\"invoice-info\">Price ({{ cartCount }} Items)</td>\r\n                                <td class=\"invoice-details\"><span class=\"r-symbol\">\r\n                                        ₹</span>{{cartTotal}}\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td class=\"invoice-info\">Delivery Charges</td>\r\n                                <td class=\"invoice-details\"><span class=\"free-del\">\r\n                                        FREE</span></td>\r\n                            </tr>\r\n                            <tr *ngIf=\"useWallet && currentWalletBalance > 0\">\r\n                                <td class=\"invoice-info\">Wallet Amount</td>\r\n                                <td class=\"invoice-details\"><span class=\"r-symbol\">\r\n                                        ₹</span>{{ cartTotal <= currentWalletBalance ? cartTotal : currentWalletBalance\r\n                                        | number: '1.1-2' }}</td>\r\n                            </tr>\r\n                            <tr class=\"total\">\r\n                                <td class=\"invoice-info\">Total Payable</td>\r\n                                <td class=\"invoice-details\"><span class=\"r-symbol\">\r\n                                        ₹</span>{{ !useWallet ? cartTotal : (cartTotal <= currentWalletBalance ? 0 :\r\n                                        cartTotal - currentWalletBalance) | number: '1.1-2' }}/-</td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                    <!-- <p class=\"saving-title uk-margin-small-top\">Total savings on this orders <span\r\n                        class=\"uk-float-right  \"><span class=\"r-symbol\">\r\n                            ₹</span>{{ !useWallet ? cartTotal : (cartTotal <= currentWalletBalance ? 0 : cartTotal -\r\n                            currentWalletBalance) | number: '1.1-2' }}/-</span>\r\n                </p> -->\r\n                </div>\r\n\r\n            </form>\r\n        </div>\r\n\r\n        <div class=\"uk-container uk-container-xlarge btn-container\"> \r\n            <button type=\"submit\" class=\"uk-button checkout-btn\" (click)=\"submit()\">Check out</button>\r\n        </div>\r\n    </div>\r\n</activity>","import { Component, Injector, Input, NgZone, OnInit } from '@angular/core';\r\nimport { AbstractControl, FormGroup, Validators } from '@angular/forms';\r\nimport { AuthenticationService } from 'src/app/auth/_services/authentication.service';\r\nimport { AddressesService } from 'src/app/services/api-services/address.service';\r\nimport { PlaceOrderService } from 'src/app/services/api-services/place-order.service';\r\nimport { Address, AddressFilter } from 'src/app/models/address';\r\nimport { ProductsService } from 'src/app/services/api-services/products.service';\r\nimport { CartService } from 'src/app/services/cart.service';\r\nimport { BaseComponent } from 'src/app/shared/base.component';\r\nimport { ModalType, PaymentType, ResponseObject, Result } from 'src/app/models/common';\r\nimport { ProductFilter, ProductVariant } from 'src/app/models/product';\r\nimport { Cart, CartProductView } from 'src/app/models/cart';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Order } from 'src/app/models/order';\r\nimport { WalletService } from 'src/app/services/api-services/wallet.service';\r\nimport { Wallet } from 'src/app/models/wallet';\r\n\r\ndeclare var Razorpay: any;\r\ndeclare var UIkit: any;\r\n\r\n@Component({\r\n  selector: 'app-mb-place-orders',\r\n  templateUrl: './mb-place-orders.component.html',\r\n  styleUrls: ['./mb-place-orders.component.scss']\r\n})\r\nexport class MbPlaceOrdersComponent extends BaseComponent implements OnInit {\r\n\r\n  razorPay: any;\r\n\r\n  currentWalletBalance: number;\r\n\r\n  order: Order = new Order();\r\n\r\n  selectedTimeSlot: any;\r\n\r\n  productCartList: CartProductView[] = [];\r\n\r\n  razorPayOptions: any = environment.razorPayOptions;\r\n\r\n  addresses: Address[] = [];\r\n\r\n  paymentMethod: number = PaymentType.OnlinePayment;\r\n\r\n  razorPayModal = {\r\n    ondismiss: this.razorPayDismiss.bind(this),\r\n    escape: true,\r\n    backdropclose: false\r\n  };\r\n\r\n  formInstance: FormGroup = this.fb.group({\r\n    RelDay: [0, [Validators.required, Validators.max(1)]],\r\n    TimePeriod: [1, [Validators.required]],\r\n    IsDelivery: [true],\r\n    UseWallet: [false],\r\n  });\r\n\r\n  get cartCount(): number {\r\n    return this.cartService.getCartCount();\r\n  }\r\n\r\n  get relDay(): AbstractControl | null {\r\n    return this.formInstance.get(\"RelDay\");\r\n  }\r\n\r\n  get useWallet(): boolean {\r\n    return this.formInstance.get(\"UseWallet\")?.value;\r\n  };\r\n\r\n  get timePeriod(): AbstractControl | null {\r\n    return this.formInstance.get(\"TimePeriod\");\r\n  }\r\n\r\n  @Input() set active(_active: boolean) {\r\n    if (_active) {\r\n      this.ngOnInit();\r\n    }\r\n  }\r\n\r\n  get cartTotal(): number {\r\n    return this.productCartList.reduce((sum, item) => sum + (item.Quantity * item.ProductVariant.Price), 0);\r\n  }\r\n\r\n  get cartItems(): Cart[] {\r\n    return this.cartService.getCartList();\r\n  }\r\n\r\n  get defaultAddress(): Address | null {\r\n    if (this.addresses.length > 0) {\r\n      let addresses = this.addresses.filter(i => i.IsDefault);\r\n      if (addresses == null || addresses.length > 0) {\r\n        return addresses[0];\r\n      }\r\n      else {\r\n        return this.addresses[0];\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  @Input()\r\n  set index(ind: number) {\r\n    this.formInstance.patchValue({ IsDelivery: ind == 0 });\r\n    if (this.switcher) {\r\n      setTimeout(() => {\r\n        this.switcher.show(ind);\r\n      }, 300);\r\n    }\r\n  }\r\n\r\n  get index(): number {\r\n    return this.formInstance.get(\"IsDelivery\")?.value === true ? 0 : 1;\r\n  }\r\n\r\n  get switcher(): any {\r\n    return UIkit.switcher('#switcher-panel');\r\n  };\r\n\r\n  constructor(injector: Injector,\r\n    private authService: AuthenticationService,\r\n    private addressService: AddressesService,\r\n    private cartService: CartService,\r\n    private productService: ProductsService,\r\n    private walletService: WalletService,\r\n    private zone: NgZone,\r\n    private placeOrderService: PlaceOrderService) {\r\n    super(injector);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    if (this.switcher) {\r\n      setTimeout(() => {\r\n        this.switcher.show(this.index);\r\n      }, 200);\r\n    }\r\n\r\n    let filter = new AddressFilter();\r\n    filter.UserId = this.authService.currentUserValue.userId;\r\n    this.addressService.getAddressList(filter).subscribe((res: ResponseObject<any>) => {\r\n      console.log(\"Addresses: \")\r\n      this.addresses = res.Data;\r\n    });\r\n\r\n    this.placeOrderService.orderTimeSlotStatus.subscribe((res: any) => {\r\n      console.log(\"Status of selection: \" + JSON.stringify(res));\r\n      if (res != null) {\r\n        this.selectedTimeSlot = res;\r\n        this.timePeriod?.setValue(this.selectedTimeSlot.TimePeriodId);\r\n        this.placeOrderService.setSelectedTimeSlot(null);\r\n      }\r\n    });\r\n\r\n    this.loadProducts();\r\n  }\r\n\r\n  loadProducts() {\r\n\r\n    if (this.cartItems.length == 0) {\r\n      this.productCartList = [];\r\n      return;\r\n    }\r\n\r\n    this.showSpinner();\r\n\r\n    let filter: ProductFilter = new ProductFilter();\r\n    filter.Ids = this.cartItems.map(i => i.ProductVariantId).join(',');\r\n    this.productService.getProductVariantList(filter).subscribe((res: ResponseObject<ProductVariant[]>) => {\r\n      let productCartList: CartProductView[] = [];\r\n      let variantList = res.Data ?? [];\r\n      variantList.forEach(vItem => {\r\n        this.cartItems.forEach(cItem => {\r\n          if (vItem.Id == cItem.ProductVariantId) {\r\n            productCartList.push({\r\n              Quantity: cItem.Quantity,\r\n              ProductVariantId: cItem.ProductVariantId,\r\n              ProductVariant: vItem\r\n            })\r\n          }\r\n        });\r\n      })\r\n      this.productCartList = productCartList;\r\n      this.hideSpinner();\r\n    });\r\n    this.walletService.getWalletList().subscribe(res => {\r\n      let walletList: Wallet[] = res.Data;\r\n      let currentBalance = 0;\r\n      walletList.forEach(item => currentBalance += item.Amount);\r\n      this.currentWalletBalance = currentBalance;\r\n      if (this.currentWalletBalance > 0) this.formInstance.patchValue({ \"UseWallet\": true })\r\n    });\r\n  }\r\n\r\n  submit() {\r\n\r\n    this.showFullSpinner();\r\n\r\n    let url = environment.apiUrl + \"/order/initiate-order\";\r\n\r\n    this.order.RelDay = this.relDay?.value;\r\n    this.order.TimePeriod = this.timePeriod?.value;\r\n    this.order.IsDelivery = this.index == 0;\r\n    this.order.OrderDate = new Date();\r\n    this.order.PaymentMode = this.paymentMethod;\r\n    this.order.Purchases = [];\r\n    this.order.UseWallet = this.useWallet;\r\n\r\n    let isDirectPlace = this.order.UseWallet && this.cartTotal <= this.currentWalletBalance;\r\n\r\n    if (this.order.PaymentMode == PaymentType.CashOnDelivery || isDirectPlace) {\r\n\r\n      this.order.Purchases = this.cartItems;\r\n      this.placeOrder(this.order, () => {\r\n        this.hideFullSpinner()\r\n        this.cartService.clearList();\r\n        this.orderPlacedSuccessfully();\r\n      });\r\n\r\n    } else {\r\n      let sum = 0;\r\n      this.order.Purchases.forEach(item => {\r\n        let amount = (item.Price - ((item.Price * item.Discount / 100))) * item.Quantity;\r\n        sum += amount;\r\n      })\r\n      let request = {\r\n        UseWallet: this.useWallet,\r\n        CartList: this.cartItems\r\n      }\r\n      this.apiRequestService.post(url, request).subscribe(res => {\r\n        this.payment(res.Data.RazorPayOrderId, res.Data.Amount);\r\n      });\r\n    }\r\n  }\r\n\r\n  placeOrder(order: Order, callback?: Function) {\r\n\r\n    let url = environment.apiUrl + \"/order/place-order\";\r\n    this.apiRequestService.post(url, order).subscribe(res => {\r\n      console.log(res);\r\n      if (callback) {\r\n        callback();\r\n      }\r\n    });\r\n  }\r\n\r\n  razorPayDismiss() {\r\n    this.router.navigate(['/'], { replaceUrl: true });\r\n  }\r\n\r\n  razorPayHandler(response: any) {\r\n    this.order.PaymentId = response.razorpay_payment_id;\r\n    this.order.PaymentOrderId = response.razorpay_order_id;\r\n    this.order.PaymentSignature = response.razorpay_signature;\r\n\r\n    this.showFullSpinner()\r\n    this.placeOrder(this.order, () => {\r\n      this.cartService.clearList();\r\n      this.orderPlacedSuccessfully();\r\n    });\r\n  }\r\n\r\n  orderPlacedSuccessfully() {\r\n\r\n    this.hideFullSpinner();\r\n\r\n    // this.apiRequestService.showMessage({\r\n    //   Message: \"Your order Is Placed Successfully\", Result: Result.Success,\r\n    //   Data: 0,\r\n    //   IsSuccess: true\r\n    // })\r\n    this.zone.run(() => {\r\n      this.router.navigate(['order-success']);\r\n    });\r\n\r\n  }\r\n\r\n  payment(orderId: string, amount: number) {\r\n\r\n    this.hideFullSpinner();\r\n\r\n    var ref = this;\r\n    this.razorPayOptions.amount = amount;\r\n    this.razorPayOptions.order_id = orderId;\r\n    this.razorPayOptions.handler = this.razorPayHandler.bind(this);\r\n    this.razorPayOptions.modal = this.razorPayModal;\r\n    this.razorPayOptions.prefill = {\r\n      name: \"Sauban Sada\",\r\n      email: \"sadasauban123@gmail.com\",\r\n      contact: \"5858585858\"\r\n    };\r\n\r\n    this.razorPay = new Razorpay(this.razorPayOptions);\r\n\r\n    this.razorPay.modal = this.razorPayModal;\r\n\r\n    this.razorPay.open();\r\n  }\r\n\r\n  openTimeSelectionModal() {\r\n    let request = { open: false, modalType: ModalType.TimingSelection, data: null };\r\n    this.utilities.openModalDialog(request);\r\n  }\r\n}\r\n","<div class=\"uk-text-center product-grid uk-grid-collapse uk-grid-match uk-margin-small-bottom\" uk-grid\r\n    [routerLink]=\"'/product/' + product.Id\">\r\n\r\n    <div class=\"uk-width-1-3\">\r\n        <div class=\"uk-card uk-padding-remove uk-card-body\">\r\n            <img class=\"product-img uk-position-center\" [attr.src]=\"imgUrl + product.ProductImages[0]\"\r\n                [alt]=\"product.ProductName\">\r\n            <div class=\"uk-overlay uk-light uk-position-top-left\" style=\"padding: 4px;padding-left:8px;\">\r\n                <span class=\"uk-badge   uk-margin-small offer-badge\" *ngIf=\"selectedProduct?.DiscountPercentage != 0\">\r\n                    {{ selectedProduct?.DiscountPercentage }}% OFF\r\n                </span>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"uk-width-expand\">\r\n        <div class=\"uk-card product-details-grid uk-card-body uk-text-left\">\r\n            <p class=\"product-name uk-margin-remove\">{{ product?.ProductName }}</p>\r\n            <p class=\"product-price uk-margin-remove\"><span class=\"offer-price\">\r\n                    <span class=\"r-symbol\">₹</span> {{ selectedProduct?.Price | number: '1.1-2' }}</span>\r\n\r\n                <span class=\"mrp-price\"><span class=\"r-symbol\">₹ </span>{{ selectedProduct?.Mrp }}</span>\r\n            </p>\r\n            <table class=\"uk-table uk-table-small uk-table-divider btn-table \">\r\n\r\n                <tbody>\r\n                    <tr>\r\n                        <td> <button (click)=\"openProductVariants($event)\"\r\n                                class=\"uk-button uk-button-small variant-btn\">\r\n                                {{ selectedProduct?.Volume }} {{ selectedProduct?.MeasureName }} <span\r\n                                    class=\"material-icons-round\">\r\n                                    chevron_right\r\n                                </span>\r\n                            </button></td>\r\n                        <td>\r\n                            <button *ngIf=\"cartCount == 0\" class=\"uk-button uk-float-right uk-button-small cart-btn\"\r\n                                (click)=\"addToCart($event)\">\r\n                                Add<span class=\"material-icons-round\">\r\n                                    shopping_cart\r\n                                </span>\r\n                            </button>\r\n                            <span class=\"uk-float-right\" style=\"vertical-align: middle;\" *ngIf=\"cartCount > 0\">\r\n\r\n                                <span class=\"material-icons-round price-addon-btn\" (click)=\"removeFromCart($event)\">\r\n                                    remove_circle_outline\r\n                                </span>\r\n                                <input disabled type=\"text\" name=\"\" id=\"\" [value]=\"cartCount\"\r\n                                    class=\"uk-input uk-form-small price-addon-qty\" maxlength=\"2\">\r\n\r\n                                <span class=\"material-icons-round price-addon-btn\" (click)=\"addToCart($event)\">\r\n                                    add_circle_outline\r\n                                </span>\r\n                            </span>\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, Input, OnInit } from '@angular/core';\r\nimport { ModalType } from 'src/app/models/common';\r\nimport { Product, ProductVariant } from 'src/app/models/product';\r\nimport { CartService } from 'src/app/services/cart.service';\r\nimport { UtilitiesService } from 'src/app/services/utilities.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-mb-product-grids',\r\n  templateUrl: './mb-product-grids.component.html',\r\n  styleUrls: ['./mb-product-grids.component.scss']\r\n})\r\nexport class MbProductGridsComponent implements OnInit {\r\n\r\n\r\n  @Input() public product!: Product;\r\n\r\n\r\n  get selectedIndex(): number {\r\n    let selectedIndex = 0;\r\n    for (let index = 0; index < this.product?.ProductVariants?.length; index++) {\r\n      let count = this.cartService.getProductCartCount(this.product.ProductVariants[index].Id);\r\n      if (count > 0) {\r\n        selectedIndex = index;\r\n        break;\r\n      }\r\n    }\r\n    return selectedIndex;\r\n  }\r\n\r\n  get selectedProduct(): ProductVariant | undefined {\r\n    if (this.product != null && this.product.ProductVariants.length > 0) {\r\n      return this.product.ProductVariants[this.selectedIndex];\r\n    }\r\n    else return;\r\n  }\r\n\r\n  get cartCount(): number {\r\n    let count = 0;\r\n    if (this.product != null && this.product.ProductVariants?.length > 0) {\r\n      count = this.cartService.getProductCartCount(this.product.ProductVariants[this.selectedIndex].Id);\r\n    }\r\n    return count;\r\n  }\r\n\r\n  imgUrl: string = environment.uploadsUrl;\r\n\r\n  constructor(private utilities: UtilitiesService, private cartService: CartService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  openProductOverView() {\r\n    let request = { open: false, modalType: ModalType.ProductOverview, data: this.product };\r\n    // this.utilities.openModalDialog(request);\r\n  }\r\n\r\n  openProductVariants(event: any) {\r\n    event.stopPropagation();\r\n    let request = { open: false, modalType: ModalType.ProductVariant, data: this.product };\r\n    this.utilities.openModalDialog(request);\r\n  }\r\n\r\n  addToCart(event: any) {\r\n    event.stopPropagation();\r\n    this.cartService.addItem(this.product.ProductVariants[this.selectedIndex].Id);\r\n  }\r\n\r\n  removeFromCart(event: any) {\r\n    event.stopPropagation();\r\n    this.cartService.decreaseItem(this.product.ProductVariants[this.selectedIndex].Id);\r\n  }\r\n\r\n}\r\n","<div *ngIf=\"product != null\" class=\"uk-modal-dialog uk-modal-body uk-transition-slide-bottom uk-position-bottom variant-modal uk-padding-small\">\r\n    <button class=\"uk-modal-close-default\" style=\"color: black;\" type=\"button\" uk-close></button>\r\n    <div class=\"uk-modal-header uk-padding-small uk-padding-remove-left\">\r\n\r\n        <h2 class=\"uk-modal-title variant-title\">Choose Quantity</h2>\r\n        <p class=\"variant-name\"> {{ product?.ProductName }} </p>\r\n    </div>\r\n    <table class=\"uk-table uk-table-small uk-table-divider variant-table uk-margin-remove-top\">\r\n\r\n        <tbody>\r\n            <tr *ngFor=\"let item of product.ProductVariants; let i = index\">\r\n                <td claass=\"vr-img\">\r\n                    <img [attr.src]=\"imgUrl + product.ProductImages[0]\" alt=\"\">\r\n                </td>\r\n                <td class=\"vr-info\">\r\n                    <span class=\"vr-qty\">{{ item?.Volume }} {{ item?.MeasureName }}</span>\r\n                    <span class=\"vr-off\" *ngIf=\"item?.DiscountPercentage != 0\"> {{\r\n                        item?.DiscountPercentage }}% OFF</span>\r\n                    <br> <span class=\"vr-price\"><span class=\"vr-off-price\"><span class=\"r-symbol\">₹</span>{{\r\n                        item.Price }}</span>\r\n                        <span class=\"vr-mrp\"> <span class=\"r-symbol\">₹</span>{{ item.Mrp }}</span>\r\n                    </span>\r\n                </td>\r\n                <td class=\"vr-btn uk-text-right\">\r\n                    <button *ngIf=\"cartCount[i] == 0\" class=\"uk-button uk-float-right uk-button-small cart-btn\" (click)=\"addToCart(item)\">\r\n                        Add<span class=\"material-icons-round\">\r\n                            shopping_cart\r\n                        </span>\r\n                    </button>\r\n                    <span *ngIf=\"cartCount[i] > 0\" class=\"uk-float-right\" style=\"vertical-align: middle;\">\r\n\r\n                        <span class=\"material-icons-round price-addon-btn\" (click)=\"removeFromCart(item)\">\r\n                            remove_circle_outline\r\n                        </span>\r\n                        <input disabled type=\"text\" name=\"\" id=\"\" [value]=\"cartCount[i]\"\r\n                            class=\"uk-input uk-form-small price-addon-qty\" maxlength=\"2\">\r\n\r\n                        <span class=\"material-icons-round price-addon-btn\" (click)=\"addToCart(item)\">\r\n                            add_circle_outline\r\n                        </span>\r\n\r\n                    </span>\r\n                </td>\r\n            </tr>\r\n            <!-- <tr>\r\n                <td claass=\"vr-img\">\r\n                    <img src=\"assets/products/atta-ashirvad.jpg\" alt=\"\">\r\n                </td>\r\n                <td class=\"vr-info\">\r\n                    <span class=\"vr-qty\">100 GM</span> <span class=\"vr-off\">10% Off</span>\r\n                    <br> <span class=\"vr-price\"><span class=\"vr-off-price\"><span class=\"r-symbol\">₹</span>140</span>\r\n                        <span class=\"vr-mrp\"> <span class=\"r-symbol\">₹</span>120</span>\r\n                    </span>\r\n                </td>\r\n                <td class=\"vr-btn uk-text-right\">\r\n                    <button class=\"uk-button uk-float-right uk-button-small cart-btn\">add<span\r\n                            class=\"material-icons-round\">\r\n                            shopping_cart\r\n                        </span></button>\r\n                </td>\r\n            </tr>\r\n            <tr>\r\n                <td claass=\"vr-img\">\r\n                    <img src=\"assets/products/atta-ashirvad.jpg\" alt=\"\">\r\n                </td>\r\n                <td class=\"vr-info\">\r\n                    <span class=\"vr-qty\">100 GM</span> <span class=\"vr-off\">10% Off</span>\r\n                    <br> <span class=\"vr-price\"><span class=\"vr-off-price\"><span class=\"r-symbol\">₹</span>140</span>\r\n                        <span class=\"vr-mrp\"> <span class=\"r-symbol\">₹</span>120</span>\r\n                    </span>\r\n                </td>\r\n                <td class=\"vr-btn uk-text-right\">\r\n                    <button class=\"uk-button uk-float-right uk-button-small cart-btn\">add<span\r\n                            class=\"material-icons-round\">\r\n                            shopping_cart\r\n                        </span></button>\r\n                </td>\r\n            </tr> -->\r\n        </tbody>\r\n    </table>\r\n</div>","import { Component, Input, OnInit } from '@angular/core';\r\nimport { Product, ProductVariant } from 'src/app/models/product';\r\nimport { CartService } from 'src/app/services/cart.service';\r\nimport { UtilitiesService } from 'src/app/services/utilities.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-mb-product-variant',\r\n  templateUrl: './mb-product-variant.component.html',\r\n  styleUrls: ['./mb-product-variant.component.scss']\r\n})\r\nexport class MbProductVariantComponent implements OnInit {\r\n\r\n  imgUrl: string = environment.uploadsUrl;\r\n\r\n  @Input()\r\n  product: Product;\r\n  \r\n  get cartCount(): number[] {\r\n    let count: number[] = [];\r\n    if (this.product != null && this.product.ProductVariants?.length > 0) {\r\n      for (let item of this.product.ProductVariants) {\r\n        count.push(this.cartService.getProductCartCount(item.Id));\r\n      }\r\n    }\r\n    return count;\r\n  }\r\n\r\n  constructor(private utilities: UtilitiesService, private cartService: CartService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  // openProductOverView() {\r\n  //   let request: ModalRequest = { open: false, modalType: ModalType.ProductVariant, data: null };\r\n\r\n  //   this.utilities.closeModalDialog(request);\r\n\r\n  //   request = { open: false, modalType: ModalType.ProductOverview, data: this.product }\r\n  //   this.utilities.openModalDialog(request);\r\n  // }\r\n \r\n  addToCart(variant: ProductVariant) {\r\n    this.cartService.addItem(variant?.Id ?? 0);\r\n  }\r\n\r\n  removeFromCart(variant: ProductVariant) {\r\n    this.cartService.decreaseItem(variant?.Id ?? 0);\r\n  }\r\n\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { RedeemRequest } from 'src/app/models/redeem-request';\r\n\r\n@Component({\r\n  selector: 'app-mb-redeem-details',\r\n  templateUrl: './mb-redeem-details.component.html',\r\n  styleUrls: ['./mb-redeem-details.component.scss']\r\n})\r\nexport class MbRedeemDetailsComponent implements OnInit {\r\n\r\n  @Input() redeemRequestDetails: RedeemRequest | null;\r\n  \r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div id=\"redeem-details\" uk-modal>\r\n    <div class=\"uk-modal-dialog uk-modal-body uk-position-bottom uk-animation-slide-bottom redeem_modal\">\r\n        <button class=\"uk-modal-close-default\" type=\"button\" uk-close></button>\r\n        <div class=\"uk-animation-slide-right-small\">\r\n            <div class=\"uk-card-body uk-padding-top-small\">\r\n                <h4>Redeem Details</h4>\r\n\r\n                Request#: <b>TR-{{ redeemRequestDetails?.Id | number: '5.' | removeComma }}</b> <br />\r\n                Name: <b>{{ redeemRequestDetails?.Amount }}</b> <br />\r\n                Request Status: <b>{{ redeemRequestDetails?.RequestState }}</b> <br />\r\n                Request Date: <b>{{ redeemRequestDetails?.RequestDateTime | date: 'MMM-dd, yyyy hh:mm aa' }}</b> <br />\r\n                Bank Account Number: <b>{{ redeemRequestDetails?.BankAccountNumber }}</b> <br /> <br />\r\n\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-mb-redeem-request',\r\n  templateUrl: './mb-redeem-request.component.html',\r\n  styleUrls: ['./mb-redeem-request.component.scss']\r\n})\r\nexport class MbRedeemRequestComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div id=\"request-redeem\" uk-modal>\r\n    <div class=\"uk-modal-dialog uk-position-bottom uk-animation-slide-bottom uk-modal-body redeem_modal\">\r\n        <button class=\"uk-modal-close-default\" type=\"button\" uk-close></button>\r\n\r\n        <p class=\"modal-title\">Redeem Request to your bank</p>\r\n        <form class=\"uk-grid-small\" uk-grid>\r\n            <div class=\"uk-width-1-1\">\r\n                <label class=\"uk-form-label primary-label\" for=\"form-stacked-text\">Redeem Amount</label>\r\n                <input class=\"uk-input primary-input\" type=\"text\" placeholder=\"Enter amount\">\r\n            </div>\r\n            <div class=\"uk-width-1-2@s\">\r\n                <label class=\"uk-form-label primary-label\" for=\"form-stacked-text\">Full Name</label>\r\n                <input class=\"uk-input primary-input\" type=\"text\" placeholder=\"Enter full name\">\r\n            </div>\r\n            <div class=\"uk-width-1-2@s\">\r\n                <label class=\"uk-form-label primary-label\" for=\"form-stacked-text\">IFSC</label>\r\n                <input class=\"uk-input primary-input\" type=\"text\" placeholder=\"IFSC Code Here\">\r\n            </div>\r\n            <div class=\"uk-width-1-2@s\">\r\n                <label class=\"uk-form-label primary-label\" for=\"form-stacked-text\">Bank Name</label>\r\n                <input class=\"uk-input primary-input\" type=\"text\" placeholder=\"Bank Name\">\r\n            </div>\r\n            <div class=\"uk-width-1-2@s\">\r\n                <label class=\"uk-form-label primary-label\" for=\"form-stacked-text\">Account No.</label>\r\n                <input class=\"uk-input primary-input\" type=\"text\" placeholder=\"Enter account no.\">\r\n            </div>\r\n            <div class=\"uk-width-1-1@s uk-text-center uk-margin-top\">\r\n                <button class=\"uk-button uk-button-primary uk-width-1-1\">Request</button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-mb-related-products',\r\n  templateUrl: './mb-related-products.component.html',\r\n  styleUrls: ['./mb-related-products.component.scss']\r\n})\r\nexport class MbRelatedProductsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p class=\"title\">Related Products</p>\r\n<!-- max 6 products // -->\r\n<app-mb-product-grids></app-mb-product-grids>\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-mb-splash-screen',\r\n  templateUrl: './mb-splash-screen.component.html',\r\n  styleUrls: ['./mb-splash-screen.component.scss']\r\n})\r\nexport class MbSplashScreenComponent implements OnInit {\r\n\r\n  assetsUrl: string = environment.assetsUrl;\r\n  \r\n\r\n  @Input() title: string;\r\n  showBottomNav: boolean = false;\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"splash-screen\">\r\n    <img [attr.src]=\"assetsUrl + '/splash1.jpg'\" class=\"splash-img\" alt=\"\">\r\n    <div class=\"splash-info uk-text-center\">\r\n        <p class=\"title uk-align-center\">Buy Groceries online with us</p>\r\n        <p class=\"subtitle uk-align-center\">Let's now shop for daily food & necessary</p>\r\n        <a routerLink=\"/default-splash\" class=\"uk-button uk-button-default gs-btn\">get started <span class=\"material-icons-outlined\">\r\n          east\r\n          </span></a>\r\n    </div>\r\n</div>\r\n","<div class=\"uk-container uk-container-xlarge uk-padding-remove story-container\">\r\n    <progress id=\"js-progressbar\" class=\"uk-progress story-time\" [value]=\"progress\" max=\"100\"></progress>\r\n    <ng-container *ngIf=\"currentBanner != null\">\r\n        <button routerLink=\"/\" class=\"uk-button close-btn uk-float-right\"><span class=\"material-icons-outlined\">\r\n                close\r\n            </span></button>\r\n        <div>\r\n            <img class=\"story-img\"\r\n                [attr.src]=\"uploadsUrl + '/' + currentBanner?.BannerImageUrl\" alt=\"\">\r\n        </div>\r\n        <div class=\"slide-grid uk-position-bottom-center uk-text-center\">\r\n            <a href=\"\">\r\n                <span class=\"material-icons-outlined\">\r\n                    expand_less\r\n                </span>\r\n                <p class=\"slide-title\">Slide up to see offer</p>\r\n            </a>\r\n        </div>\r\n    </ng-container>\r\n</div>","import { Component, Injector, OnInit } from '@angular/core';\r\nimport { OfferBanner } from 'src/app/models/offer';\r\nimport { OfferService } from 'src/app/services/api-services/offers.service';\r\nimport { BaseComponent } from 'src/app/shared/base.component';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-mb-story-view',\r\n  templateUrl: './mb-story-view.component.html',\r\n  styleUrls: ['./mb-story-view.component.scss']\r\n})\r\nexport class MbStoryViewComponent extends BaseComponent implements OnInit {\r\n\r\n  uploadsUrl: string = environment.uploadsUrl;\r\n\r\n  currentBanner: OfferBanner | null;\r\n  progress: number = 0;\r\n  interval: any;\r\n\r\n  constructor(protected injector: Injector, protected offerSeervice: OfferService) {\r\n    super(injector);\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.offerSeervice.currentBanner.subscribe((res) => {\r\n      this.currentBanner = res;\r\n      if (res == null) {\r\n\r\n        this.router.navigate(['/'])\r\n      } else {\r\n        this.progress = 1;\r\n\r\n        this.interval = setInterval(() => {\r\n          this.progress += 1.5;\r\n\r\n          if (this.progress >= 100) {\r\n           clearInterval(this.interval)\r\n           this.router.navigate(['/'])\r\n          }\r\n        }, 100)\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n}\r\n","<div class=\"uk-modal-dialog uk-modal-body uk-transition-slide-bottom\n    time-modal uk-text-center uk-position-bottom\">\n    <table class=\"uk-table uk-table-small time-table uk-table-divider\">\n        <ng-container *ngFor=\"let item of dayList; let ind = index\">\n            <thead>\n                <tr>\n                    <th colspan=\"2\">\n                        <ng-container *ngIf=\"item.Title != null\">\n                            {{ item.Title }}\n                        </ng-container>\n                        <ng-container *ngIf=\"item.Title == null\">\n                            {{ item.Date | date: 'dd-MMM'}}\n                        </ng-container>\n                    </th>\n                </tr>\n            </thead>\n            <tbody id=\"iming-slots-{{ ind }}\">\n                <ng-container *ngFor=\"let slot of timingList\">\n                    <ng-container *ngIf=\"slot.WeekDayId == item.WeekDayId\">\n                        <tr [class.uk-active]=\"slot.Id == selectedSlot\" [class.closed]=\"!slot.IsTimingActive\"\n                            (click)=\"slot.IsTimingActive && timeSelected(slot, true);\">\n                            <td>\n                                <span class=\"material-icons-outlined\">\n                                    schedule\n                                </span>\n                                <span>\n                                    {{ tConvert(slot.FromHours, slot.FromMinutes) }} to {{ tConvert(slot.ToHours,\n                                    slot.ToMinutes) }}\n                                </span>\n                            </td>\n                            <td>\n                                <span class=\"time-check\">\n                                </span>\n                            </td>\n                        </tr>\n                    </ng-container>\n                </ng-container>\n                <!-- <tr class=\"uk-active\">\n                    <td><span class=\"material-icons-outlined\">\n                            schedule\n                        </span> <span>12:00 AM - 13:00 PM</span> </td>\n                    <td><span class=\"time-check\">\n\n                        </span></td>\n                </tr>\n                <tr>\n                    <td><span class=\"material-icons-outlined\">\n                            schedule\n                        </span> <span>12:00 AM - 13:00 PM</span> </td>\n                    <td><span class=\"time-check\">\n\n                        </span></td>\n                </tr> -->\n            </tbody>\n        </ng-container>\n    </table>\n</div>","import { Component, Injector, Input, OnDestroy, OnInit } from '@angular/core';\nimport { ModalRequest, ModalType, ResponseObject } from 'src/app/models/common';\nimport { DeliveryTimingFilter } from 'src/app/models/delivery-timings';\nimport { DeliveryTimingsService } from 'src/app/services/api-services/delivery-timings.service';\nimport { PlaceOrderService } from 'src/app/services/api-services/place-order.service';\nimport { BaseComponent } from 'src/app/shared/base.component';\n\n@Component({\n  selector: 'app-mb-timing-selector',\n  templateUrl: './mb-timing-selector.component.html',\n  styleUrls: ['./mb-timing-selector.component.scss']\n})\nexport class MbTimingSelectorComponent extends BaseComponent implements OnInit, OnDestroy {\n  \n  timingList: any[];\n  dayList: any[] = [];\n  selectedIndex: number = 0;\n  selectedSlot: number = 0;\n  selectedSlotItem: any = null;\n\n  // orderStatus: typeof OrderStatus = OrderStatus;\n  // camelCaseToSpacedText: typeof transformCamelToSpaces = transformCamelToSpaces;\n\n  // orders: Order[];\n  selectedId: number;\n\n  constructor(protected injector: Injector, private services: DeliveryTimingsService,\n    private placeOrderService: PlaceOrderService) {\n    super(injector);\n  }\n\n  ngOnInit(): void {\n\n    let filter: DeliveryTimingFilter = new DeliveryTimingFilter();\n    this.services.getDeliveryTimingsList(filter).subscribe((res: ResponseObject<any[]>) => {\n      this.timingList = res.Data ?? [];\n      if (this.timingList != null) {\n        let date: Date = (new Date());\n        let ind = (date.getDay() < 6 ? date.getDay() + 1 : 0);\n        let count = 4;\n        let selected: boolean = false;\n        while (count > 0) {\n          if (ind > 6) ind = 0;\n          let item = this.timingList.find(item => item.WeekDayId === ind); \n          this.dayList.push({\n            DayName: item.DayName,\n            WeekDayId: item.WeekDayId,\n            Date: date,\n            Title: count == 4 ? \"Today\" : count == 3 ? \"Tomorrow\" : null,\n            TimeSlots: []\n          });\n          ind++;\n          date = this.addDays(date, 1);\n          count--;\n        }\n        this.selectedIndex = this.dayList[0].WeekDayId;\n        this.timingList.forEach(item => {\n          let itemIndex = this.dayList.findIndex(i => i.WeekDayId == item.WeekDayId);\n\n          if (this.dayList[itemIndex] != undefined) {\n            if (item.IsTimingActive && (this.selectedSlotItem == null || this.selectedSlotItem.WeekDayId > item.WeekDayId)) {\n              this.selectedIndex = item.WeekDayId;\n              this.selectedSlot = item.Id; \n              this.selectedSlotItem = item;\n              console.log(\"selecting --- \" + this.selectedSlotItem.WeekDayId)\n            }\n            this.dayList[itemIndex].TimeSlots.push(item);\n          }\n        })\n        console.log(\"Selected Slot: \" + this.selectedSlot);\n      }\n      this.timeSelected(this.selectedSlotItem);\n    })\n    \n  }\n\n  timeSelected(item: any, shouldClose: boolean = false) {\n    this.selectedSlot = item.Id;\n    // modalType: ModalType;\n    // open: boolean;\n    // data: Product | ProductVariant | Category | null;\n    let request: ModalRequest = {\n      modalType: ModalType.TimingSelection,\n      open: false,\n      data: item\n    }\n\n    this.utilities.closeModalDialog(request);\n    this.placeOrderService.setSelectedTimeSlot(request.data);\n  }\n}\n","<div class=\"uk-container uk-container-xlarge uk-padding-remove full-container\">\r\n    <app-mb-header-nav  [hasActions]=\"false\"></app-mb-header-nav>\r\n    <div class=\"uk-card setting-grid uk-padding-small uk-card-body\">\r\n        <div class=\"uk-text-right uk-padding-small uk-padding-remove-right\">\r\n\r\n            <a routerLink=\"/bank-accounts\" class=\"uk-button redeem-btn\">Bank Accounts</a> &nbsp;\r\n            <a (click)=\"openRedeemRequestDialog()\" class=\"uk-button redeem-btn\">Request Redeem</a>\r\n        </div>\r\n        <div class=\"balance-grid uk-text-center\">\r\n\r\n\r\n            <p class=\"balance-title uk-margin-remove\">Current Balance</p>\r\n            <p class=\"balance-amount uk-margin-remove\"><span class=\"r-symbol\">\r\n                    ₹</span>{{ currentBalance }}</p>\r\n        </div>\r\n        <p class=\"activity-heading\">Redeem History</p>\r\n         \r\n        <ng-container *ngFor=\"let requestItem of redeemRequestList; let i = index\">\r\n            <div class=\"history-grid uk-margin-small-top\">\r\n                <p class=\"trans-id uk-float-left\">#TR-{{ requestItem?.Id | number: '5.' | removeComma }}</p>\r\n                <p class=\"requested-date uk-text-right\">{{ requestItem?.RequestDateTime | date: 'MMM-dd, yyyy hh:mm aa'\r\n                    }}\r\n                </p>\r\n                <table class=\"uk-table history-table uk-margin-remove uk-text-center\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <td class=\"uk-text-left\">\r\n                                <span class=\"uk-badge redeem-status requested\">{{ requestItem?.RequestState }}</span>\r\n                            </td>\r\n                            <td>\r\n                                <p class=\"trans-amt\"><span class=\"material-icons-outlined\">\r\n                                        remove\r\n                                    </span><span class=\"r-symbol\"> ₹{{ requestItem?.Amount }}</span>\r\n                                </p>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n                <a uk-toggle=\"target: #redeem-details\" class=\"uk-button  uk-padding-remove bank-btn\"> <span\r\n                        class=\"material-icons-round req-icon\">\r\n                        account_balance\r\n                    </span>View</a>\r\n            </div>\r\n\r\n        </ng-container>\r\n\r\n\r\n    </div>\r\n\r\n\r\n</div>\r\n\r\n\r\n<div id=\"redeem-request\" uk-modal>\r\n    <div class=\"uk-modal-dialog uk-modal-body uk-position-bottom uk-animation-slide-bottom redeem_modal\">\r\n        <button class=\"uk-modal-close-default\" type=\"button\" uk-close></button>\r\n        <div class=\"uk-animation-slide-right-small\">\r\n            <div class=\"uk-card-body uk-padding-top-small\">\r\n                <div class=\"balance-grid uk-text-center\">\r\n                    <p class=\"balance-title uk-margin-remove\">Current Balance</p>\r\n                    <p class=\"balance-amount uk-margin-remove\"><span class=\"r-symbol\">\r\n                            ₹</span>{{currentBalance}}</p>\r\n                </div>\r\n                <br />\r\n                Select Bank Account\r\n                <br />\r\n                <br />\r\n                <form [formGroup]=\"bankAccountForm\">\r\n                    <div>\r\n                        <div class=\"bank-options\">\r\n\r\n                            <label class=\"labl\" *ngFor=\"let account of bankAccounts\" (click)=\"setValue(account)\">\r\n                                <input type=\"radio\" formControlName=\"BankAccountId\" [value]=\"account.Id\"\r\n                                    (click)=\"setValue(account)\" checked=\"checked\" />\r\n                                <div>\r\n                                    <div class=\"circle\"></div>{{ account.AccountName }} | {{\r\n                                    account.AccountNumber }} | {{ account.BankName }}\r\n                                </div>\r\n                            </label>\r\n\r\n                        </div>\r\n                    </div>\r\n                    <br />\r\n                    <div class=\"uk-text-right\">\r\n                        <button class=\"uk-button uk-button-primary\" (click)=\"redeemRequestDialog.hide()\">Cancel</button> &nbsp;\r\n                        <button class=\"uk-button uk-button-primary\" (click)=\"createRedeemRequest()\"> Request</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<app-mb-redeem-details [redeemRequestDetails]=\"redeemRequestDetails\"></app-mb-redeem-details>\r\n<app-mb-bank-accounts></app-mb-bank-accounts>","import { Component, Injector, Input, OnInit } from '@angular/core';\r\nimport { WalletService } from 'src/app/services/api-services/wallet.service';\r\nimport { BaseComponent } from 'src/app/shared/base.component';\r\nimport { Location } from '@angular/common';\r\nimport { Wallet } from 'src/app/models/wallet';\r\nimport { BankAccountService } from 'src/app/services/api-services/bank-accounts.service';\r\nimport { RedeemRequestService } from 'src/app/services/api-services/redeem-request.service';\r\nimport { RedeemRequest } from 'src/app/models/redeem-request';\r\nimport { BankAccount } from 'src/app/models/bank-account';\r\nimport { FormGroup } from '@angular/forms';\r\n\r\ndeclare var UIkit: any;\r\n\r\n@Component({\r\n  selector: 'app-mb-wallet-redeem',\r\n  templateUrl: './mb-wallet-redeem.component.html',\r\n  styleUrls: ['./mb-wallet-redeem.component.scss']\r\n})\r\nexport class MbWalletRedeemComponent extends BaseComponent implements OnInit {\r\n\r\n  @Input() modalId: string = 'wallet-redeeem-request-modal';\r\n\r\n  _switcher: any;\r\n  walletList: Wallet[];\r\n  redeemRequestList: RedeemRequest[] = [];\r\n  currentBalance: number;\r\n  bankAccounts: BankAccount[];\r\n  redeemRequestDetails: RedeemRequest | null = null;\r\n\r\n\r\n  isAddOrEdit: boolean = false;\r\n  isEditMode: boolean = false;\r\n\r\n  currentSwitcherIndex: number = 0;\r\n\r\n  bankAccountForm = this.fb.group({\r\n    BankAccountId: [],\r\n  })\r\n\r\n  constructor(protected injector: Injector, private walletService: WalletService,\r\n    private bankAccountService: BankAccountService, private redeemRequestService: RedeemRequestService,\r\n    private _location: Location) {\r\n    super(injector);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n \r\n    this.loadWalletInfo();\r\n    this.loadRedeemHistory();\r\n    this.loadBankAccounts();\r\n\r\n    this.currentSwitcherIndex = 0;\r\n  }\r\n\r\n  setValue(bankAccount: BankAccount) {\r\n    this.bankAccountForm.patchValue({ BankAccountId: bankAccount.Id });\r\n  }\r\n\r\n  get switcher(): any {\r\n    if (this._switcher == null) {\r\n      this._switcher = UIkit.switcher('#data-switcher', { animation: false })\r\n    }\r\n    return this._switcher;\r\n  }\r\n\r\n  switch(index: number) {\r\n    this.currentSwitcherIndex = index;\r\n    setTimeout(() => {\r\n      this.switcher.show(index);\r\n    })\r\n  }\r\n\r\n  _createRequestDialog: any;\r\n  \r\n  get redeemRequestDialog(): any {\r\n    if (this._createRequestDialog == null) {\r\n      this._createRequestDialog = UIkit.modal('#redeem-request')\r\n    }\r\n    return this._createRequestDialog;\r\n  }\r\n  \r\n  openRedeemRequestDialog() {\r\n    setTimeout(() => {\r\n      this.redeemRequestDialog.show();\r\n    });\r\n  }\r\n\r\n  loadBankAccounts() {\r\n    this.bankAccountService.getBankAccountList().subscribe((res: { Data: BankAccount[]; }) => {\r\n      this.bankAccounts = res.Data;\r\n      if (this.bankAccounts?.length > 0) {\r\n        this.bankAccountForm.patchValue({ BankAccountId: this.bankAccounts[0].Id });\r\n      }\r\n    })\r\n  }\r\n\r\n  addAddress() {\r\n\r\n  }\r\n\r\n  close() {\r\n    //this.formInstance.reset();\r\n    let url = this.router.url.split(\"/\")[0];\r\n    this.router.navigateByUrl(url);\r\n  }\r\n\r\n  navigateBack() {\r\n    if (this.currentSwitcherIndex != 0) {\r\n      this.switch(0);\r\n    } else {\r\n      this._location.back();\r\n    }\r\n  }\r\n\r\n  loadWalletInfo() {\r\n    this.walletService.getWalletList().subscribe((res: { Data: Wallet[]; }) => {\r\n      this.walletList = res.Data;\r\n      this.currentBalance = 0;\r\n      this.walletList.forEach(item => this.currentBalance += item.Amount);\r\n\r\n    })\r\n  }\r\n\r\n  loadRedeemHistory() {\r\n    this.redeemRequestService.getRedeemRequestList().subscribe(res => {\r\n      this.redeemRequestList = res.Data;\r\n      this.redeemRequestList = [\r\n        {\r\n          Id: 1,\r\n          RequestedByUserId: '4345',\r\n          BankAccountNumber: '43453453',\r\n          BankAccountId: 22,\r\n          Amount: 100,\r\n          RequestState: 11,\r\n          RequestDateTime: new Date(),\r\n          RequestCompletionDateTime: new Date()\r\n        },\r\n        {\r\n          Id: 2,\r\n          RequestedByUserId: '13455',\r\n          BankAccountNumber: '345345',\r\n          BankAccountId: 22,\r\n          Amount: 200,\r\n          RequestState: 12,\r\n          RequestDateTime: new Date(),\r\n          RequestCompletionDateTime: new Date()\r\n        }\r\n      ];\r\n    });\r\n  }\r\n\r\n  navigateBankAccounts() {\r\n    this.router.navigate([{ outlets: { action: ['bank-accounts'], primary: [] } }]);\r\n  }\r\n\r\n  editBankAccount() {\r\n    this.router.navigate([{ outlets: { action: ['edit-bank-account'], primary: [] } }]);\r\n  }\r\n\r\n  createRedeemRequest() {\r\n\r\n    this.redeemRequestService.createRedeemRequest(<RedeemRequest><unknown>this.bankAccountForm.value).subscribe(res => {\r\n\r\n    });\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-server-down',\n  templateUrl: './server-down.component.html',\n  styleUrls: ['./server-down.component.scss']\n})\nexport class ServerDownComponent implements OnInit {\n\n  localAssetsUrl: string = environment.localAssetsUrl;\n  \n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","\n\n<div class=\"container uk-text-center\">\n<br/>\n<br/>\n<br/>\n<br/>\n<br/>\n<br/>\n\n<img [attr.src]=\"localAssetsUrl + '/logo-web.jpeg'\" alt=\"\">\n<br/>\n<br/>\n<br/>\n \n\n\n<h5>Please check your network <br/> connection!</h5>\n\n\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-titlebar',\r\n  templateUrl: './titlebar.component.html',\r\n  styleUrls: ['./titlebar.component.scss']\r\n})\r\nexport class TitlebarComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>titlebar works!</p>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-topnav',\r\n  templateUrl: './topnav.component.html',\r\n  styleUrls: ['./topnav.component.scss']\r\n})\r\nexport class TopnavComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>topnav works!</p>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MobileHomeComponent } from './views/mobile-home/mobile-home.component';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { ProductListComponent } from './views/product-list/product-list.component';\r\nimport { MobileLayoutComponent } from './views/mobile-layout/mobile-layout.component';\r\nimport { CartComponent } from './views/cart/cart.component';\r\nimport { CategoriesComponent } from './views/categories/categories.component';\r\nimport { OffersViewComponent } from './views/offers-view/offers-view.component';\r\nimport { ProfilesComponent } from './views/profiles/profiles.component';\r\nimport { ProductDetailsComponent } from './views/product-details/product-details.component';\r\nimport { TopnavComponent } from './components/topnav/topnav.component';\r\nimport { MbFtProductsComponent } from './components/mb-ft-products/mb-ft-products.component';\r\nimport { TitlebarComponent } from './components/titlebar/titlebar.component';\r\nimport { MbSplashScreenComponent } from './components/mb-splash-screen/mb-splash-screen.component';\r\nimport { MbDefaultSplashComponent } from './components/mb-default-splash/mb-default-splash.component';\r\nimport { MbHomeNavbarComponent } from './components/mb-home-navbar/mb-home-navbar.component';\r\nimport { MbHomeMainBannerComponent } from './components/mb-home-main-banner/mb-home-main-banner.component';\r\nimport { MbHomeCategoriesComponent } from './components/mb-home-categories/mb-home-categories.component';\r\nimport { MbHomeOfferSliderComponent } from './components/mb-home-offer-slider/mb-home-offer-slider.component';\r\nimport { MbHomeSliderBannerComponent } from './components/mb-home-slider-banner/mb-home-slider-banner.component';\r\nimport { MbProductGridsComponent } from './components/mb-product-grids/mb-product-grids.component';\r\nimport { MbProductVariantComponent } from './components/mb-product-variant/mb-product-variant.component';\r\nimport { MbHeaderNavComponent } from './components/mb-header-nav/mb-header-nav.component';\r\nimport { MbRelatedProductsComponent } from './components/mb-related-products/mb-related-products.component';\r\nimport { MbHomeStoriesOffersComponent } from './components/mb-home-stories-offers/mb-home-stories-offers.component';\r\nimport { MbStoryViewComponent } from './components/mb-story-view/mb-story-view.component';\r\nimport { MbHomeBrandsComponent } from './components/mb-home-brands/mb-home-brands.component';\r\nimport { MbCategoryDetailsComponent } from './components/mb-category-details/mb-category-details.component';\r\nimport { MbPlaceOrdersComponent } from './components/mb-place-orders/mb-place-orders.component';\r\nimport { MbOrderSuccessComponent } from './components/mb-order-success/mb-order-success.component';\r\nimport { SearchViewComponent } from './views/search-view/search-view.component';\r\nimport { SearchResultComponent } from './views/search-result/search-result.component';\r\nimport { MbLoginComponent } from './components/mb-login/mb-login.component';\r\nimport { MbOtpComponent } from './components/mb-otp/mb-otp.component';\r\nimport { LoginComponent } from '../auth/login/login.component';\r\nimport { MbMyOrdersComponent } from './components/mb-my-orders/mb-my-orders.component';\r\nimport { MbOrderDetailsComponent } from './components/mb-order-details/mb-order-details.component';\r\nimport { MbOrderTrackComponent } from './components/mb-order-track/mb-order-track.component';\r\nimport { MbOrderCancelReasonComponent } from './components/mb-order-cancel-reason/mb-order-cancel-reason.component';\r\nimport { MbMyWalletComponent } from './components/mb-my-wallet/mb-my-wallet.component';\r\nimport { MbWalletRedeemComponent } from './components/mb-wallet-redeem/mb-wallet-redeem.component';\r\nimport { MbRedeemRequestComponent } from './components/mb-redeem-request/mb-redeem-request.component';\r\nimport { MbRedeemDetailsComponent } from './components/mb-redeem-details/mb-redeem-details.component';\r\nimport { MbAddressComponent } from './components/mb-address/mb-address.component';\r\nimport { MbAddAddressComponent } from './components/mb-add-address/mb-add-address.component';\r\nimport { RoleGuardService } from '../auth/_helpers/role.guard';\r\nimport { Role } from '../auth/_models/role';\r\nimport { MbTimingSelectorComponent } from './components/mb-timing-selector/mb-timing-selector.component';\r\nimport { MbBankAccountsComponents } from './components/mb-bank-accounts/mb-bank-accounts.component';\r\nimport { ServerDownComponent } from './components/server-down/server-down.component';\r\nimport { MbMyNotifsComponent } from './components/mb-my-notifs/mb-my-notifs.component';\r\n\r\n\r\nconst categoryRoutes = (component: any) => {\r\n  return [\r\n    // {\r\n    //   path: 'cart', component: component\r\n    // },\r\n    // {\r\n    //   path: 'wallets', component: WbMyWalletComponent\r\n    // },\r\n    // {\r\n    //   path: 'redeem', component: WbRedeemWalletComponent\r\n    // },\r\n    // {\r\n    //   path: 'login', component: component\r\n    // },\r\n    // {\r\n    //   path: 'orders', component: WbOrdersComponent\r\n    // },\r\n    // {\r\n    //   path: 'order-detail', component: WbMyOrderDetailsComponent\r\n    // },\r\n    // {\r\n    //   canActivate: [RoleGuardService],\r\n    //   path: 'otp', component: component\r\n    // },\r\n    // {\r\n    //   canActivate: [RoleGuardService],\r\n    //   data: { roles: [Role.User] },\r\n    //   path: 'place-order', component: component\r\n    // },\r\n    // {\r\n    //   canActivate: [RoleGuardService],\r\n    //   data: { roles: [Role.User] },\r\n    //   path: 'select-payment-method', component: component\r\n    // },\r\n    // {\r\n    //   canActivate: [RoleGuardService],\r\n    //   data: { roles: [Role.User] },\r\n    //   path: 'my-addresses', component: component\r\n    // },\r\n    // {\r\n    //   canActivate: [RoleGuardService],\r\n    //   data: { roles: [Role.User] },\r\n    //   path: 'address', component: component\r\n    // },\r\n    // {\r\n    //   canActivate: [RoleGuardService],\r\n    //   data: { roles: [Role.User] },\r\n    //   path: 'edit-address/:id', component: component\r\n    // },\r\n    // {\r\n    //   canActivate: [RoleGuardService],\r\n    //   data: { roles: [Role.User] },\r\n    //   path: 'order-success', component: component\r\n    // },\r\n    // {\r\n    //   canActivate: [RoleGuardService],\r\n    //   data: { roles: [Role.User] },\r\n    //   path: 'my-orders', component: component\r\n    // },\r\n    // {\r\n    //   canActivate: [RoleGuardService],\r\n    //   data: { roles: [Role.User] },\r\n    //   path: 'order-details/:id', component: component\r\n    // },\r\n  ]\r\n}\r\n\r\n\r\nconst mobileRoutes: Routes = [\r\n  {\r\n    path: '', component: MobileLayoutComponent, data: { animation: 'MainPage' }, children: [\r\n      {\r\n        path: '', component: MobileHomeComponent\r\n      },\r\n      {\r\n        path: 'default-splash', component: MbDefaultSplashComponent\r\n      },\r\n      {\r\n        path: 'my-addresses', component: MbAddressComponent,\r\n        canActivate: [RoleGuardService],\r\n        data: { roles: [Role.User] },\r\n      },\r\n      {\r\n        path: 'address', component: MbAddAddressComponent,\r\n        canActivate: [RoleGuardService],\r\n        data: { roles: [Role.User] },\r\n      },\r\n      {\r\n        path: 'edit-address/:id', component: MbAddAddressComponent,\r\n        canActivate: [RoleGuardService],\r\n        data: { roles: [Role.User] },\r\n      },\r\n      {\r\n        path: 'product/:id', component: ProductDetailsComponent\r\n      },\r\n      {\r\n        path: 'wallet', component: MbMyWalletComponent,\r\n        canActivate: [RoleGuardService],\r\n        data: { roles: [Role.User] },\r\n      },\r\n      {\r\n        path: 'redeem-wallet', component: MbWalletRedeemComponent,\r\n        canActivate: [RoleGuardService],\r\n        data: { roles: [Role.User] },\r\n      },\r\n      {\r\n        path: 'bank-accounts', component: MbBankAccountsComponents,\r\n        canActivate: [RoleGuardService],\r\n        data: { roles: [Role.User] },\r\n      },\r\n      {\r\n        path: 'login', component: MbLoginComponent\r\n      },\r\n      {\r\n        path: 'order-details/:id', component: MbOrderDetailsComponent,\r\n        canActivate: [RoleGuardService],\r\n        data: { roles: [Role.User] },\r\n      },\r\n      {\r\n        path: 'my-orders', component: MbMyOrdersComponent,\r\n        canActivate: [RoleGuardService],\r\n        data: { roles: [Role.User] },\r\n      },\r\n      {\r\n        path: 'otp', component: MbOtpComponent\r\n      },\r\n      {\r\n        path: 'search', component: SearchViewComponent\r\n      },\r\n      {\r\n        path: 'search-result', component: SearchResultComponent\r\n      },\r\n      {\r\n        path: 'ps', component: SearchResultComponent,\r\n      },\r\n      {\r\n        path: 'notifications', component: MbMyNotifsComponent,\r\n      },\r\n      {\r\n        path: 'order-success', component: MbOrderSuccessComponent, pathMatch: 'full',\r\n        canActivate: [RoleGuardService],\r\n        data: { roles: [Role.User] },\r\n      },\r\n      {\r\n        path: 'place-order', component: MbPlaceOrdersComponent, pathMatch: 'full',\r\n        canActivate: [RoleGuardService],\r\n        data: { roles: [Role.User] },\r\n      },\r\n      {\r\n        path: 'cart', component: CartComponent,\r\n        canActivate: [RoleGuardService],\r\n        data: { roles: [Role.User] },\r\n      },\r\n      {\r\n        path: 'offers', component: OffersViewComponent\r\n      },\r\n      {\r\n        path: 'profile', component: ProfilesComponent, pathMatch: 'full',\r\n        canActivate: [RoleGuardService],\r\n        data: { roles: [Role.User] },\r\n      },\r\n      {\r\n        path: 'collections', component: CategoriesComponent,\r\n        children:\r\n          [\r\n            {\r\n              path: ':categoryKey',\r\n              children: [\r\n                {\r\n                  path: ':subCategoryKey',\r\n                  children: [\r\n                    {\r\n                      path: 'products',\r\n                      component: ProductListComponent,\r\n                    },\r\n                    {\r\n                      path: ':groupKey',\r\n                      component: ProductListComponent,\r\n                    }\r\n                  ]\r\n                }\r\n              ]\r\n            }\r\n          ]\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    path: 'view-story', component: MbStoryViewComponent\r\n  },\r\n  {\r\n    path: 'server-down', component: ServerDownComponent\r\n  }\r\n]\r\n\r\n@NgModule({\r\n  imports: [\r\n    SharedModule,\r\n    CommonModule,\r\n    RouterModule.forChild(mobileRoutes)\r\n  ],\r\n  declarations: [MobileHomeComponent, ProductListComponent, MobileLayoutComponent, CartComponent, ProfilesComponent, OffersViewComponent, MbBankAccountsComponents,\r\n    ProductDetailsComponent, TopnavComponent, MbFtProductsComponent, TitlebarComponent, MbSplashScreenComponent, MbDefaultSplashComponent, MbHomeNavbarComponent, MbHomeMainBannerComponent, CategoriesComponent, MbHomeCategoriesComponent, MbHomeOfferSliderComponent, MbHomeSliderBannerComponent, MbProductGridsComponent, MbProductVariantComponent, MbHeaderNavComponent, MbRelatedProductsComponent, MbHomeStoriesOffersComponent, MbStoryViewComponent, MbHomeBrandsComponent, MbCategoryDetailsComponent, MbPlaceOrdersComponent, MbOrderSuccessComponent, SearchViewComponent, SearchResultComponent, MbLoginComponent, MbOtpComponent, MbMyOrdersComponent, MbOrderDetailsComponent, MbOrderTrackComponent, MbOrderCancelReasonComponent, MbMyWalletComponent, MbWalletRedeemComponent, MbRedeemRequestComponent, MbRedeemDetailsComponent, MbAddressComponent, MbAddAddressComponent, MbTimingSelectorComponent, ServerDownComponent, MbMyNotifsComponent]\r\n})\r\nexport class MobileModule {\r\n\r\n  constructor() {\r\n\r\n  }\r\n\r\n}\r\n","<activity>\r\n\r\n    <app-mb-header-nav [title]=\"'My Cart'\"></app-mb-header-nav>\r\n\r\n    <div class=\"details-grid\">\r\n\r\n        <table class=\"uk-table uk-table-small product-table\">\r\n            <tbody>\r\n                <tr *ngFor=\"let cartItem of productCartList\">\r\n                    <td class=\"product-img\" *ngIf=\"cartItem?.ProductVariant?.Product?.ProductImages != null\">\r\n                        <img [attr.src]=\"imgUrl + cartItem.ProductVariant.Product.ProductImages[0]\">\r\n                    </td>\r\n                    <td class=\"product-img\" *ngIf=\"cartItem.ProductVariant?.Product?.ProductImages == null\">\r\n                        <img *ngIf=\"\" [attr.src]=\"assetsUrl + '/products/dairy-milk.jpeg'\">\r\n                    </td>\r\n                    <td class=\"product-info\">\r\n                        <span class=\"product-name\">{{ cartItem.ProductVariant.Product?.ProductName }}\r\n                        </span> <br>\r\n                        <span class=\"product-qty\">\r\n                            {{ cartItem.ProductVariant.Volume }} {{\r\n                            cartItem.ProductVariant.MeasureName }}\r\n                        </span>\r\n                        <div class=\"qty-add\">\r\n                            <span class=\"material-icons-outlined minus-btn\"\r\n                                (click)=\"removeProduct(cartItem.ProductVariantId)\">\r\n                                remove_circle\r\n                            </span>\r\n                            <input class=\"uk-input qty-input\" maxlength=\"2\" [value]=\"cartItem.Quantity\" type=\"text\">\r\n                            <span class=\"material-icons-outlined plus-btn\"\r\n                                (click)=\"addToCart(cartItem.ProductVariantId)\">\r\n                                add_circle\r\n                            </span>\r\n                            <span class=\"x-symbol\">x</span>\r\n                            <span class=\"product-price\"> ₹{{ cartItem.ProductVariant.Price }} </span>\r\n                        </div>\r\n                    </td>\r\n                </tr>\r\n\r\n            </tbody>\r\n        </table>\r\n\r\n\r\n    </div>\r\n\r\n    <div class=\"submit-btn\">\r\n        <button (click)=\"navigatePlaceOrder()\" class=\"uk-button uk-width-1-1 save-btn\">\r\n            place order\r\n            <span class=\"uk-float-right total-btn\">Total : ₹{{ cartTotal | number: '1.1-2' }}/-\r\n            </span> </button>\r\n    </div>\r\n\r\n</activity>","import { Component, Injector, Input, OnInit } from '@angular/core';\r\nimport { AuthenticationService } from 'src/app/auth/_services/authentication.service';\r\nimport { Cart, CartProductView } from 'src/app/models/cart';\r\nimport { ResponseObject } from 'src/app/models/common';\r\nimport { ProductFilter, ProductVariant } from 'src/app/models/product';\r\nimport { ProductsService } from 'src/app/services/api-services/products.service';\r\nimport { CartService } from 'src/app/services/cart.service';\r\nimport { BaseComponent } from 'src/app/shared/base.component';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-cart',\r\n  templateUrl: './cart.component.html',\r\n  styleUrls: ['./cart.component.scss']\r\n})\r\nexport class CartComponent extends BaseComponent implements OnInit {\r\n\r\n  productCartList: CartProductView[] = [];\r\n  assetsUrl: string = environment.assetsUrl;\r\n  imgUrl: string = environment.uploadsUrl;\r\n\r\n  @Input() cartId: string;\r\n\r\n  get cartList(): Cart[] {\r\n    return this.cartService.getCartList()\r\n  }\r\n\r\n  get cartTotal(): number {\r\n    return this.productCartList.reduce((sum, item) => sum + (item.Quantity * item.ProductVariant.Price), 0);\r\n  }\r\n\r\n\r\n  constructor(public injector: Injector, private cartService: CartService,\r\n    private authService: AuthenticationService,\r\n    private productService: ProductsService) {\r\n    super(injector);\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.loadProducts();\r\n\r\n    this.cartService.cartUpdated.subscribe((cartItem: Cart) => {\r\n      if (cartItem == null || cartItem == undefined) {\r\n        this.loadProducts();\r\n      } else {\r\n        let index = this.productCartList.findIndex(i => i.ProductVariantId == cartItem.ProductVariantId);\r\n        if (index > -1) {\r\n          if (cartItem.Quantity == 0) {\r\n            this.productCartList.splice(index, 1);\r\n          }\r\n          else {\r\n            this.productCartList[index].Quantity = cartItem.Quantity;\r\n          }\r\n        } else {\r\n          this.loadProducts();\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  loadProducts() {\r\n\r\n    if (this.cartList.length == 0) {\r\n      this.productCartList = [];\r\n      return;\r\n    }\r\n\r\n    this.showSpinner();\r\n\r\n    let filter: ProductFilter = new ProductFilter();\r\n    filter.Ids = this.cartList.map(i => i.ProductVariantId).join(',');\r\n    this.productService.getProductVariantList(filter).subscribe((res: ResponseObject<ProductVariant[]>) => {\r\n      let productCartList: CartProductView[] = [];\r\n      let variantList = res.Data ?? [];\r\n      variantList.forEach(vItem => {\r\n        let len = vItem?.Product?.ProductImages?.length ?? 0;\r\n        for (let i = 0; i < len; i++) {\r\n          let arr = (vItem?.Product?.ProductImages ?? []);\r\n          let str = arr[i].replace('~', '');\r\n          if (vItem?.Product?.ProductImages != null) {\r\n            vItem.Product.ProductImages[i] = str;\r\n          }\r\n        }\r\n        this.cartList.forEach(cItem => {\r\n          if (vItem.Id == cItem.ProductVariantId) {\r\n            productCartList.push({\r\n              Quantity: cItem.Quantity,\r\n              ProductVariantId: cItem.ProductVariantId,\r\n              ProductVariant: vItem\r\n            })\r\n          }\r\n        });\r\n      })\r\n      this.productCartList = productCartList;\r\n      this.hideSpinner();\r\n    });\r\n  }\r\n\r\n  removeProduct(id: number) {\r\n    this.cartService.removeItem(id);\r\n  }\r\n\r\n  addToCart(id: number) {\r\n    this.cartService.addItem(id);\r\n  }\r\n\r\n  decreaseFromCart(id: number) {\r\n    this.cartService.decreaseItem(id);\r\n  }\r\n\r\n  navigatePlaceOrder() {\r\n    this.router.navigate(['place-order']);\r\n  }\r\n}","<activity>\r\n\r\n\r\n    <ngx-spinner [name]=\"loadSpinner\" [fullScreen]=\"false\">\r\n    </ngx-spinner>\r\n\r\n\r\n    <app-mb-home-navbar></app-mb-home-navbar>\r\n\r\n    <!-- <app-mb-header-nav [title]=\"!isProductPage ? 'Categories' : header\"></app-mb-header-nav> -->\r\n\r\n    <layout [@fadeInOut]=\"!isProductPage ? 'open' : 'closed'\" *ngIf=\"!isProductPage\">\r\n        <ul id=\"left-menu\" uk-accordion class=\"categories-list\">\r\n\r\n            <li *ngFor=\"let category of categories; let i = index\" [class.uk-open]=\"category?.RouteKey === categoryKey\"\r\n                [class.uk-active]=\"category?.RouteKey === categoryKey\">\r\n                <a class=\"uk-accordion-title category-heading\" (click)=\"navigateCategory(category, $event, i)\"\r\n                    [style]=\"'background-image: url(\\'' + uploadsUrl + category.CategoryBanner + '\\');'\">\r\n\r\n                    {{ category.CategoryName }}\r\n                    <br>\r\n                    <div class=\"subcategories\">\r\n                        {{ GetSubCategoriesLabel(category) }}\r\n                    </div>\r\n                </a>\r\n                <div class=\"uk-accordion-content subcategories-grid\">\r\n                    <div class=\"uk-width-1-1\">\r\n                        <ul class=\"uk-nav uk-nav-default subcategories\">\r\n                            <ng-container *ngFor=\"let subCategory of GetSubCategories(category)\">\r\n                                <li (click)=\"navigateSubCategory(subCategory)\"><a>{{ subCategory.SubCategoryName }} </a>\r\n                                </li>\r\n                            </ng-container>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </li>\r\n        </ul>\r\n\r\n    </layout>\r\n\r\n    <layout *ngIf=\"isProductPage\" [@openClose]=\"isProductPage ? 'open' : 'closed'\">\r\n\r\n        <div class=\"uk-container uk-container-xlarge cd-container\">\r\n\r\n            <div class=\"group-grid\" *ngIf=\"selectedOffer == null\">\r\n\r\n                <table class=\"uk-table uk-table-small uk-table-divider group-table\">\r\n\r\n                    <tbody>\r\n                        <tr *ngIf=\"productGroups.length > 0\">\r\n\r\n                            <td class=\"active-group\">\r\n                                <ng-container *ngFor=\"let item of productGroups\">\r\n                                    <span class=\"uk-badge group-badge uk-active\"\r\n                                        *ngIf=\"item.Id == this.productGroupId\">{{ item.ProductGroupName }}</span>\r\n                                </ng-container>\r\n                                <span class=\"uk-badge group-badge uk-active\" *ngIf=\"productGroupId == null\">\r\n                                    All\r\n                                </span>\r\n                            </td>\r\n                            <td class=\"other-group\">\r\n                                <span class=\"uk-badge group-badge\"\r\n                                    (click)=\"productGroupId = undefined; loadProductFromStart()\"\r\n                                    *ngIf=\"productGroupId != null\">\r\n                                    All\r\n                                </span>\r\n                                <ng-container *ngFor=\"let item of productGroups\">\r\n                                    <span *ngIf=\"item.Id != this.productGroupId\"\r\n                                        (click)=\"productGroupId = item.Id; loadProductFromStart()\"\r\n                                        class=\"uk-badge group-badge\">\r\n                                        {{ item.ProductGroupName }}</span>\r\n                                </ng-container>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <div *ngIf=\"selectedOffer != null\">\r\n                <h6 class=\"uk-margin-remove-bottom uk-padding-remove-bottom\">{{ selectedOffer.DisplayName }}</h6>\r\n                <hr />\r\n            </div>\r\n            <app-product-list [productList]=\"productList\">\r\n            </app-product-list>\r\n        </div>\r\n\r\n    </layout>\r\n</activity>","import { Component, Injector, OnInit } from '@angular/core';\r\nimport { Category, CategoryFilter } from 'src/app/models/category';\r\nimport { ProductQueryType, ResponseObject } from 'src/app/models/common';\r\nimport { OfferBanner, OfferFilter } from 'src/app/models/offer';\r\nimport { Product, ProductFilter } from 'src/app/models/product';\r\nimport { ProductGroup, ProductGroupFilter } from 'src/app/models/product-group';\r\nimport { SubCategory, SubCategoryFilter } from 'src/app/models/sub-category';\r\nimport { CategoriesService } from 'src/app/services/api-services/categories.service';\r\nimport { OfferService } from 'src/app/services/api-services/offers.service';\r\nimport { ProductGroupsService } from 'src/app/services/api-services/product-groups.service';\r\nimport { ProductsService } from 'src/app/services/api-services/products.service';\r\nimport { SubCategoriesService } from 'src/app/services/api-services/sub-categories.service';\r\nimport { fadeInOutAmination, openCloseAnimation } from 'src/app/shared/animations';\r\nimport { BaseComponent } from 'src/app/shared/base.component';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n\r\ndeclare var UIkit: any;\r\n\r\n@Component({\r\n  selector: 'app-categories',\r\n  templateUrl: './categories.component.html',\r\n  styleUrls: ['./categories.component.scss'],\r\n  animations: [\r\n    openCloseAnimation,\r\n    fadeInOutAmination\r\n  ]\r\n})\r\nexport class CategoriesComponent extends BaseComponent implements OnInit {\r\n\r\n  assetsUrl: string = environment.assetsUrl;\r\n  uploadsUrl: string = environment.uploadsUrl;\r\n\r\n  header: string = \"Categories\";\r\n\r\n  categories: Category[] = [];\r\n  subCategories: SubCategory[] = [];\r\n  productGroups: ProductGroup[] = [];\r\n  offerBanners: OfferBanner[] = [];\r\n\r\n  categoryId: number;\r\n  subCategoryId: number;\r\n  selectedOffer: OfferBanner | null;\r\n  productGroupId: number | undefined;\r\n\r\n  categoryKey: string | undefined;\r\n  subCategoryKey: string | undefined;\r\n  productGroupKey: string | undefined;\r\n\r\n  isNoMore: boolean = false;\r\n\r\n\r\n  asyncCount: number = 0;\r\n\r\n  categoryFilter: CategoryFilter = new CategoryFilter();\r\n  subCategoryFilter: SubCategoryFilter = new SubCategoryFilter();\r\n  productGroupFilter: ProductGroupFilter = new ProductGroupFilter();\r\n  productFilter: ProductFilter = new ProductFilter();\r\n\r\n  childSubs: any = null;\r\n  subCategorySub: any = null;\r\n\r\n  productList: Product[] = [];\r\n  isProductPage: boolean = false;\r\n\r\n  get activeProductGroups(): ProductGroup[] {\r\n    return this.productGroups.filter(j => this.productGroupId == j.Id);\r\n  }\r\n\r\n  get inActiveProductGroups(): ProductGroup[] {\r\n    return this.productGroups.filter(j => this.productGroupId != j.Id);\r\n  }\r\n\r\n  // item: Product = {\r\n  //   ProductImages: ['/Storage/Uploads/ProductImages/46e1f218e32d4001863a60cceb3ebb91.jpg'],\r\n  //   ProductName: \"abcd\",\r\n  //   BrandId: 1,\r\n  //   Description: '',\r\n  //   Id: 1,\r\n  //   ProductCode: \"111\",\r\n  //   ProductVariants: [],\r\n  //   SubCategoryId: 1,\r\n  //   BrandName: '',\r\n  //   SubCategoryName: '',\r\n  // };\r\n  constructor(protected injector: Injector,\r\n    protected categoryService: CategoriesService,\r\n    protected subCategoryService: SubCategoriesService,\r\n    protected productGroupService: ProductGroupsService,\r\n    private productService: ProductsService, protected offerSeervice: OfferService) {\r\n    super(injector);\r\n  }\r\n\r\n  GetSubCategoriesLabel(category: Category): string {\r\n    let list: string[] = [];\r\n    let count: number = 0;\r\n    this.subCategories.forEach((subCategory: SubCategory) => {\r\n      if (category.Id == subCategory.CategoryId && count < 3) {\r\n        count++;\r\n        list.push(subCategory.SubCategoryName);\r\n      }\r\n    })\r\n    return list.join(\", \")\r\n  }\r\n\r\n  GetSubCategories(category: Category): SubCategory[] {\r\n    let list: SubCategory[] = [];\r\n    this.subCategories.forEach((subCategory: SubCategory) => {\r\n      if (category.Id == subCategory.CategoryId) {\r\n        list.push(subCategory);\r\n      }\r\n    })\r\n    return list;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.isNoMore = false;\r\n\r\n\r\n    this.route.params.subscribe(res => {\r\n      console.log(\"......\")\r\n    });\r\n\r\n    this.route.firstChild?.params.subscribe(res => {\r\n      this.selectedOffer = null;\r\n      this.productList = [];\r\n      this.isNoMore = false;\r\n      this.productFilter.PageNumber = -1;\r\n\r\n      this.categoryKey = res.categoryKey;\r\n\r\n      this.categoryId = (this.categories.find(i => i.RouteKey == this.categoryKey))?.Id ?? 0;\r\n\r\n      this.loadOffers(() => {\r\n        this.checkOfferId(() => {\r\n          debugger;\r\n          this.loadProductFromStart();\r\n        });\r\n      });\r\n    });\r\n\r\n    if (this.subCategorySub == null) {\r\n      this.subCategorySub = this.route.firstChild?.firstChild?.firstChild?.params.subscribe(res => {\r\n\r\n        this.isProductPage = true;\r\n        this.subCategoryKey = res.subCategoryKey;\r\n        this.subCategoryId = (this.subCategories.find(i => i.RouteKey == this.subCategoryKey))?.Id ?? -1;\r\n        this.loadProductGroups();\r\n        this.loadProductFromStart();\r\n      });\r\n    }\r\n\r\n    if (this.childSubs == null) {\r\n      this.childSubs = this.route.firstChild?.firstChild?.firstChild?.firstChild?.firstChild?.params.subscribe(res => {\r\n\r\n        this.isProductPage = true;\r\n        this.productGroupId = (this.productGroups.find(i => this.productGroupKey == res.RouteKey)?.Id);\r\n      })\r\n    }\r\n\r\n    this.loadCategories(() => {\r\n      this.categoryId = (this.categories.find(i => i.RouteKey == this.categoryKey))?.Id ?? 0;\r\n\r\n      this.loadSubCategories(() => {\r\n\r\n        this.asyncCount++;\r\n        this.subCategoryId = (this.subCategories.find(i => i.RouteKey == this.subCategoryKey))?.Id ?? -1;\r\n\r\n        // this.loadProductGroups(() => {\r\n        //   this.productGroupId = (this.productGroups.find(i => i.RouteKey == this.productGroupKey))?.Id;\r\n        // })\r\n        this.loadProductGroups();\r\n      });\r\n    });\r\n\r\n    this.loadOffers(() => {\r\n      this.asyncCount++;\r\n      this.checkOfferId(() => {\r\n        this.loadAfterAsync();\r\n      });\r\n    });\r\n  }\r\n\r\n\r\n  checkOfferId(callBack?: any) {\r\n    debugger;\r\n    if (this.categoryId == 0 && this.offerBanners != null) {\r\n\r\n      this.selectedOffer = this.offerBanners.find(i => i.OfferUrl == this.categoryKey) ?? null;\r\n      if (this.selectedOffer != null) {\r\n        this.header = this.selectedOffer?.DisplayName ?? this.header;\r\n        if (callBack) callBack();\r\n      }\r\n    } else {\r\n      this.selectedOffer = null;\r\n      this.asyncCount = 0\r\n    }\r\n  }\r\n\r\n  loadAfterAsync() {\r\n    if (this.asyncCount >= 2) {\r\n      this.asyncCount = 0;\r\n      this.loadProductFromStart();\r\n    }\r\n  }\r\n\r\n  loadOffers(callBack?: any): void {\r\n\r\n    if (this.offerBanners != null && this.offerBanners.length > 0) {\r\n      if (callBack) callBack();\r\n      return;\r\n    }\r\n    let filter = new OfferFilter();\r\n    this.offerSeervice.getOfferBannerList(filter).subscribe((res: ResponseObject<OfferBanner[]>) => {\r\n      res.Data?.forEach((item: OfferBanner) => {\r\n        item.BannerImageUrl = item.BannerImageUrl.replace(\"~/\", '');\r\n      })\r\n      this.offerBanners = (res.Data ?? [])//.filter(i => i.Placement == OfferBannerPlacement.DesktopOffers);\r\n      if (callBack) callBack();\r\n    })\r\n  }\r\n\r\n\r\n  loadCategories(callBack?: any) {\r\n\r\n    if (this.categories.length == 0) {\r\n      this.categoryService.getCategoryList(this.categoryFilter).subscribe((res: ResponseObject<Category[]>) => {\r\n        if (res.Data != null && res.Data.length > 0) {\r\n          res.Data.forEach(item => {\r\n            item.CategoryBanner = item.CategoryBanner.replace('~', '');\r\n            item.CategoryImage = item.CategoryImage.replace('~', '');\r\n          })\r\n        }\r\n        this.categories = res.Data ?? [];\r\n        this.categoryId = (this.categories.find(i => i.RouteKey == this.categoryKey))?.Id ?? 0;\r\n        if (callBack) callBack();\r\n      });\r\n    }\r\n    else if (callBack) callBack();\r\n  }\r\n\r\n  loadSubCategories(callBack?: any) {\r\n\r\n    if (this.subCategories.length == 0) {\r\n      this.subCategoryService.getSubCategoryList(this.subCategoryFilter).subscribe((res: ResponseObject<SubCategory[]>) => {\r\n        this.subCategories = res.Data ?? [];\r\n        let subCategory = (this.subCategories.find(i => i.RouteKey == this.subCategoryKey));\r\n        this.subCategoryId = subCategory?.Id ?? -1;\r\n        this.header = subCategory?.SubCategoryName ?? '';\r\n        if (callBack) callBack();\r\n      });\r\n    }\r\n    else if (callBack) callBack();\r\n  }\r\n\r\n  loadProductGroups(callBack?: any) {\r\n\r\n    this.productGroupId = undefined;\r\n    this.productGroupFilter.SubCategoryId = this.subCategories.find(i => i.RouteKey == this.subCategoryKey)?.Id ?? -1;\r\n    this.productGroupService.getProductGroupList(this.productGroupFilter).subscribe((res: ResponseObject<ProductGroup[]>) => {\r\n      this.productGroups = res.Data ?? [];\r\n\r\n      this.productGroupId = (this.productGroups.find(i => this.productGroupKey == i.RouteKey)?.Id);\r\n      if (callBack) callBack();\r\n    });\r\n  }\r\n\r\n  navigateCategory(category: Category, event: any, i: number) {\r\n    this.selectedOffer = null;\r\n    this.categoryKey = category.RouteKey;\r\n    this.categoryId = category.Id;\r\n    event.stopPropagation();\r\n    UIkit.accordion('#left-menu').toggle(i);\r\n  }\r\n\r\n  navigateSubCategory(subCategory: SubCategory) {\r\n    this.selectedOffer = null;\r\n    this.subCategoryKey = subCategory.RouteKey;\r\n    this.subCategoryId = subCategory.Id;\r\n    this.header = subCategory?.SubCategoryName ?? '';\r\n    this.router.navigateByUrl('/collections/' + this.categoryKey + '/' + subCategory.RouteKey);\r\n    this.productGroupId = undefined;\r\n    this.loadProductGroups();\r\n    this.loadProductFromStart();\r\n  }\r\n\r\n  onScroll(event: any) {\r\n    // visible height + pixel scrolled >= total height \r\n    if (event.target.offsetHeight + event.target.scrollTop >= event.target.scrollHeight - 5 && !this.isNoMore) {\r\n      this.loadProducts();\r\n    }\r\n  }\r\n\r\n  loadProductFromStart() {\r\n\r\n    this.isNoMore = false;\r\n    this.productList = [];\r\n    this.productFilter.PageNumber = -1;\r\n    this.showSpinner();\r\n    this.loadProducts();\r\n  }\r\n\r\n  loadProducts() {\r\n    this.productFilter.PageSize = 20;\r\n    this.productFilter.PageNumber++;\r\n    this.productFilter.CategoryKey = this.categoryKey ?? \"\";\r\n    this.productFilter.SubCategoryKey = this.subCategoryKey ?? \"\";\r\n    this.productFilter.ProductGroupKey = this.productGroupKey ?? \"\";\r\n    this.productFilter.ProductGroupId = this.productGroupId;\r\n    if (this.selectedOffer != null) {\r\n      this.productFilter.OfferId = this.selectedOffer.OfferId;\r\n      this.productFilter.ProductQueryType = ProductQueryType.Offers;\r\n    }\r\n    else {\r\n      this.productFilter.ProductQueryType = ProductQueryType.FilterOrNone;\r\n    }\r\n\r\n    this.productService.getProductList(this.productFilter).subscribe((res: ResponseObject<Product[]>) => {\r\n      let data = res.Data ?? [];\r\n\r\n      if (!environment.production) {\r\n        console.log(\"Products Loaded: \");\r\n        console.log(data);\r\n      }\r\n      let products: Product[] = this.processProductList(data);\r\n      products.forEach(item => {\r\n        this.productList.push(item);\r\n      })\r\n      this.isProductPage = true;\r\n      this.isNoMore = this.productList.length > 0 && products.length == 0;\r\n    })\r\n  }\r\n\r\n  processProductList(list: Product[]): Product[] {\r\n    let _res: Product[] = []\r\n    list.forEach(item => {\r\n      let images: string[] = [];\r\n      item.ProductImages.forEach(img => {\r\n        images.push(img.replace('~', ''));\r\n      });\r\n      item.ProductImages = images\r\n      _res.push(item);\r\n    });\r\n    return _res;\r\n  }\r\n}\r\n","import { Component, Injector, Input, OnInit } from '@angular/core';\r\nimport { Category } from 'src/app/models/category';\r\nimport { ResponseObject } from 'src/app/models/common';\r\nimport { Product, ProductFilter } from 'src/app/models/product';\r\nimport { ProductsService } from 'src/app/services/api-services/products.service';\r\nimport { BaseComponent } from 'src/app/shared/base.component';\r\nimport { BottomNavItem } from 'src/app/shared/ngx-bottom-nav/models/bottom-nav';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-mobile-home',\r\n  templateUrl: './mobile-home.component.html',\r\n  styleUrls: ['./mobile-home.component.scss']\r\n})\r\nexport class MobileHomeComponent extends BaseComponent implements OnInit {\r\n\r\n  displayCart: boolean = false;\r\n\r\n  featuredProducts: Product[] = [];\r\n  suggestedProducts: Product[] = [];\r\n\r\n  currentRoute: string = \"\";\r\n\r\n  constructor(protected injector: Injector,\r\n    private productService: ProductsService) {\r\n\r\n    super(injector);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    let filter: ProductFilter = new ProductFilter();\r\n    filter.PageSize = 6;\r\n    this.productService.getProductList(filter).subscribe((res: ResponseObject<Product[]>) => {\r\n\r\n      let data = res.Data ?? [];\r\n\r\n      if (!environment.production) {\r\n        console.log(\"Products Loaded: \");\r\n        console.log(data);\r\n      }\r\n      this.featuredProducts = this.processProductList(data);\r\n    });\r\n\r\n    filter.PageSize = 6;\r\n    this.productService.getProductList(filter).subscribe((res: ResponseObject<Product[]>) => {\r\n\r\n      let data = res.Data ?? [];\r\n\r\n      if (!environment.production) {\r\n        console.log(\"Products Loaded: \");\r\n        console.log(data);\r\n      }\r\n      this.suggestedProducts = this.processProductList(data);\r\n    });\r\n  }\r\n\r\n  onCategoryClicked(event: Category) {\r\n    this.router.navigate(['/categories', event.Id]);\r\n  }\r\n\r\n  reachedEnd() {\r\n  }\r\n\r\n  processProductList(list: Product[]): Product[] {\r\n    let _res: Product[] = []\r\n    list.forEach(item => {\r\n      let images: string[] = [];\r\n      item.ProductImages.forEach(img => {\r\n        images.push(img.replace('~', ''));\r\n      });\r\n      item.ProductImages = images\r\n      _res.push(item);\r\n    });\r\n    return _res;\r\n  }\r\n}\r\n","<div class=\"main-container\">\r\n    <app-mb-home-navbar></app-mb-home-navbar>\r\n    <app-mb-home-main-banner></app-mb-home-main-banner>\r\n    <app-mb-home-categories></app-mb-home-categories>\r\n    <app-mb-home-stories-offers></app-mb-home-stories-offers>\r\n    <app-mb-home-offer-slider [productList]=\"featuredProducts\"></app-mb-home-offer-slider>\r\n    <!-- <app-mb-home-brands></app-mb-home-brands> -->\r\n    <app-mb-home-slider-banner></app-mb-home-slider-banner>\r\n    <app-mb-home-offer-slider [productList]=\"suggestedProducts\"></app-mb-home-offer-slider>\r\n</div>","import { Component, Injector, Input, OnInit } from '@angular/core';\r\nimport { Meta } from '@angular/platform-browser';\r\nimport { Router, NavigationEnd, RouterOutlet } from '@angular/router';\r\nimport { NotifierService } from 'angular-notifier';\r\nimport { filter } from 'rxjs/operators';\r\nimport { AuthenticationService } from 'src/app/auth/_services/authentication.service';\r\nimport { ModalRequest, ModalType, ResponseObject, Result } from 'src/app/models/common';\r\nimport { Product } from 'src/app/models/product';\r\nimport { flyInOutAnimation } from 'src/app/shared/animations';\r\nimport { BaseComponent } from 'src/app/shared/base.component';\r\nimport { BottomNavItem } from 'src/app/shared/ngx-bottom-nav/models/bottom-nav';\r\nimport { environment } from 'src/environments/environment';\r\n\r\ndeclare var UIkit: any;\r\n\r\n// const behaviourRoutes = [\r\n  // {\r\n  //   behaviour: 'modal', id: 'my-cart', path: '/cart', active: false, data: null\r\n  // },\r\n  // {\r\n  //   behaviour: 'modal', id: 'place-order', path: '/place-order', active: false, data: null\r\n  // },\r\n  // {\r\n  //   behaviour: 'modal', id: 'login-modal', path: '/login', active: false, data: null\r\n  // },\r\n  // {\r\n  //   behaviour: 'modal', id: 'otp-modal', path: '/otp', active: false, data: null\r\n  // },\r\n  // {\r\n  //   behaviour: 'modal', id: 'address-modal', path: '/my-addresses', active: false, data: null\r\n  // },\r\n  // {\r\n  //   behaviour: 'modal', id: 'add-address-modal', path: '/address', active: false, data: null\r\n  // },\r\n  // {\r\n  //   behaviour: 'modal', id: 'edit-address-modal', path: '/edit-address', active: false, data: null\r\n  // },\r\n  // {\r\n  //   behaviour: 'modal', id: 'order-succss-modal', path: '/order-success', active: false, data: null\r\n  // },\r\n  // {\r\n  //   behaviour: 'modal', id: 'my-orders', path: '/my-orders', active: false, data: null\r\n  // },\r\n  // {\r\n  //   behaviour: 'modal', id: 'order-details', path: '/order-details', active: false, data: null\r\n  // },\r\n// ]\r\n\r\n@Component({\r\n  selector: 'app-mobile-layout',\r\n  templateUrl: './mobile-layout.component.html',\r\n  styleUrls: ['./mobile-layout.component.scss']\r\n})\r\nexport class MobileLayoutComponent extends BaseComponent implements OnInit {\r\n\r\n  product: Product;\r\n\r\n  // cartInfo: any = behaviourRoutes[0];\r\n\r\n  // placeOrderInfo: any = behaviourRoutes[1];\r\n\r\n  // loginInfo: any = behaviourRoutes[2];\r\n\r\n  // otpInfo: any = behaviourRoutes[3];\r\n\r\n  // addressInfo: any = behaviourRoutes[4];\r\n\r\n  // addAddressInfo: any = behaviourRoutes[0];\r\n\r\n  // editAddressInfo: any = behaviourRoutes[1];\r\n\r\n  // orderSuccessInfo: any = behaviourRoutes[7];\r\n\r\n  // myOrdersInfo: any = behaviourRoutes[8];\r\n\r\n  // orderDetailsInfo: any = behaviourRoutes[9];\r\n\r\n  @Input() title: string = environment.appName;\r\n\r\n  constructor(private meta: Meta, protected injector: Injector, private authService: AuthenticationService,\r\n    private notifierService: NotifierService,\r\n    protected router: Router) {\r\n    super(injector);\r\n\r\n  }\r\n\r\n  currentNotification: any[] = [];\r\n  \r\n  showBottomNav: boolean = true;\r\n\r\n  public items: BottomNavItem[] = [\r\n    { icon: 'home', label: 'Home', routerLink: \"\", routerLinkParams: [\"home\"], active: true },\r\n    { icon: 'list', label: 'Categories', routerLink: \"collections\", routerLinkParams: [\"collections\"] },\r\n    { icon: 'search', label: 'Search', routerLink: \"search\", routerLinkParams: [\"search\"] },\r\n    { icon: 'shopping_cart', label: 'Cart', routerLink: \"cart\", routerLinkParams: [\"cart\"] },\r\n    { icon: 'person', label: 'Account', routerLink: \"profile\", routerLinkParams: [\"profile\"] }\r\n  ];\r\n\r\n  checkUrl() {\r\n\r\n    this.items.forEach(i => {\r\n      i.active = false\r\n\r\n      if (i.routerLink == '' && document.location.pathname == '') {\r\n        i.active = true;\r\n      }\r\n      else if (i.routerLink != '' && document.location.pathname.toString().toLowerCase().indexOf(i.routerLink) > -1) {\r\n        i.active = true;\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.setUpNotifier();\r\n\r\n    this.router.events.pipe(\r\n      filter((event: any) => event instanceof NavigationEnd)\r\n    ).subscribe(x => {\r\n      this.checkUrl();\r\n    });\r\n\r\n    this.route.firstChild?.params.subscribe(() => {\r\n      console.log('changing route');\r\n    })\r\n\r\n\r\n    this.checkUrl();\r\n\r\n    this.initOffCanvas();\r\n\r\n    //   });\r\n    // })\r\n    // ).subscribe(x => console.log(x))\r\n    //     .subscribe((event: any) => \r\n    //      {\r\n    //         // this.currentRoute = event.url;          \r\n    //         console.log(event);\r\n    //      }); \r\n\r\n    // this.route.params.subscribe(res => {\r\n    //  this.items.forEach(i => i.active = false);\r\n    //  if(res.url == )\r\n    // });\r\n\r\n    this.utilities.dialogRequest.subscribe((request: ModalRequest) => {\r\n      if (request.modalType == ModalType.ProductVariant) {\r\n        this.product = <Product>request.data;\r\n        if (request.open)\r\n          this.showModal(\"#product-variant\", () => { });\r\n        else\r\n          this.hideModal(\"#product-variant\", true);\r\n      } else if (request.modalType == ModalType.ProductOverview) {\r\n        console.log(request.data);\r\n        this.product = <Product>request.data;\r\n        if (request.open)\r\n          this.showModal(\"#product-modal\", () => { });\r\n        else\r\n          this.hideModal(\"#product-modal\", true);\r\n      }\r\n      else if (request.modalType == ModalType.TimingSelection) {\r\n        if (request.open)\r\n          this.showModal(\"#time-selection\", () => { });\r\n        else\r\n          this.hideModal(\"#time-selection\", true);\r\n      }\r\n    })\r\n    this.meta.updateTag(\r\n      { name: 'viewport', content: 'width=device-width, initial-scale=1, user-scalable=no' },\r\n      'name=viewport'\r\n    )\r\n  }\r\n\r\n  routeData: any;\r\n\r\n  initOffCanvas() {\r\n\r\n    // this.router.events.pipe(\r\n    //   filter((event: any) => event instanceof NavigationEnd)\r\n    // ).subscribe(x => {\r\n\r\n    //   let found: boolean = false;\r\n    //   for (let _route of behaviourRoutes) {\r\n    //     if (x.url.indexOf(_route.path) > -1) {\r\n    //       let routes = x.url.split(_route.path + '/');\r\n    //       _route.data = routes.length > 1 ? routes[1] : null;\r\n    //       _route.active = true;\r\n    //       found = true;\r\n    //       setTimeout(() => {\r\n    //         let id = '#' + _route.id;\r\n    //         let behaviour = UIkit[_route.behaviour](id);\r\n    //         while (behaviour == undefined || behaviour == null) {\r\n    //           behaviour = UIkit[_route.behaviour](id);\r\n    //         }\r\n    //         behaviour.show();\r\n    //         UIkit.util.on(id, 'hidden', () => {\r\n    //           let url = this.router.url.split(_route.path)[0];\r\n    //           this.router.navigateByUrl(url, { replaceUrl: true });\r\n    //         });\r\n    //       });\r\n    //     }\r\n    //   }\r\n\r\n    //   if (!found) {\r\n    //     for (let _route of behaviourRoutes) {\r\n    //       setTimeout(() => {\r\n    //         _route.active = false;\r\n    //         let id = '#' + _route.id;\r\n    //         let behaviour = UIkit[_route.behaviour](id);\r\n    //         while (behaviour == undefined || behaviour == null) {\r\n    //           behaviour = UIkit[_route.behaviour](id);\r\n    //         }\r\n    //         behaviour.hide();\r\n    //       });\r\n    //     }\r\n    //   }\r\n    // })\r\n  }\r\n\r\n  prepareRoute(outlet: RouterOutlet) {\r\n    return outlet && outlet.activatedRouteData && outlet.activatedRouteData['animation'];\r\n  }\r\n\r\n  \r\n  setUpNotifier() { \r\n    this.apiRequestService.onMessage$.subscribe((res: ResponseObject<any>) => {\r\n    if (res.Data != null && res.Data.status != 0 && res.Message != null && res.Message.trim() != \"\") {\r\n      \r\n      this.checkCounterForSimilarMessage(res, () => {\r\n        this.notifierService.notify(\r\n          res.Result == Result.Success ? 'success' :\r\n            ((res.Result == Result.Failure || res.Result == Result.ValidationError || res.Result == Result.Unauthorized) ? 'warning'\r\n              : 'error')\r\n          , res.Message);\r\n          if(res.Data != null && res.Data.callback != null) {\r\n            res.Data.callback();\r\n          }\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  checkCounterForSimilarMessage(res, callBack?: any) {\r\n    let existingIndex = this.currentNotification.findIndex(i => i.Message = res.Message && i.Result == res.Result);\r\n    if (existingIndex > -1) {\r\n      setTimeout(() => {\r\n        if (existingIndex < this.currentNotification.length)\r\n          this.currentNotification.splice(existingIndex, 1);\r\n      }, 2000);\r\n    } else {\r\n      this.currentNotification.push(Object.assign({}, res));\r\n      callBack();\r\n    }\r\n    return false;\r\n  }\r\n}\r\n","<div class=\"root-div\">\r\n    <div>\r\n        <router-outlet #outlet=\"outlet\"></router-outlet>\r\n    </div>\r\n\r\n    <ngx-bottom-nav [ngClass]=\"showBottomNav ? 'displayBlock' : 'displayNone'\" [items]=\"items\" color=\"primary\">\r\n    </ngx-bottom-nav>\r\n    \r\n    <app-mb-product-variant [product]=\"product\" id=\"product-variant\" uk-modal=\"stack:true;\"\r\n        class=\"uk-flex-top uk-flex-center\">\r\n    </app-mb-product-variant>\r\n\r\n    <app-mb-timing-selector id=\"time-selection\" uk-modal=\"stack:true;\" class=\"uk-flex-top uk-flex-center\">\r\n    </app-mb-timing-selector>\r\n\r\n    <notifier-container></notifier-container>\r\n    \r\n</div>","<div class=\"uk-container uk-container-xlarge uk-padding-remove main-container\">\r\n\r\n    <app-mb-home-navbar></app-mb-home-navbar>\r\n    <div class=\"offer-container\" uk-scrollspy=\"target: > div; cls: uk-animation-slide-bottom-small; delay: 200\">\r\n        <div class=\"offer-grid\" *ngFor=\"let item of offerBanners\">\r\n            <a [routerLink]=\"'products/' + item.OfferUrl\">\r\n                <img [attr.src]=\"uploadsUrl + '/' + item.BannerImageUrl\" class=\"offer-img\" alt=\"\">\r\n            </a>\r\n            <p class=\"offer-title\">{{ item.DisplayName }}</p>\r\n            <p class=\"offer-details\">{{ item.Description }}</p>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, Injector, OnInit } from '@angular/core';\r\nimport { ResponseObject } from 'src/app/models/common';\r\nimport { OfferBanner, OfferFilter, OfferBannerPlacement } from 'src/app/models/offer';\r\nimport { OfferService } from 'src/app/services/api-services/offers.service';\r\nimport { BaseComponent } from 'src/app/shared/base.component';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-offers-view',\r\n  templateUrl: './offers-view.component.html',\r\n  styleUrls: ['./offers-view.component.scss']\r\n})\r\nexport class OffersViewComponent extends BaseComponent implements OnInit {\r\n\r\n  uploadsUrl: string = environment.uploadsUrl;\r\n\r\n  offerBanners: OfferBanner[] = [];\r\n\r\n  constructor(protected injector: Injector, protected offerSeervice: OfferService) {\r\n    super(injector);\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    let filter = new OfferFilter();\r\n    this.offerSeervice.getOfferBannerList(filter).subscribe((res: ResponseObject<OfferBanner[]>) => {\r\n      res.Data?.forEach((item: OfferBanner) => {\r\n        item.BannerImageUrl = item.BannerImageUrl.replace(\"~/\", '');\r\n      })\r\n      this.offerBanners = (res.Data ?? []).filter(i => i.Placement == OfferBannerPlacement.MobileOffers);\r\n    })\r\n  } \r\n\r\n}\r\n","<div class=\"uk-container uk-container-xlarge main-container uk-padding-remove\">\r\n    <app-mb-header-nav></app-mb-header-nav>\r\n\r\n    <div class=\"uk-container uk-container-xlarge product-container\">\r\n        <div class=\"uk-child-width-1-1@s uk-grid-collapse uk-child-width-1-1@m uk-text-center\" uk-grid>\r\n            <div *ngIf=\"product != null\">\r\n                <div class=\"uk-card uk-padding-remove uk-margin-small-top uk-text-left uk-card-body\">\r\n                    <img *ngIf=\"product != null && product?.ProductImages != null\" class=\"product-img uk-align-center\"\r\n                        [attr.src]=\"imgUrl  + '/' + product.ProductImages[0]\" alt=\"\">\r\n                    <p class=\"product-name\"> {{ product?.ProductName }} </p>\r\n                    <p class=\"product-subcategory\">{{ product?.SubCategoryName }}</p>\r\n\r\n                    <p class=\"product-price uk-margin-remove\"> <span class=\"offer-price\"><span\r\n                                class=\"r-symbol\">₹</span>{{ selectedProduct?.Price | number: '1.1-2' }}</span>\r\n                        <span class=\"mrp-price\"><span class=\"r-symbol\">₹</span>{{ selectedProduct?.Mrp }}</span>\r\n                        <span class=\"offer-badge\">{{ selectedProduct?.DiscountPercentage }}% OFF</span>\r\n                    </p>\r\n                    <p class=\"qty-title\">Pack Size</p>\r\n                    <p class=\"qty-btn uk-margin-remove\">\r\n\r\n                        <ng-container *ngFor=\"let variant of product?.ProductVariants; let i = index\">\r\n                            <button class=\"uk-button uk-button-small var-btn\"\r\n                                [class.selected]=\"selectedProduct?.Id == variant.Id\" (click)=\"selectedIndex = i\">{{ variant?.Volume }}\r\n                                {{ variant?.MeasureName }}</button>\r\n                        </ng-container>\r\n\r\n                        <!-- <button class=\"uk-button uk-button-small var-btn\">100 GM</button> -->\r\n                    </p>\r\n                    <br />\r\n                    <div *ngIf=\"cartCount[selectedIndex] > 0\">\r\n                        <span uk-icon=\"icon:minus-circle; ratio: 0.8;\" class=\"price-addon-btn\"\r\n                            (click)=\"removeFromCart()\"></span>\r\n                        <input type=\"text\" name=\"\" id=\"\" [value]=\"cartCount[selectedIndex]\"\r\n                            class=\"uk-input uk-form-small price-addon-qty\" maxlength=\"2\">\r\n                        <span uk-icon=\"icon:plus-circle; ratio: 0.8;\" class=\"price-addon-btn\"\r\n                            (click)=\"addToCart()\"></span>\r\n                    </div>\r\n\r\n                    <button *ngIf=\"cartCount[selectedIndex] == 0\" (click)=\"addToCart()\"\r\n                        class=\"uk-button uk-button-small var-btn selected\">Add to cart</button>\r\n                    <p class=\"desc-title\">Description</p>\r\n                    <hr class=\"desc-hr\">\r\n                    <p class=\"product-desc\">\r\n                        {{ product?.Description }}\r\n                    </p>\r\n                    <!-- <app-mb-related-products></app-mb-related-products> -->\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, Injector, OnInit } from '@angular/core';\r\nimport { ResponseObject } from 'src/app/models/common';\r\nimport { Product, ProductVariant } from 'src/app/models/product';\r\nimport { ProductsService } from 'src/app/services/api-services/products.service';\r\nimport { CartService } from 'src/app/services/cart.service';\r\nimport { BaseComponent } from 'src/app/shared/base.component';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-product-details',\r\n  templateUrl: './product-details.component.html',\r\n  styleUrls: ['./product-details.component.scss']\r\n})\r\nexport class ProductDetailsComponent extends BaseComponent implements OnInit {\r\n\r\n  assetsUrl: string = environment.assetsUrl;\r\n\r\n  productId: number = 0;\r\n\r\n  product: Product | null = null;\r\n\r\n\r\n  imgUrl: string = environment.uploadsUrl;\r\n  selectedIndex: number = 0;\r\n\r\n  get selectedProduct(): ProductVariant | undefined {\r\n    if (this.product != null && this.product.ProductVariants.length > 0) {\r\n      return this.product.ProductVariants[this.selectedIndex];\r\n    }\r\n    else return;\r\n  }\r\n\r\n  get cartCount(): number[] {\r\n    let count: number[] = [];\r\n    if (this.product != null && this.product.ProductVariants?.length > 0) {\r\n      for (let item of this.product.ProductVariants) {\r\n        count.push(this.cartService.getProductCartCount(item.Id));\r\n      }\r\n    }\r\n    return count;\r\n  }\r\n\r\n\r\n  constructor(protected injector: Injector, private cartService: CartService,\r\n    private productService: ProductsService) {\r\n    super(injector);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.route.params.subscribe(map => {\r\n      this.productId = parseInt(map[\"id\"] ?? '-1');\r\n\r\n      this.productService.getProductInfo(this.productId).subscribe((res: ResponseObject<Product>) => {\r\n        let arr = Object.assign([], res.Data?.ProductImages);\r\n        if (res.Data != null) {\r\n          res.Data.ProductImages = [];\r\n          arr.forEach((item: string) => {\r\n            var str = item.replace('~/', '');\r\n            res.Data?.ProductImages.push(str);\r\n          })\r\n        } \r\n        this.product = res.Data ?? null;\r\n      })\r\n    })\r\n  }\r\n\r\n\r\n  addToCart() {\r\n    this.cartService.addItem(this.selectedProduct?.Id ?? 0);\r\n  }\r\n\r\n  removeFromCart() {\r\n    this.cartService.decreaseItem(this.selectedProduct?.Id ?? 0);\r\n  }\r\n\r\n}\r\n","<ng-container *ngFor=\"let item of productList\">\r\n    <app-mb-product-grids [product]=\"item\"></app-mb-product-grids>\r\n</ng-container>","import { Component, Input, OnInit } from '@angular/core';\r\nimport { Product } from 'src/app/models/product';\r\n\r\n@Component({\r\n  selector: 'app-product-list',\r\n  templateUrl: './product-list.component.html',\r\n  styleUrls: ['./product-list.component.scss']\r\n})\r\nexport class ProductListComponent implements OnInit {\r\n\r\n  @Input() productList: Product[];\r\n  \r\n  constructor() { }\r\n \r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"uk-container uk-container-xlarge uk-padding-remove main-container\">\r\n\r\n  <ngx-spinner [name]=\"loadSpinner\" [fullScreen]=\"false\">\r\n  </ngx-spinner>\r\n\r\n  <app-mb-header-nav [hasNav]=\"false\" [title]=\"'Modern Mart'\" [isTitleCenter]=\"false\" [hasActions]=\"true\">\r\n    <ul class=\"uk-navbar-nav\">\r\n      <li class=\"uk-active\">\r\n          <a routerLink=\"/offers\">\r\n              <span class=\"material-icons-round profile-icon\">\r\n                  card_giftcard\r\n              </span>\r\n          </a>\r\n      </li>\r\n      <li class=\"uk-active\">\r\n          <a routerLink=\"/notifications\">\r\n              <span class=\"material-icons-round profile-icon\">\r\n                  notifications\r\n              </span>\r\n          </a>\r\n      </li>\r\n  </ul>\r\n  </app-mb-header-nav>\r\n\r\n\r\n  <div *ngIf=\"!isUserLogged\">\r\n    <br /><br />\r\n    <div class=\"uk-padding-large\">\r\n      <button class=\"uk-button logout-btn\" [routerLink]=\"'/login'\">\r\n        <span class=\"material-icons-round\">\r\n          login\r\n        </span>Login\r\n      </button>\r\n    </div>\r\n  </div>\r\n  <div class=\"cont-container\">\r\n    <div class=\"account-grid uk-text-center\" *ngIf=\"isUserLogged\">\r\n      <p class=\"person-name\">{{ userInfo?.FirstName }} {{ userInfo?.LastName }} </p>\r\n      <p class=\"person-phone\">\r\n        <span class=\"material-icons-round phone-icon\">smartphone</span> +91-{{ userInfo?.UserName }}\r\n      </p>\r\n      <p class=\"person-mail\">{{ userInfo?.Email }}</p>\r\n      <a class=\"edit-icon\" uk-toggle=\"target: #edit-user\">\r\n        <span class=\"material-icons-outlined\">\r\n          edit\r\n        </span>\r\n      </a>\r\n    </div>\r\n    <div class=\"uk-container uk-container-xlarge menu-container\" *ngIf=\"isUserLogged\">\r\n\r\n      <table class=\"uk-table uk-table-small uk-table-divider uk-margin-remove-bottom\">\r\n\r\n        <tbody>\r\n\r\n          <tr routerLink=\"/my-orders\">\r\n\r\n            <td class=\"profile-icon\"><span class=\"material-icons-outlined\">\r\n                shopping_basket\r\n              </span>\r\n            <td class=\"profile-name\">My Orders</td>\r\n            <td class=\"profile-chev\"><span class=\"material-icons-round\">\r\n                chevron_right\r\n              </span></td>\r\n          </tr>\r\n          <tr routerLink=\"/wallet\">\r\n            <td class=\"profile-icon\"><span class=\"material-icons-round\">\r\n                account_balance_wallet\r\n              </span></td>\r\n            <td class=\"profile-name\">MM Wallets</td>\r\n            <td class=\"profile-chev\"><span class=\"material-icons-round\">\r\n                chevron_right\r\n              </span></td>\r\n          </tr>\r\n\r\n          <tr routerLink=\"/redeem-wallet\">\r\n            <td class=\"profile-icon\"><span class=\"material-icons-round\">\r\n                redeem\r\n              </span></td>\r\n            <td class=\"profile-name\">Redeem Wallet</td>\r\n            <td class=\"profile-chev\"><span class=\"material-icons-round\">\r\n                chevron_right\r\n              </span></td>\r\n          </tr>\r\n          <tr routerLink=\"/my-addresses\">\r\n            <td class=\"profile-icon\"><span class=\"material-icons-round\">\r\n                person_pin_circle\r\n              </span></td>\r\n            <td class=\"profile-name\">My Address</td>\r\n            <td class=\"profile-chev\"><span class=\"material-icons-round\">\r\n                chevron_right\r\n              </span></td>\r\n          </tr>\r\n          <tr>\r\n            <td class=\"profile-icon\"><span class=\"material-icons-round\">\r\n                support\r\n              </span></td>\r\n            <td class=\"profile-name\">Help</td>\r\n            <td class=\"profile-chev\"><span class=\"material-icons-round\">\r\n                chevron_right\r\n              </span></td>\r\n          </tr>\r\n          <tr>\r\n            <td class=\"profile-icon\"><span class=\"material-icons-round\">\r\n                support_agent\r\n              </span></td>\r\n            <td class=\"profile-name\">Customer Care</td>\r\n            <td class=\"profile-chev\"><span class=\"material-icons-round\">\r\n                chevron_right\r\n              </span></td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n      <button class=\"uk-button logout-btn\" (click)=\"logOutClick()\">\r\n        <span class=\"material-icons-round\"> logout </span>Logout</button>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div id=\"edit-user\" uk-modal>\r\n  <div class=\"uk-modal-dialog uk-modal-body uk-animation-slide-bottom tracking-modal uk-text-left uk-position-bottom\">\r\n\r\n    <form [formGroup]=\"formInstance\" (ngSubmit)=\"formInstance.valid && submitForm()\" class=\"uk-grid-small\" uk-grid>\r\n\r\n      <div class=\"uk-width-1-1 uk-text-center uk-margin-small-bottom uk-margin-small-top\">\r\n        <h6> Update Your Details</h6>\r\n      </div>\r\n \r\n      <div class=\"uk-width-1-1 uk-margin-small-top\">\r\n        <label class=\"uk-form-label\" class=\"userform-label\">Phone number</label>\r\n        <div class=\"uk-inline uk-width-1-1\">\r\n          <span class=\"uk-form-icon userform-code\">\r\n            +91-\r\n          </span>\r\n          <input readonly [formControlName]=\"'PhoneNumber'\" class=\"uk-input user-phone-number userform-input uk-width-1-1\"\r\n            type=\"number\" max-length=\"10\" placeholder=\"Enter your mobile number\">\r\n\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"uk-width-1-1 uk-margin-small-top\">\r\n        <label class=\"uk-form-label\" class=\"userform-label\">Email</label>\r\n        <div class=\"uk-inline uk-width-1-1\">\r\n          <span class=\"uk-form-icon userform-code material-icons-outlined\">\r\n            email\r\n          </span>\r\n          <input [formControlName]=\"'Email'\" class=\"uk-input userform-input uk-width-1-1\" type=\"email\" max-length=\"10\"\r\n            placeholder=\"Enter your email\">\r\n\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"uk-width-1-1 uk-margin-small-top\">\r\n        <label class=\"uk-form-label\" class=\"userform-label\">First Name</label>\r\n        <div class=\"uk-inline uk-width-1-1\">\r\n          <span class=\"uk-form-icon userform-code material-icons-outlined\">\r\n            edit\r\n          </span>\r\n          <input [formControlName]=\"'FirstName'\" class=\"uk-input userform-input uk-width-1-1\" type=\"text\"\r\n            max-length=\"10\" placeholder=\"Enter your first name\">\r\n\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"uk-width-1-1 uk-margin-small-top\">\r\n        <label class=\"uk-form-label\" class=\"userform-label\">Last Name</label>\r\n        <div class=\"uk-inline uk-width-1-1\">\r\n          <span class=\"uk-form-icon userform-code material-icons-outlined\">\r\n            edit\r\n          </span>\r\n          <input [formControlName]=\"'LastName'\" class=\"uk-input userform-input uk-width-1-1\" type=\"text\" max-length=\"10\"\r\n            placeholder=\"Enter your last name\">\r\n\r\n        </div>\r\n      </div>\r\n\r\n      <br />\r\n      <div class=\"uk-width-1-1\">\r\n\r\n        <button type=\"submit\" [attr.disabled]=\"formInstance.valid ? null : 'disabled'\"\r\n          class=\"uk-button userform-submit uk-width-1-1\">\r\n          Update\r\n        </button>\r\n      </div>\r\n    </form>\r\n\r\n  </div>\r\n\r\n\r\n</div>","import { Component, Injector, OnInit } from '@angular/core';\r\nimport { FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { User } from 'src/app/auth/_models/user';\r\nimport { AuthenticationService } from 'src/app/auth/_services/authentication.service';\r\nimport { UserService } from 'src/app/auth/_services/user.service';\r\nimport { CartService } from 'src/app/services/cart.service';\r\nimport { BaseComponent } from 'src/app/shared/base.component';\r\nimport { environment } from 'src/environments/environment';\r\n\r\ndeclare var UIkit: any;\r\n\r\n@Component({\r\n  selector: 'app-profiles',\r\n  templateUrl: './profiles.component.html',\r\n  styleUrls: ['./profiles.component.scss']\r\n})\r\nexport class ProfilesComponent extends BaseComponent implements OnInit {\r\n\r\n  assetsUrl: string = environment.assetsUrl;\r\n\r\n  userInfo: User;\r\n\r\n  formInstance: FormGroup = this.fb.group({\r\n    UserName: [''],\r\n    FirstName: ['', [Validators.required]],\r\n    LastName: ['', [Validators.required]],\r\n    PhoneNumber: ['', [Validators.required]],\r\n    Email: ['', [Validators.required]]\r\n  })\r\n\r\n  get isUserLogged(): boolean {\r\n    return this.authService.currentUserValue != null && this.authService.currentUserValue.requireOTP === \"False\";\r\n  }\r\n\r\n  get cartCount(): number {\r\n    return this.cartService.getCartCount();\r\n  }\r\n\r\n  constructor(protected injector: Injector, private cartService: CartService,\r\n    private authService: AuthenticationService,\r\n    private userrService: UserService,\r\n    private userService: UserService) {\r\n    super(injector);\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.spinnerOptions.bdColor = 'rgba(0,0,0,0.5)';\r\n    this.spinnerOptions.color = 'rgba(256,256,256,0.8)';\r\n\r\n    this.loadCurrentUseerDetails();\r\n  }\r\n\r\n  loadCurrentUseerDetails(force: boolean = false) {\r\n    this.userrService.getCurrentUserDetails(force).subscribe(data => {\r\n      this.userInfo = data;\r\n      if (this.userInfo.PhoneNumber == null) {\r\n        this.userInfo.PhoneNumber = data.UserName;\r\n      }\r\n      this.formInstance.patchValue(this.userInfo);\r\n    });\r\n  }\r\n\r\n\r\n  logOutClick() {\r\n    this.showSpinner();\r\n    this.authService.logout().subscribe(res => {\r\n      this.router.navigate([\"\"], { replaceUrl: true })\r\n      this.hideSpinner()\r\n    });\r\n  }\r\n\r\n  submitForm() {\r\n    let editModal = 'edit-user'\r\n    this.userService.saveUserDetails(this.formInstance.value).subscribe((data) => {\r\n      if (data.IsSuccess) {\r\n        this.loadCurrentUseerDetails(true);\r\n        UIkit.modal('#' + editModal).hide();\r\n      }\r\n    })\r\n  }\r\n\r\n}\r\n","<activity>\r\n\r\n    <ngx-spinner [name]=\"loadSpinner\" [fullScreen]=\"false\">\r\n    </ngx-spinner>\r\n\r\n    <app-mb-header-nav [title]=\"productList.length == 0 ? 'Search Results' : header\"></app-mb-header-nav>\r\n\r\n    <layout (scroll)=\"onScroll($event)\">\r\n        <br/>\r\n \r\n        <div class=\"uk-container uk-container-xlarge cd-container\" >\r\n\r\n            <ng-container *ngIf=\"searchKey != ''\">\r\n                <div class=\"uk-text-left search-result\">\r\n                    Showing Result For <span> \"{{ searchKey }}\"</span>\r\n                </div>\r\n                <br />\r\n            </ng-container>\r\n\r\n            <div class=\"group-grid\">\r\n \r\n            </div>\r\n            \r\n           \r\n            <app-product-list [productList]=\"productList\">\r\n            </app-product-list>\r\n        </div>\r\n\r\n    </layout>\r\n</activity>","import { Component, Injector, OnInit } from '@angular/core';\r\nimport { ResponseObject } from 'src/app/models/common';\r\nimport { Product, ProductFilter } from 'src/app/models/product';\r\nimport { ProductsService } from 'src/app/services/api-services/products.service';\r\nimport { fadeInOutAmination, openCloseAnimation } from 'src/app/shared/animations';\r\nimport { BaseComponent } from 'src/app/shared/base.component';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-search-result',\r\n  templateUrl: './search-result.component.html',\r\n  styleUrls: ['./search-result.component.scss'],\r\n  animations: [\r\n    openCloseAnimation,\r\n    fadeInOutAmination\r\n  ]\r\n})\r\nexport class SearchResultComponent extends BaseComponent implements OnInit {\r\n  \r\n  productFilter: ProductFilter = new ProductFilter();\r\n  productList: Product[] = [];\r\n\r\n  searchKey: string = \"\";\r\n  \r\n  header: string = \"Search Results\";\r\n  isNoMore: boolean = false;\r\n  \r\n  constructor(protected injector: Injector, \r\n    private productService: ProductsService) {\r\n    super(injector);\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n\r\n    \r\n    this.route.queryParamMap.subscribe(res => {\r\n\r\n      this.searchKey = res.get('q') ?? '';\r\n      this.loadProductFromStart();\r\n    })\r\n  }\r\n\r\n  loadProductFromStart() {\r\n\r\n    this.isNoMore = false;\r\n    this.productList = [];\r\n    this.productFilter.PageNumber = -1;\r\n    this.productFilter.Search = this.searchKey;\r\n    this.showSpinner();\r\n    this.loadProducts();\r\n  }\r\n\r\n  loadProducts() {\r\n    this.productFilter.PageSize = 20;\r\n    this.productFilter.PageNumber++;\r\n\r\n    this.productService.getProductList(this.productFilter).subscribe((res: ResponseObject<Product[]>) => {\r\n      let data = res.Data ?? [];\r\n\r\n      if (!environment.production) {\r\n        console.log(\"Products Loaded: \");\r\n        console.log(data);\r\n      }\r\n      let products: Product[] = this.processProductList(data);\r\n      products.forEach(item => {\r\n        this.productList.push(item);\r\n      })\r\n      this.isNoMore = this.productList.length > 0 && products.length == 0;\r\n    })\r\n  }\r\n\r\n  processProductList(list: Product[]): Product[] {\r\n    let _res: Product[] = []\r\n    list.forEach(item => {\r\n      let images: string[] = [];\r\n      item.ProductImages.forEach(img => {\r\n        images.push(img.replace('~', ''));\r\n      });\r\n      item.ProductImages = images\r\n      _res.push(item);\r\n    });\r\n    return _res;\r\n  }\r\n\r\n  onScroll(event: any) {\r\n    if (event.target.offsetHeight + event.target.scrollTop >= event.target.scrollHeight - 5 && !this.isNoMore) {\r\n      this.loadProducts();\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"uk-container uk-container-xlarge uk-padding-remove main-container\">\r\n    <nav class=\"uk-navbar-container uk-margin search-nav\" uk-navbar=\"mode: click\">\r\n        <div class=\"uk-navbar-left bg-gray\">\r\n            <div class=\"uk-navbar-item search-item active\">\r\n                <form [formGroup]=\"formInstance\" class=\"search-form\" (ngSubmit)=\"searchPerformed()\"\r\n                    class=\"uk-search uk-search-default search-input\">\r\n                    <a (click)=\"searchBox.focus(); searchPerformed()\" class=\"uk-search-icon-flip\" uk-search-icon></a>\r\n                    <input #searchBox [formControlName]=\"'Search'\" class=\"uk-search-input \" type=\"search\"\r\n                        placeholder=\"Search\">\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </nav>\r\n    <div class=\"recent-grid uk-padding-remove-bottom uk-padding-top-remove\">\r\n        <table class=\"uk-table uk-table-small uk-table-divider recent-table uk-margin-remove\">\r\n            <tbody>\r\n                <ng-container *ngFor=\"let searchItem of recentSearches\">\r\n                    <tr (click)=\"searchCtrl?.patchValue(searchItem)\">\r\n                        <td class=\"history-icon\"><span class=\"material-icons-outlined\">\r\n                                history\r\n                            </span></td>\r\n                        <td class=\"history-name\">{{ searchItem }}</td>\r\n                        <td class=\"history-fill\"><span class=\"material-icons-outlined\">\r\n                                north_west\r\n                            </span></td>\r\n                    </tr>\r\n                </ng-container>\r\n                <tr class=\"clear-all uk-padding-remove-bottom\" *ngIf=\"recentSearches.length > 0\">\r\n                    <td class=\"uk-padding-remove-bottom\" colspan=\"3\" (click)=\"recentSearches = []\"> <small> Clear</small>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n    <div class=\"suggestion-grid uk-padding-remove-top\">\r\n        <table class=\"uk-table uk-table-small uk-table-divider uk-margin-remove suggest-table\">\r\n\r\n            <tbody>\r\n                <tr *ngFor=\"let product of productList\">\r\n                    <td class=\"img-td\">\r\n                        <img [attr.src]=\"uploadsUrl + product.ProductImages[0]\">\r\n                    </td>\r\n                    <td (click)=\"searchPerformed(product.ProductName)\" class=\"name-td\"> {{ product.ProductName }} <br>\r\n                        in <span class=\"category-name\"> {{ product.SubCategoryName }}</span></td>\r\n                </tr>\r\n                <tr class=\"search-tr\" *ngIf=\"searchCtrl?.value != '' && searchCtrl?.value.length > 0\">\r\n                    <td class=\"img-td\"><span uk-icon=\"icon:search;ratio: 0.8;\"></span></td>\r\n                    <td class=\"name-td\" (click)=\"searchPerformed()\"><span> Search all</span> {{ searchCtrl != null ?\r\n                        searchCtrl?.value : '' }}</td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n</div>","import { AfterViewInit, Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { AbstractControl, FormBuilder, FormControl, FormGroup } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { debounceTime, finalize, switchMap, tap } from 'rxjs/operators';\r\nimport { ResponseObject } from 'src/app/models/common';\r\nimport { Product, ProductFilter } from 'src/app/models/product';\r\nimport { ProductsService } from 'src/app/services/api-services/products.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\ndeclare var UIkit: any;\r\n\r\n@Component({\r\n  selector: 'app-search-view',\r\n  templateUrl: './search-view.component.html',\r\n  styleUrls: ['./search-view.component.scss']\r\n})\r\nexport class SearchViewComponent implements OnInit, AfterViewInit {\r\n\r\n  @ViewChild(\"searchBox\") private searchElement: ElementRef;\r\n\r\n  formInstance: FormGroup = this.fb.group({\r\n    Search: ['']\r\n  })\r\n\r\n  get searchCtrl(): AbstractControl | null {\r\n    return this.formInstance.get(\"Search\");\r\n  }\r\n\r\n  get recentSearches(): string[] {\r\n    let searches = <string[]>JSON.parse(localStorage.getItem(\"recentSearches\") ?? \"[]\");\r\n    return searches;\r\n  }\r\n\r\n  set recentSearches(searches: string[]) {\r\n    localStorage.setItem(\"recentSearches\", JSON.stringify(searches));\r\n  }\r\n\r\n  addToRecentSearches(searchText: string) {\r\n    let searches = this.recentSearches;\r\n    if (searches.length > 2) {\r\n      searches.splice(searches.length -1, 1);\r\n    }\r\n    if (searches != null && searches.findIndex(j => j.toLowerCase() == searchText.toLowerCase()) == -1) {\r\n      searches = [searchText, ...searches];\r\n      this.recentSearches = searches;\r\n    }\r\n  }\r\n\r\n  productList: Product[] = [];\r\n\r\n  isLoading: boolean = false;\r\n\r\n  errorMsg: string = \"\";\r\n\r\n  productFilter: ProductFilter = new ProductFilter();\r\n\r\n  uploadsUrl: string = environment.uploadsUrl;\r\n\r\n  constructor(private productService: ProductsService, private router: Router,\r\n    private fb: FormBuilder) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.productFilter.Search = \"\";\r\n    this.productFilter.PageSize = 10;\r\n\r\n    this.searchCtrl?.valueChanges\r\n      .pipe(\r\n        debounceTime(1000),\r\n        tap(() => {\r\n          this.errorMsg = \"\";\r\n          this.productList = [];\r\n          this.isLoading = true;\r\n        }),\r\n        switchMap(value => {\r\n\r\n          this.productFilter.Search = value\r\n          this.productFilter.PageSize = 5;\r\n          return this.productService.getProductList(this.productFilter)\r\n            .pipe(\r\n              finalize(() => {\r\n                this.isLoading = false\r\n              }),\r\n            )\r\n        })\r\n      )\r\n      .subscribe((res: ResponseObject<Product[]>) => {\r\n        if (res.Data == undefined) {\r\n          // this.errorMsg = data['Error'];\r\n          this.productList = [];\r\n        } else {\r\n          this.errorMsg = \"\";\r\n          this.productList = this.processProductList(res.Data);\r\n        }\r\n\r\n        console.log(\"Search Result: \" + this.productList);\r\n      });\r\n  }\r\n\r\n\r\n  ngAfterViewInit() {\r\n    // Otherwise Angular throws error: Expression has changed after it was checked.\r\n    window.setTimeout(() => {\r\n      this.searchElement.nativeElement.focus();\r\n    });\r\n  }\r\n\r\n\r\n  processProductList(list: Product[]): Product[] {\r\n    let _res: Product[] = []\r\n    list.forEach(item => {\r\n      let images: string[] = [];\r\n      item.ProductImages.forEach(img => {\r\n        images.push(img.replace('~', ''));\r\n      });\r\n      item.ProductImages = images\r\n      _res.push(item);\r\n    });\r\n    return _res;\r\n  }\r\n\r\n  searchPerformed(res?: string) {\r\n    let q = res;\r\n    if (q == null) {\r\n      q = this.searchCtrl?.value;\r\n    }\r\n    if(q == \"\") return;\r\n    if (q != null) this.addToRecentSearches(q);\r\n    this.router.navigateByUrl('/ps?q=' + q)\r\n  }\r\n}\r\n","import { transition, trigger, style, query, group, animateChild, animate, state } from \"@angular/animations\";\r\n\r\nexport const openCloseAnimation = trigger('openClose', [\r\n    transition(':enter', [\r\n        style({\r\n            position: 'relative',\r\n            opacity: 0.7, left: '100%'\r\n        }),\r\n        animate('300ms', style({\r\n            position: 'relative', opacity: 1, left: '0px'\r\n        }))\r\n    ]\r\n    ),\r\n    transition(':leave',\r\n        [style({ opacity: 1, left: '100%' }),\r\n        animate('300ms', style({ opacity: 0, left: '0px' }))]\r\n    )\r\n]);\r\n\r\nexport const fadeInOutAmination = trigger('fadeInOut', [\r\n    transition(':enter', [\r\n        style({ \r\n            opacity: 0.5, \r\n        }),\r\n        animate('300ms', style({  opacity: 1,  }))\r\n    ]\r\n    ),\r\n    transition(':leave',\r\n        [style({ opacity: 1,  }),\r\n        animate('300ms', style({  opacity: 0,  }))]\r\n    )\r\n]);\r\n// export const fadeAnimation =\r\n//     trigger('openClose', [\r\n//         transition('* => *', [\r\n//             style({ position: 'relative', maxWidth: '100%' }),\r\n//             query(':enter, :leave', [\r\n//                 style({\r\n//                     position: 'absolute',\r\n//                     top: 0,\r\n//                     left: 0,\r\n//                     opacity: 1,\r\n//                     width: '100%'\r\n//                 })\r\n//             ]),\r\n//             query(':enter', [\r\n//                 style({ left: '100%' })\r\n//             ]),\r\n//             query(':leave', animateChild(), { optional: true }),\r\n//             group([\r\n//                 query(':leave', [\r\n//                     animate('300ms ease-out', style({ opacity: 0.7 }))\r\n//                 ], { optional: true }),\r\n//                 query(':enter', [\r\n//                     animate('400ms ease-in', style({ left: 0 }))\r\n//                 ])\r\n//             ]),\r\n//             query(':enter', animateChild(), { optional: true }),\r\n//         ]),\r\n//         transition('* => *', [\r\n//             style({ position: 'relative', maxWidth: '100%' }),\r\n//             query(':enter, :leave', [\r\n//                 style({\r\n//                     position: 'absolute',\r\n//                     top: 0,\r\n//                     left: 0,\r\n//                     opacity: 1,\r\n//                     width: '100%'\r\n//                 })\r\n//             ]),\r\n//             query(':leave', animateChild(), { optional: true }),\r\n//             group([\r\n//                 query(':leave', [\r\n//                     animate('400ms ease-out', style({\r\n//                         opacity: 0.7, left: '100%',\r\n//                     }))\r\n//                 ], { optional: true })\r\n//             ]),\r\n//         ]),\r\n//     ]);\r\n\r\nexport const flyInOutAnimation =\r\n    trigger('routeAnimations', [\r\n        transition('MainPage => *', [\r\n            style({ position: 'relative', maxWidth: '100%' }),\r\n            query(':enter, :leave', [\r\n                style({\r\n                    position: 'absolute',\r\n                    top: 0,\r\n                    left: 0,\r\n                    opacity: 1,\r\n                    width: '100%'\r\n                })\r\n            ]),\r\n            query(':enter', [\r\n                style({ left: '100%' })\r\n            ]),\r\n            query(':leave', animateChild(), { optional: true }),\r\n            group([\r\n                query(':leave', [\r\n                    animate('300ms ease-out', style({ opacity: 0.7 }))\r\n                ], { optional: true }),\r\n                query(':enter', [\r\n                    animate('400ms ease-in', style({ left: 0 }))\r\n                ])\r\n            ]),\r\n            query(':enter', animateChild(), { optional: true }),\r\n        ]),\r\n        transition('* => MainPage', [\r\n            style({ position: 'relative', maxWidth: '100%' }),\r\n            query(':enter, :leave', [\r\n                style({\r\n                    position: 'absolute',\r\n                    top: 0,\r\n                    left: 0,\r\n                    opacity: 1,\r\n                    width: '100%'\r\n                })\r\n            ]),\r\n            query(':leave', animateChild(), { optional: true }),\r\n            group([\r\n                query(':leave', [\r\n                    animate('400ms ease-out', style({\r\n                        opacity: 0.7, left: '100%',\r\n                    }))\r\n                ], { optional: true })\r\n            ]),\r\n        ]),\r\n\r\n    ]);\r\n\r\n"]}